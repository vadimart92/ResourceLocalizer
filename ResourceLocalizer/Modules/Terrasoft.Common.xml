<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Terrasoft.Common</name>
    </assembly>
    <members>
        <member name="T:Terrasoft.Common.CompressionUtilities">
            <summary>
            Предоставляет методы работы по упаковке (сжатию) и распаковке данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.CompressionUtilities.Zip(System.Byte[])">
            <summary>
            Выполняет сжатие (упаковку) массива байтов.
            </summary>
            <param name="unzippedBytes">Массив байтов для сжатия (упаковки).</param>
            <returns>Массив сжатых байтов.</returns>
        </member>
        <member name="M:Terrasoft.Common.CompressionUtilities.Zip(System.String)">
            <summary>
            Выполняет сжатие (упаковку) переданной строки.
            </summary>
            <param name="unzippedText">Строка для сжатия (упаковки).</param>
            <returns>Сжатое строковое представление переданного параметра <paramref name="unzippedText"/> в 
            кодировке Base64.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.CompressionUtilities.UnZip(System.String)">
            <summary>
            Выполняет распаковку переданной строки.
            </summary>
            <param name="zippedText">Упакованная (сжатая) строка в кодировке Base64.</param>
            <returns>Распакованное строковое представление переданного параметра <paramref name="zippedText"/> 
            в кодировке Unicode.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.CompressionUtilities.UnZip(System.Byte[])">
            <summary>
            Выполняет распаковку переданного массива байтов.
            </summary>
            <param name="zippedBytes">Массив байтов для распаковки.</param>
            <returns>Массив распакованных байтов.</returns>
        </member>
        <member name="T:Terrasoft.Common.AdaptiveStringBuilder">
            <summary>
            Предоставляет изменяемую строку символов с оптимизированным механизмом построения строки. 
            Этот класс не наследуется.</summary>
            <remarks>Данный класс предоставляет строковый объект, значение которого является изменяемой последовательностью 
            знаков.Значение является изменяемым, то есть после создания его можно изменить путем добавления, удаления, 
            замены или вставки знаков. Класс использует оптимизированный механизм построения строки на основе сбора 
            статистики использования экземпляра класса.</remarks>
        </member>
        <member name="F:Terrasoft.Common.AdaptiveStringBuilder.DefaultCapacity">
            <summary>
            Количество знаков, которое по умолчанию может содержаться в памяти, назначенной текущим экземпляром.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AdaptiveStringBuilder.LargeObjectSize">
            <summary>
            Максимальная величина фрагмента строки.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AdaptiveStringBuilder._lengthStatistics">
            <summary>
            История статистики использования экземпляра класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AdaptiveStringBuilder._name">
            <summary>
            Имя - идентификатор экземпляра класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>. 
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AdaptiveStringBuilder._currentBuilder">
            <summary>
            Экземпляр класса <see cref="P:Terrasoft.Common.AdaptiveStringBuilder.StringBuilder"/>, представляющий изменяемую строку символов. 
            </summary>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </summary>
            <param name="name">Имя - идентификатор экземпляра.</param>
            <exception cref="T:System.ArgumentException">При передаче в качестве параметра <paramref name="name"/>
            пустой строки.</exception>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.Finalize">
            <summary>
            Освобождает ресурсы и выполняет завершающие действия над объектом класса 
            <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </summary>
            <remarks>В деструкторе класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/> вызывается метод <c>Dispose()</c>,
            который обновляет статистику по экземпляру и освобождает ресурсы. 
            </remarks>
        </member>
        <member name="F:Terrasoft.Common.AdaptiveStringBuilder._chunks">
            <summary>
            Список фрагментов, из которых строится результирующая строка.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.GetRecommendedCapacity(System.String,System.Int32)">
            <summary>
            Возвращает оптимальный объем памяти с учетом статистики использования объекта.
            </summary>
            <param name="stringBuilderName">Имя экземпляра класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>, для которого 
            выдеяется память.</param>
            <param name="alreadyAllocated">Объем выделенной ранее памяти для данного экземпляра класса 
            <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/></param>
            <returns>Размер оптимального объема памяти в байтах.</returns>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.SetLength(System.String,System.Int32)">
            <summary>
            Обновление статистики по экземпляру класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </summary>
            <param name="stringBuilderName">Имя экземпляра класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/></param>
            <param name="length">Размер выделленого объема пямяти для данного экземпляра 
            класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/> в байтах.</param>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.AllocateChunk(System.Int32)">
            <summary>
            Создает новый фрагмент строки.
            </summary>
            <param name="requiredLength">Требуемый размер строки.</param>
            <remarks>Метод создает новый экземпляр класса <see cref="P:Terrasoft.Common.AdaptiveStringBuilder.StringBuilder"/>, размер которого определяется
            как максимальное значение между значением <paramref name="requiredLength"/> и значением, возвращаемым 
            функцией <c>GetRecommendedCapacity(string, int)</c>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.GetAllChunksLength">
            <summary>
            Возвращает общую длину всех фрагментов строки.
            </summary>
            <returns>Длина всех фрагментов строки</returns>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.InsertAtBegin(System.String)">
            <summary>
            Вставляет копию указанной строки в начало данного экземпляра.
            </summary>
            <param name="value">Вставляемая строка.</param>
            <returns>Ссылка на этот экземпляр после завершения операции вставки.</returns>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.Append(System.String)">
            <summary>
            Добавляет копию указанной строки к данному экземпляру.
            </summary>
            <param name="value">Добавляемая строка.</param>
            <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.Append(System.String[])">
            <summary>
            Добавляет список строк к данному экземпляру.
            </summary>
            <param name="values">Список добавляемых строк.</param>
            <returns>Ссылка на этот экземпляр после завершения операции добавления.</returns>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.Dispose">
            <summary>
            Обновляет статистику использования экземпляра и освобождает ресурсы.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.AdaptiveStringBuilder.StringBuilder">
            <summary>
            Экзмепляр класса <see cref="P:Terrasoft.Common.AdaptiveStringBuilder.StringBuilder"/>, представляющий реузльтирующую модифицированную строку.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.AdaptiveStringBuilder.Chunks">
            <summary>
            Возвращает массив фрагментов строк.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.AdaptiveStringBuilder.SbStatistics">
            <summary>
            Статистика использования данного экземпляра класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.SbStatistics.#ctor(System.Int32)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder.SbStatistics"/>, используя указанный размер строки 
            данного экземпляра класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </summary>
            <param name="length">Начальный размер строки данного экземпляра класса 
            <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </param>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilder.SbStatistics.Update(System.Int32)">
            <summary>
            Обновляет статистику по данному экземпляру класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/> в соответствии с 
            заданным размером строки.</summary>
            <param name="length">Размер строки.</param>
        </member>
        <member name="P:Terrasoft.Common.AdaptiveStringBuilder.SbStatistics.Cnt">
            <summary>
            Возвращает или задает количество использований данного экземпляра 
            класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.</summary>
            <value>
            Количество использований экземпляра класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.AdaptiveStringBuilder.SbStatistics.Min">
            <summary>
            Возвращает или задает минимальный размер строки данного экземпляра 
            класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.</summary>
            <value>
            Минимальный размер строки экземпляра класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.AdaptiveStringBuilder.SbStatistics.Max">
            <summary>
            Возвращает или задает максимальный размер строки данного экземпляра 
            класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.</summary>
            <value>
            Максимальный размер строки экземпляра класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.AdaptiveStringBuilder.SbStatistics.Avg">
            <summary>
            Возвращает средний размер строки данного экземпляра класса <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.AdaptiveStringBuilderUtilities">
            <summary>
            Содержит служебные методы для работы с классом <see cref="T:Terrasoft.Common.AdaptiveStringBuilder"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilderUtilities.AppendCollection(Terrasoft.Common.AdaptiveStringBuilder,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Добавляет коллекцию строк к данному экземпляру.
            </summary>
            <param name="source">Экземпляр, к которому осуществляется добавление.</param>
            <param name="collection">Добавляемая коллекция строк.</param>
            
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilderUtilities.AppendCollection``1(Terrasoft.Common.AdaptiveStringBuilder,System.Collections.Generic.ICollection{``0},System.Func{``0,System.String})">
            <summary>
            Добавляет к данному экземпляру коллекцию объектов, к котрорым применима функция определенного вида.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Экземпляр, к которому осуществляется добавление.</param>
            <param name="collection">Добавляемая коллекция объектов.</param>
            <param name="func">Вид функции.</param>
            <remarks>Расширяемый метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.AdaptiveStringBuilderUtilities.DecorateWithSimpleTemplate(Terrasoft.Common.AdaptiveStringBuilder,System.String)">
            <summary>
            Форматирование данного экземпляра в соответствии с шаблоном.
            </summary>
            <param name="source">Форматируемый экземпляр.</param>
            <param name="template">Шаблон форматирования.</param>
            <remarks>Поддерживает шаблоны вида "begin{0}end".</remarks>
        </member>
        <member name="T:Terrasoft.Common.ArrayUtilities">
            <summary>
            Содержит служебные методы для работы с массивами
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ArrayUtilities.Equals``1(``0[],``0[])">
            <summary>
            Определяет, считаются ли равными указанные массивы.
            </summary>
            <typeparam name="T">Элементы массива могут быть любых типов.</typeparam>
            <param name="source">Массив, который сравнивается.</param>
            <param name="target">Массив, с которым идет сравнение.</param>
            <returns><c>true</c>, если указанные объекты равны; в противном случае — <c>false</c>.
            </returns>
            <remarks><para>Перегруженный метод.</para><para>Для сравнения используется сравнение
            по умолчанию для соответствующего
            типа элемента массива.</para></remarks>
        </member>
        <member name="M:Terrasoft.Common.ArrayUtilities.Equals``1(``0[],``0[],System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Определяет, считаются ли равными указанные массивы в соответствии с настройками сравнения.
            </summary>
            <typeparam name="T">Элементы массива могут быть любых типов.</typeparam>
            <param name="source">Массив, который сравнивается.</param>
            <param name="target">Массив, с которым идет сравнение.</param>
            <param name="comparer">Пользовательский компаратор, реализующий 
            интерфейс <see cref="T:System.Collections.IEqualityComparer"/>.</param>
            <returns><c>true</c>, если указанные объекты равны; в противном случае — <c>false</c>.</returns>
            <remarks><para>Перегруженный метод.</para><para>Для сравнения используется класс, реализующий интерфейс
            IEqualityComparer&lt;T&gt;.</para></remarks>
        </member>
        <member name="M:Terrasoft.Common.ArrayUtilities.GetElement``1(``0[],System.Int32,``0)">
            <summary>
            Безопасно возвращает элемент массива если индекс <paramref name="index"/> входит в граници массива, если
            индекс выходит за границы массива, то возвращается значение по умолчанию <paramref name="defaultValue"/>.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Массив.</param>
            <param name="index">Индекс элемента в массиве.</param>
            <param name="defaultValue">Значение по умолчанию.</param>
            <returns>
            Элемент массива, если индекс входит в границы массива; в противном случае - значение по умолчанию.
            </returns>
        </member>
        <member name="T:Terrasoft.Common.CompilerErrorCollectionUtilities">
            <summary>
            Предоставляет методы работы с коллекциями ошибок и предупреждений компилятора.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.FeatureUtilities.GetVersionWithRequiredPrefix">
            <summary>
            Возвращаето версию продукта с обязательным префиксом для всех типов элементов.
            </summary>
            <returns>Версия продукта с обязательным префиксом для всех типов элементов.</returns>
        </member>
        <member name="T:Terrasoft.Common.ResultMessage">
            <summary>
            Содержит текст сообщения и его тип
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ResultMessage.#ctor(Terrasoft.Common.MessageType,System.String)">
            <summary>
            Инициализирует экземпляр <see cref="T:Terrasoft.Common.ResultMessage"/> с заданным типом и текстом сообщения.
            </summary>
            <param name="messageType">Тип сообщения.</param>
            <param name="message">Текст сообщения.</param>
        </member>
        <member name="P:Terrasoft.Common.ResultMessage.MessageType">
            <summary>
            Тип сообщения.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResultMessage.Message">
            <summary>
            Текст сообщения.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ResultMessageCollection">
            <summary>
            Коллекция сообщений <see cref="T:Terrasoft.Common.ResultMessage"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ResultMessageCollection.AddError(System.String)">
            <summary>
            Добавляет в коллекцию сообщение с типом <see cref="F:Terrasoft.Common.MessageType.Error"/>.
            </summary>
            <param name="message">Текст сообщения.</param>
        </member>
        <member name="M:Terrasoft.Common.ResultMessageCollection.AddInfo(System.String)">
            <summary>
            Добавляет в коллекцию сообщение с типом <see cref="F:Terrasoft.Common.MessageType.Information"/>.
            </summary>
            <param name="message">Текст сообщения.</param>
        </member>
        <member name="M:Terrasoft.Common.ResultMessageCollection.AddWarning(System.String)">
            <summary>
            Добавляет в коллекцию сообщение с типом <see cref="F:Terrasoft.Common.MessageType.Warning"/>.
            </summary>
            <param name="message">Текст сообщения.</param>
        </member>
        <member name="T:Terrasoft.Common.FormulaUtilities">
            <summary>
            Содержит статические математические функции, отсутствующие в System.Math.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Mod(System.Int32,System.Int32)">
            <summary>
            Деление по модулю двух целых чисел.
            </summary>
            <param name="dividend">Делимое.</param>
            <param name="divisor">Делитель.</param>
            <returns>Остаток от деления.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Mod(System.Int64,System.Int64)">
            <summary>
            Деление по модулю двух 64-битных целых чисел.
            </summary>
            <param name="dividend">Делимое.</param>
            <param name="divisor">Делитель.</param>
            <returns>Остаток от деления.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Mod(System.Single,System.Single)">
            <summary>
            Деление по модулю двух чисел с плавающей точкой.
            </summary>
            <param name="dividend">Делимое.</param>
            <param name="divisor">Делитель.</param>
            <returns>Остаток от деления.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Mod(System.Double,System.Double)">
            <summary>
            Деление по модулю двух чисел с плавающей точкой двойной точности.
            </summary>
            <param name="dividend">Делимое.</param>
            <param name="divisor">Делитель.</param>
            <returns>Остаток от деления.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Mod(System.Decimal,System.Decimal)">
            <summary>
            Деление по модулю двух чисел типа <see cref="T:System.Decimal"/>.
            </summary>
            <param name="dividend">Делимое.</param>
            <param name="divisor">Делитель.</param>
            <returns>Остаток от деления.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Min(System.Int32[])">
            <summary>
            Возвращает меньшее из набора целых чисел.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Минимальное число из набора целых чисел <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Min(System.Int64[])">
            <summary>
            Возвращает меньшее из набора 64-битных целых чисел.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Минимальное число из набора 64-битных целых чисел <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Min(System.Single[])">
            <summary>
            Возвращает меньшее из набора чисел с плавающей точкой.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Минимальное число из набора чисел с плавающей точкой <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Min(System.Double[])">
            <summary>
            Возвращает меньшее из набора чисел с плавающей точкой двойной точности.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Минимальное число из набора чисел с плавающей точкой двойной точности <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Min(System.Decimal[])">
            <summary>
            Возвращает меньшее из набора чисел типа <see cref="T:System.Decimal"/>.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Минимальное число из набора чисел <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Min(System.DateTime[])">
            <summary>
            Возвращает меньшую из двух дат.
            </summary>
            <param name="values">Набор сравниваемых дат.</param>
            <returns>Минимальная дата из набора <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Max(System.Int32[])">
            <summary>
            Возвращает большее из набора целых чисел.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Максимальное число из набора целых чисел <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Max(System.Int64[])">
            <summary>
            Возвращает большее из набора 64-битных целых чисел.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Максимальное число из набора 64-битных целых чисел <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Max(System.Single[])">
            <summary>
            Возвращает большее из набора чисел с плавающей точкой.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Максимальное число из набора чисел с плавающей точкой <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Max(System.Double[])">
            <summary>
            Возвращает большее из набора чисел с плавающей точкой двойной точности.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Максимальное число из набора чисел с плавающей точкой двойной точности <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Max(System.Decimal[])">
            <summary>
            Возвращает большее из набора чисел типа <see cref="T:System.Decimal"/>.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Максимальное число из набора чисел <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Max(System.DateTime[])">
            <summary>
            Возвращает большую из двух дат.
            </summary>
            <param name="values">Набор сравниваемых дат.</param>
            <returns>Максимальная дата из набора <paramref name="values"/>
            по результатам сравнения.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Avg(System.Int32[])">
            <summary>
            Возвращает среднее арифметическое набора целых чисел.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Среднее арифметическое</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Avg(System.Int64[])">
            <summary>
            Возвращает среднее арифметическое набора 64-битных целых чисел.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Среднее арифметическое набора чисел <paramref name="values"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Avg(System.Double[])">
            <summary>
            Возвращает среднее арифметическое набора чисел с плавающей точкой.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Среднее арифметическое набора чисел <paramref name="values"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.FormulaUtilities.Avg(System.Decimal[])">
            <summary>
            Возвращает среднее арифметическое набора чисел типа <see cref="T:System.Decimal"/>.
            </summary>
            <param name="values">Набор сравниваемых чисел.</param>
            <returns>Среднее арифметическое набора чисел <paramref name="values"/>.</returns>
        </member>
        <member name="T:Terrasoft.Common.CollectionUtilities">
            <summary>
            Предоставляет служебные методы для работы с коллекциями.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Добавляет перечень элементов в указанный источник.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Источник.</param>
            <param name="collection">Перечень элементов - класс, реализующий интерфейс IEnumerable&lt;T&gt;.</param>
            <remarks>Расширяемый тип для класса Collection.</remarks>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.RemoveRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Удаляет перечень элементов из указанного источника.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Источник.</param>
            <param name="collection">Перечень элементов - класс, реализующий интерфейс IEnumerable&lt;T&gt;.</param>
            <remarks>Расширяемый тип для класса Collection.</remarks>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.AddIfNotExists``1(System.Collections.Generic.ICollection{``0},``0)">
            <summary>
            Добавляет элемент в указанный источник, если он не входит в состав источника.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Источник.</param>
            <param name="item">Элемент.</param>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.AddRangeIfNotExists``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Добавляет элементы коллекции в указанный источник, если они не входят в состав источника.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Источник.</param>
            <param name="collection">Коллекция.</param>
            <remarks>Расширяемый тип для класса Collection.</remarks>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.Find``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
            Поиск элемента по указанному критерию.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Элемент - объект поиска.</param>
            <param name="match">Критерий поиска.</param>
            <returns>Найденные объекты.</returns>
            <exception cref="T:System.ArgumentNullException">Если параметр <paramref name="match"/>, задающий критерий поиска,
            пустой (<c>null</c>)</exception>
            <remarks>Расширяемый тип для классов, реализующих интерфейс IEnumerable&lt;T&gt;.</remarks>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.Find``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0)">
            <summary>
            Поиск элемента по указанному критерию.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Объект поиска.</param>
            <param name="match">Критерий поиска.</param>
            <param name="defValue">Результат поиска по умолчанию.</param>
            <returns>Найденные объекты, если поиск был успешен; иначе - результат поиска 
            по умолчанию (<paramref name="defValue"/>).</returns>
            <exception cref="T:System.ArgumentNullException">Если параметр <paramref name="match"/>, задающий критерий поиска,
            пустой.</exception>
            <remarks>Расширяемый тип для классов, реализующих интерфейс IEnumerable.</remarks>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Назначает метод каждому элементу источника.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Источник.</param>
            <param name="action">Назначаемый метод.</param>
            <exception cref="T:System.ArgumentNullException">Если параметр <paramref name="action"/>, задающий 
            назначаемый метод, пустой.</exception>
            <remarks>Расширяемый тип для классов, реализующих интерфейс IEnumerable.</remarks>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},System.Action{``0})">
            <summary>
            Назначает метод каждому элементу источника, отвечающего заданному критерию.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Источник.</param>
            <param name="match">Критерий.</param>
            <param name="action">Назначаемый метод.</param>
            <exception cref="T:System.ArgumentNullException">Если один из передаваемых параметров (<paramref name="match"/>,
            <paramref name="action"/>) пустой.</exception>
            <remarks>Расширяемый тип для классов, реализующих интерфейс IEnumerable.</remarks>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.GetItemsString``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Возвращает перечень объектов в виде строки. В качестве разделителя выступает запятая.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Перечень объектов.</param>
            <returns>Строковое представление объектов</returns>
            <remarks>Расширяемый метод для классов, реализующих интерфейс IEnumerable.</remarks>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.GetItemsString``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Возвращает перечень объектов в виде строки. В качестве разделителя выступает <paramref name="delimiter"/>.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Перечень объектов.</param>
            <param name="delimiter">Разделитель.</param>
            <returns>Строковое представление объектов.</returns>
            <remarks>Расширяемый метод для классов, реализующих интерфейс IEnumerable.</remarks>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.Contains(System.Collections.Generic.IEnumerable{System.Guid},System.Guid)">
            <summary>
            Определяет, принадлежит ли экземпляр GUID заданному перечню <see cref="T:System.Guid"/>.
            </summary>
            <param name="source">Перечень <see cref="T:System.Guid"/>.</param>
            <param name="item">Экземпляр GUID, который необходимо найти в <see cref="T:System.Guid"/></param>
            <returns>
            <c>true</c>, если <paramref name="item"/> приналежит <paramref name="source"/>; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.IsNotEmpty(System.Collections.IEnumerable)">
            <summary>
            Определяет, является ли непустым заданный перечислитель.
            </summary>
            <param name="source">Перечислитель.</param>
            <returns>
            <c>true</c>, если перечислитель <paramref name="source"/> непустой; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.IsEmpty(System.Collections.IEnumerable)">
            <summary>
            Определяет, является ли заданный перечислитель пустым.
            </summary>
            <param name="source">Перечислитель.</param>
            <returns>
            <c>true</c>, если перечислитель <paramref name="source"/> пустой.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.IsNullOrEmpty(System.Collections.IEnumerable)">
            <summary>
            Определяет, является ли заданный перечислитель пустым или <c>null</c>.
            </summary>
            <param name="source">Перечислитель.</param>
            <returns>
            <c>true</c>, если перечислитель <paramref name="source"/> пустой или <c>null</c>; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.CompareZip``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,System.Boolean})">
            <summary>
            Сравнивает поэлементно две последовательности, используя указанную функцию предиката.
            </summary>
            <typeparam name="TFirst">Тип элементов первой входной последовательности.</typeparam>
            <typeparam name="TSecond">Тип элементов второй входной последовательности.</typeparam>
            <param name="source">Первая последовательность.</param>
            <param name="secondSource">Вторая последовательность.</param>
            <param name="comparePredicate">
            Функция, которая сравнивает соответствующие элементы последовательностей.
            </param>
            <remarks>
            При разном количестве элементов в коллекциях максимальное количество сравнений будет равняться 
            количеству элементов в меньшей коллекции.
            </remarks>
            <returns>
            <c>true</c>, если все элементы равны или <c>false</c> при первом несовпадении.
            </returns> 
        </member>
        <member name="M:Terrasoft.Common.CollectionUtilities.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})">
            <summary>
            Возвращает перечислитель элементов последовательности <paramref name="source"/>, которые отсутствуют в
            последовательности <paramref name="secondSource"/>, используя для определения равности предикат
            <paramref name="comparer"/>.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Первая последовательность.</param>
            <param name="secondSource">Вторая последовательность.</param>
            <param name="comparer">Функция, которая сравнивает элементы последовательностей.</param>
            <returns>
            Перечислитель, который содержит элементы из первой последовательности, которые отсутствуют во второй.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            Если аргумент <paramref name="source"/> или <paramref name="secondSource"/> равен <c>null</c>.
            </exception>
        </member>
        <member name="T:Terrasoft.Common.ColorUtilities">
            <summary>
            Предоставляет служебные методы для работы с цветовой палитрой.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ColorUtilities._regexHexNumber">
            <summary>
            Формат шестнадцатеричного представления цвета в модели RGB.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ColorUtilities.BrightnessDown(System.Drawing.Color,System.Byte)">
            <summary>
            Уменьшает яркость цвета на заданную величину.
            </summary>
            <param name="baseColor">Базовый цвет.</param>
            <param name="offset">Величина, определяющая уменьшение яркости цвета.</param>
            <returns>Экземпляр класса <see cref="T:System.Drawing.Color"/>, представляющий базовый цвет <paramref name="baseColor"/> 
            яркостью, уменьшенной на величину <paramref name="offset"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.ColorUtilities.StringToColor(System.String)">
            <summary>
            Возвращает цвет, заданный строкой его шестнадцатеричного представления в модели aRGB.
            </summary>
            <param name="hexNumberString">Строка шестнадцатеричного представления цвета в модели aRGB.</param>
            <returns>Экземпляр класса <see cref="T:System.Drawing.Color"/>, представленный строкой <paramref name="hexNumberString"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве значения <paramref name="hexNumberString"/>
            передается пустая строка или <c>null</c>.
            </exception>
        </member>
        <member name="T:Terrasoft.Common.CommandLine">
            <summary>
            Предоставляет методы работы с командной строкой.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.CommandLine._parameterNamePrefixes">
            <summary>
            Формат префикса параметра командной строки.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.CommandLine._parameters">
            <summary>
            Коллекция параметров командной строки.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.CommandLine.Load(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Загружает перечень параметров в командную строку.
            </summary>
            <param name="parametersData">Перечень загружаемых параметров.</param>
        </member>
        <member name="M:Terrasoft.Common.CommandLine.Load(System.String[])">
            <summary>
            Загружает список параметров в командную строку (список может быть пустым).
            </summary>
            <param name="parametersData">Список загружаемых параметров (может быть пустым).</param>
        </member>
        <member name="P:Terrasoft.Common.CommandLine.Parameters">
            <summary>
            Возвращает коллекцию параметров командной строки.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.CommandLine.HasParameters">
            <summary>
            Определяет, имеет ли командная строка параметры.
            </summary>
            <value>
            	<c>true</c> если командная строка имеет параметры; иначе - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLine.AllowUnnamedParameters">
            <summary>
            Возвращает или устанавливает значение, определяющее, поддерживает ли командная строка 
            неименованные параметры.
            </summary>
            <value>
            <c>true</c> если командная строка поддерживает неименованные параметры; иначе - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLine.AllowAdditionalParameters">
            <summary>
            Возвращает или устанавливает значение, определяющее, поддерживает ли командная строка дополнительные 
            параметры.
            </summary>
            <value>
            	<c>true</c> если командная строка поддерживает дополнительные параметры; иначе - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLine.Item(System.String)">
            <summary>
            Возвращает <see cref="T:Terrasoft.Common.CommandLineParameter"/> с заданным 
            именем <paramref name="parameterName"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.CommandLineParameter">
            <summary>
            Базовый класс параметра командной строки.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.CommandLineParameter.GetTypedValue``1">
            <summary>
            Возвращает тип значения.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <returns>Тип значения.</returns>
        </member>
        <member name="P:Terrasoft.Common.CommandLineParameter.Name">
            <summary>
            Возвращает или устанавливает имя параметра.
            </summary>
            <value>
            Имя параметра командной строки.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLineParameter.Description">
            <summary>
            Возвращает или устанавливает описание параметра командной строки.
            </summary>
            <value>
            Описание параметра командной строки.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLineParameter.IsRequired">
            <summary>
            Определяет, является ли параметр обязательным.
            </summary>
            <value>
            	<c>true</c> если параметр является обязательным; иначе - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLineParameter.DefValue">
            <summary>
            Возвращает или устанавливает для параметра значение по умолчанию.
            </summary>
            <value>
            Значение параметра по умолчанию.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLineParameter.IsSpecified">
            <summary>
            Определяет, является ли параметр определенным.
            </summary>
            <value>
            	<c>true</c> если параметр определенный; иначе - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLineParameter.IsValueSpecified">
            <summary>
            Определяет, является ли значение параметра определенным.
            </summary>
            <value>
            	<c>true</c> если значение параметра определено; иначе - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLineParameter.IsUnnamed">
            <summary>
            Определяет, является ли параметр неименованным.
            </summary>
            <value>
            	<c>true</c> если параметр является неименованным; иначе - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLineParameter.IsAdditional">
            <summary>
            Определяет, является ли параметр дополнительным.
            </summary>
            <value>
            	<c>true</c> если параметр является дополнительным; иначе - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Common.CommandLineParameter.Value">
            <summary>
            Возвращает или устанавливает значение параметра.
            </summary>
            <value>
            Значение параметра.
            </value>
        </member>
        <member name="T:Terrasoft.Common.CommandLineParameterCollection">
            <summary>
            Предоставляет методы работы с коллекцией параметров командной строки.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.CommandLineParameterCollection.FindByName(System.String)">
            <summary>
            Поиск в коллекции по имени параметра.
            </summary>
            <param name="name">Имя параметра.</param>
            <returns>Экземпляр класса <see cref="T:Terrasoft.Common.CommandLineParameter"/>, представляющий найденный параметр; 
            иначе - <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">Если имя передаваемого параметра <paramref name="name"/> пустое 
            или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Common.CommandLineParameterCollection.GetByName(System.String)">
            <summary>
            Возвращает из коллекции параметр с заданным именем.
            </summary>
            <param name="name">Имя параметра.</param>
            <returns>Экземпляр класса <see cref="T:Terrasoft.Common.CommandLineParameter"/>, представляющий найденный параметр.</returns>
            <exception cref="T:System.ArgumentNullException">Если передаваемый параметр <paramref name="name"/> пустой 
            или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если параметр с именем <paramref name="name"/> не найден 
            в коллекции.</exception>
        </member>
        <member name="T:Terrasoft.Common.EnumCommandLineParameter`1">
            <summary>
            Базовый класс для параметров командной строки типа перечисления.
            </summary>
            <typeparam name="TValues">Перечисление.</typeparam>
        </member>
        <member name="M:Terrasoft.Common.EnumCommandLineParameter`1.#ctor">
            <summary>
            Инициализирует экземпляр класса EnumCommandLineParameter.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.BoolCommandLineParameter">
            <summary>
            Базовый класс для параметров логического типа.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.DataConverter">
            <summary>
            Базовый класс преобразователя типов данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataConverter.ReadValue(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет чтение значения из заданного <see cref="T:Terrasoft.Common.DataReader"/> и преобразует его в 
            значение типа данного преобразователя.
            </summary>
            <param name="reader">Источник данных для преобразования.</param>
            <returns>Значение типа данного преобразователя.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataConverter.WriteValue(Terrasoft.Common.DataWriter,System.String,System.Object)">
            <summary>
            Выполняет преобразование значения заданного объекта в тип данного преобразователя и записывает его с 
            заданным именем в указанный поток вывода. 
            </summary>
            <param name="writer">Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/> для записи.</param>
            <param name="name">Имя объекта.</param>
            <param name="value">Значение объекта.</param>
        </member>
        <member name="T:Terrasoft.Common.DataReader">
            <summary>
            Базовый класс для классов, реализующих последовательное чтение данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataReader.Close">
            <summary>
            Закрывает текущий экземпляр <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataReader.Read">
            <summary>
            Перемещает текущую позицию в наборе данных к следующему свойству/атрибуту текущего уровня вложенности. 
            </summary>
            <returns>Строка с именем свойства/атрибута в позиции набора данных после выполнения метода либо 
            пустая строка, если достигнут конец набора данных.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.ReadInto">
            <summary>
            Перемещает текущую позицию в наборе данных на один уровень вложенности вниз.
            </summary>
            <returns>Строка с именем свойства/атрибута в позиции набора данных после выполнения метода либо
            пустая строка, если на текущем уровне нет вложенных свойств/атрибутов.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.ReadOut">
            <summary>
            Перемещает текущую позицию в наборе данных на один уровень вложенности вверх.
            </summary>
            <returns>Пустая строка. Чтобы получить имя следующего свойства/атрибута, необходимо вызывать 
            <see cref="M:Terrasoft.Common.DataReader.Read"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.ReadNextCollectionItem">
            <summary>
            Перемещает текущую позицию в коллекции к следующему элементу. 
            </summary>
            <returns>
            <c>true</c>, если текущая позиция в коллекции перемещена к следующему элементу; <c>false</c> - если
            достигнут последний элемент коллекции.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetStringValue">
            <summary>
            Возвращает строковое представление значения свойства/атрибута, которые находятся в текущей позиции 
            набора данных.
            </summary>
            <returns>Текущее значение свойства/атрибута типа <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetGuidValue">
            <summary>
            Возвращает экземпляр <see cref="T:System.Guid"/>, соответствующий значению свойства/атрибута, 
            которые находятся в текущей позиции набора данных.
            </summary>
            <returns>Текущее значение свойства/атрибута типа <see cref="T:System.Guid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetIntValue">
            <summary>
            Возвращает экземпляр <see cref="T:System.Int32"/>, соответствующий значению свойства/атрибута,
            </summary>
            <returns>Текущее значение свойства/атрибута типа <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetDoubleValue">
            <summary>
            Возвращает экземпляр <see cref="T:System.Double"/>, соответствующий значению 
            свойства/атрибута, которые находятся в текущей позиции набора данных.
            </summary>
            <returns>Текущее значение свойства/атрибута типа <see cref="T:System.Double"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetDateTimeValue">
            <summary>
            Возвращает экземпляр <see cref="T:System.DateTime"/>, соответствующий значению свойства/атрибута,
            которые находятся в текущей позиции набора данных.
            </summary>
            <returns>Текущее значение свойства/атрибута типа <see cref="T:System.DateTime"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetBoolValue">
            <summary>
            Возвращает экземпляр <see cref="T:System.Boolean"/>, соответствующий значению свойства/атрибута,
            которые находятся в текущей позиции набора данных.
            </summary>
            <returns>Текущее значение свойства/атрибута типа <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetLocalizableStringValue">
            <summary>
            Возвращает экземпляр <see cref="T:Terrasoft.Common.LocalizableString"/>, соответствующий значению 
            свойства/атрибута, которые находятся в текущей позиции набора данных.
            </summary>
            <returns>Текущее значение свойства/атрибута типа <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetStreamValue">
            <summary>
            Возвращает новый экземпляр <see cref="T:System.IO.Stream"/>, соответствующий значению свойства/атрибута,
            которые находятся в текущей позиции набора данных.
            </summary>
            <returns>Текущее значение свойства/атрибута типа <see cref="T:System.IO.Stream"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetStreamValue(System.IO.Stream)">
            <summary>
            Записывает содержимое текущего экземпляра <see cref="T:Terrasoft.Common.DataReader"/> в заданный поток.
            </summary>
            <param name="stream">Поток, в который осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetEnumValue``1">
            <summary>
            Возвращает элемент перечисления, соответствующий значению свойства/атрибута, которые находятся в текущей 
            позиции набора данных.
            </summary>
            <typeparam name="TValue">Значение перечисления любого типа.</typeparam>
            <returns>Элемент перечисления, соответствующий текущему значению свойства/атрибута.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetValue(Terrasoft.Common.DataConverter)">
            <summary>
            Возвращает объект, представляющий значение свойства/атрибута в текущей позиции набора данных,
            преобразованный в соответствии с заданным типом преобразования.
            </summary>
            <param name="converter">Тип преобразования.</param>
            <returns>Текущее значение свойства/атрибута типа <see cref="T:System.Object"/>, 
            преобразованное в соответствии с <paramref name="converter"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetValue(System.Type)">
            <summary>
            Возвращает значение свойства/атрибута в текущей позиции набора данных, преобразованное к заданному типу.
            </summary>
            <param name="valueType">Тип.</param>
            <returns>Текущее значение свойства/атрибута, преобразованное к типу <paramref name="valueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetValue``1">
            <summary>
            Возвращает значение конкретного типа свойства/атрибута в текущей позиции набора данных, преобразовывая его
            к конкретному типу.
            </summary>
            <typeparam name="TValue">Значение любого типа.</typeparam>
            <returns>Преобразованное значение свойства/атрибута.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetSerialazebleObjectValue(System.Type)">
            <summary>
            Возвращает значение сериализуемого свойства/атрибута в текущей позиции набора данных, приведенное к 
            заданному типу. </summary>
            <param name="objectType">Тип значения сериализуемого свойства/атрибута.</param>
            <returns>Значение сериализуемого свойства/атрибута типа <paramref name="objectType"/>.</returns>
            <remarks>Тип сериализуемого свойства/атрибута должен реализовать интерфейс 
            <see cref="T:System.Runtime.Serialization.ISerializable"/> либо быть помечен атрибутом [Serializable].
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetSerializableObjectValue">
            <summary>
            Возвращает значение сериализуемого свойства/атрибута в текущей позиции набора данных.
            </summary>
            <returns>Значение сериализуемого свойства/атрибута типа <see cref="T:System.Object"/>.</returns>
            <remarks>Тип сериализуемого свойства/атрибута должен реализовать интерфейс
            <see cref="T:System.Runtime.Serialization.ISerializable"/> либо быть помечен атрибутом [Serializable].
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.DataReader.GetSerializableObjectValue``1">
            <summary>
            Возвращает значение конкретного типа сериализуемого свойства/атрибута в текущей позиции набора данных.
            </summary>
            <typeparam name="TValue">Тип значения сериализуемого свойства/атрибута.</typeparam>
            <returns>Значение сериализуемого свойства/атрибута типа <typeparamref name="TValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DataReader.Dispose">
            <summary>
            Выполняет удаление, высвобождение и сброс ресурсов. Отменяет вызов Finalize() для данного экземпляра.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.DataReader.CurrentName">
            <summary>
            Возвращает имя свойства, которое находится в текущей позиции набора данных.
            </summary>
            <value>
            Имя свойства, которое находится в текущей позиции набора данных.
            </value>
        </member>
        <member name="P:Terrasoft.Common.DataReader.CurrentValue">
            <summary>
            Возвращает текущее значение свойства, которое находится в текущей позиции набора данных.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.DataWriterSettings">
            <summary>
            Предоставляет настройки для класса <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.DataWriter">
            <summary>
            Базовый класс для классов, реализующих последовательную запись данных.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.DataWriter.SerializableObjectTypeFullNamePropertyName">
            <summary>
            Полное наименование типа сериализуемого объекта, которое включает в себя пространство имен типа, но не 
            включает имя сборки.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.DataWriter.SerializableObjectValuePropertyName">
            <summary>
            Наименование свойства/атрибута, содержащее значение сериализуемого объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteStartObject">
            <summary>
            Осуществляет запись корневого элемента в выходной поток.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteStartObject(System.String)">
            <summary>
            Осуществляет запись корневого элемента с заданным именем в выходной поток.
            </summary>
            <param name="name">Имя корневого элемента.</param>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteFinishObject">
            <summary>
            Завершает запись элемента в выходной поток.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,System.String,System.String)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и заданным значением по умолчанию (для строковых 
            значений). </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.String"/>.</param>
            <param name="defValue">Значение по умолчанию для элемента.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,System.Guid,System.Guid)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и заданным значением по умолчанию (для значений 
            типа Guid).</summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Guid"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,System.Int32,System.Int32)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и значением по умолчанию (для значений типа int).
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Int32"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,System.Decimal,System.Decimal)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и заданным значением по умолчанию (для значений 
            типа decimal). </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Decimal"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,System.Double,System.Double)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и заданным значением по умолчанию (для значений 
            типа double). </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Double"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,System.Enum,System.Enum)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и заданным значением по умолчанию (для значений 
            типа Enum).</summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Enum"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,System.DateTime,System.DateTime)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и заданным значением по умолчанию (для значений 
            типа DateTime). </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.DateTime"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,System.Boolean,System.Boolean)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и заданным значением по умолчанию (для значений 
            типа bool). </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Boolean"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и заданным значением по умолчанию 
            (для значений типа LocalizableString).
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,System.IO.Stream)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и значения из заданного потока.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Поток, из которого осуществляется запись.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,Terrasoft.Common.DataConverter,System.Object,System.Object)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и заданным значением по умолчанию, преобразованным 
            в соответствии с заданным типом преобразования.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="converter">Тип преобразования.</param>
            <param name="value">Значение.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.String,System.Type,System.Object,System.Object)">
            <summary>
            Осуществляет запись значения элемента с заданным именем и заданным значением по умолчанию, преобразованным 
            к заданному типу.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="valueType">Тип значения.</param>
            <param name="value">Значение.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.Close">
            <summary>
            Закрывает текущий экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteStartCollection(System.String)">
            <summary>
            Начинает запись коллекции с заданным именем.
            </summary>
            <param name="name">Имя коллекции.</param>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteFinishCollection">
            <summary>
            Завершает запись текущей коллекции.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteValue(System.Object[])">
            <summary>
            Осуществляет запись заданного массива значений.
            </summary>
            <param name="values">Массив значений.</param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.WriteSerializableObjectValue(System.String,System.Object,System.Object)">
            <summary>
            Осуществляет запись элемента с заданным именем и заданным значением и значением по умолчанию 
            сериализуемого объекта.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение сериализуемого объекта.</param>
            <param name="defValue">Значение по умолчанию сериализуемого объекта.</param>
            <remarks>Тип <paramref name="value"/> должен реализовывать интерфейс 
            <see cref="T:System.Runtime.Serialization.ISerializable"/> или помечен атрибутом [Serializable].</remarks>
        </member>
        <member name="M:Terrasoft.Common.DataWriter.Dispose">
            <summary>
            Выполняет удаление, высвобождение и сброс ресурсов. Отменяет вызов Finalize() для данного экземпляра.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.DateTimeUtilities">
            <summary>
            Содержит служебные методы для работы с датой и временем.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.DateTimeToDate(System.DateTime,System.Int32)">
            <summary>
            Возвращает новый экземпляр класса <see cref="T:System.DateTime"/>, соответствующий переданному экземпляру 
            <see cref="T:System.DateTime"/> с добавленным к нему заданным числом дней.</summary>
            <param name="value">Базовое значение даты и времени.</param>
            <param name="dayOffset">Смещение в днях. Параметр <paramref name="dayOffset"/> может
            быть положительным или отрицательным.</param>
            <returns>Экземпляр <see cref="T:System.DateTime"/>, значение которого равно сумме даты и времени, 
            представленных переданным параметром <paramref name="value"/>, и количества дней, представленного 
            параметром <paramref name="dayOffset"/>.</returns>
            <remarks>Возвращаемый экземпляр <see cref="T:System.DateTime"/> содержит только компоненту даты Date.
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.StartOfWeek(System.DateTime,System.Int32)">
            <summary>
            Start date of the week for a given value <see cref="T:System.DateTime"/>
            with week offset <paramref name="weekOffset"/>.
            </summary>
            <param name="value">Date and time value.</param>
            <param name="weekOffset">The week offset. Parametr <paramref name="weekOffset"/> can
            be positive or negative.</param>
            <returns>Instance <see cref="T:System.DateTime"/>, which is the first day of the week for the date and
            time for a given value <paramref name="value"/> with week offset <paramref name="weekOffset"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.StartOfMonth(System.DateTime,System.Int32)">
            <summary>
            Дата начала месяца для переданного экземпляра <see cref="T:System.DateTime"/>.</summary>
            <param name="value">Значение даты и времени.</param>
            <param name="monthOffset">Смещение в кварталах. Параметр <paramref name="monthOffset"/> может
            быть положительным или отрицательным.</param>
            <returns>Экземпляр <see cref="T:System.DateTime"/>, который представляет первый день месяца для даты и 
            времени, переданных параметром <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.StartOfQuarter(System.DateTime,System.Int32)">
            <summary>
            Дата начала квартала для переданного экземпляра <see cref="T:System.DateTime"/>.</summary>
            <param name="value">Значение даты и времени.</param>
            <param name="quarterOffset">Смещение в днях. Параметр <paramref name="quarterOffset"/> может 
            быть положительным или отрицательным.</param>
            <returns>Экземпляр <see cref="T:System.DateTime"/>, который представляет первый день квартала для даты и 
            времени, переданных параметром <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.StartOfHalfYear(System.DateTime,System.Int32)">
            <summary>
            Дата начала полугодия для переданного экземпляра <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">Значение даты и времени.</param>
            <param name="halfYearOffset">Смещение в полугодиях. Параметр <paramref name="halfYearOffset"/> может
            быть положительным или отрицательным.</param>
            <returns>Экземпляр <see cref="T:System.DateTime"/>, который представляет первый день полугодия для даты и 
            времени, переданных параметром <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.StartOfYear(System.DateTime,System.Int32)">
            <summary>
            Дата начала года для переданного экземпляра <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">Значение даты и времени.</param>
            <param name="yearOffset">Смещение в годах. Параметр <paramref name="yearOffset"/> может быть
            положительным или отрицательным.</param>
            <returns>Экземпляр <see cref="T:System.DateTime"/>, который представляет первый день года для даты и 
            времени, переданных параметром <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.StartOfHour(System.DateTime,System.Int32)">
            <summary>
            Дата начала часа для переданного экземпляра <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">Значение даты и времени.</param>
            <param name="hourOffset">Смещение в часах. Параметр <paramref name="hourOffset"/> может быть
            положительным или отрицательным.</param>
            <returns>Экземпляр <see cref="T:System.DateTime"/>, который представляет первую минуту часа для даты и 
            времени, переданных параметром <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.Day(System.DateTime)">
            <summary>
            Возвращает день месяца для даты.
            </summary>
            <param name="datetime">Дата типа <see cref="T:System.DateTime"/>.</param>
            <returns>День месяца в диапазоне от 1 до 31.</returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.Month(System.DateTime)">
            <summary>
            Возвращает месяц для даты.
            </summary>
            <param name="datetime">Дата типа <see cref="T:System.DateTime"/>.</param>
            <returns>Месяц в диапазоне от 1 до 12.</returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.Time(System.DateTime)">
            <summary>
            Возвращает время дня для даты.
            </summary>
            <param name="datetime">Дата типа <see cref="T:System.DateTime"/>.</param>
            <returns>Время дня типа <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.Time(System.String)">
            <summary>
            Возвращает время, заданное строкой.
            </summary>
            <param name="timeString">Время, заданное в формате "чч:мм" или "ч:мм".</param>
            <returns>Время дня типа <see cref="T:System.TimeSpan"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.DayOfWeek(System.DateTime)">
            <summary>
            Возвращает номер дня недели для даты.
            </summary>
            <param name="datetime">Дата типа <see cref="T:System.DateTime"/>.</param>
            <returns>Номер дня недели: 1 - понедельник, 7 - воскресенье.</returns>
        </member>
        <member name="M:Terrasoft.Common.DateTimeUtilities.DayInRange(System.DateTime,System.DateTime,System.Int32,System.Int32)">
            <summary>
            Возвращает истину, если день даты datetime1 лежит в диапазоне datetime2 – BeforeDays и
            datetime2 + AfterDays. 
            </summary>
            <param name="datetime1">Проверяемая дата.</param>
            <param name="datetime2">Дата, задающая диапазон.</param>
            <param name="daysBefore">Количество дней до даты datetime2 (нижняя граница диапазона)</param>
            <param name="daysAfter">Количество дней после даты datetime2 (верхняя граница диапазона)</param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Common.DictionaryUtilities">
            <summary>
            Содержит служебные методы работы со словарями. 
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DictionaryUtilities.AddRangeIfNotExist``1(System.Collections.Generic.Dictionary{``0,``0},System.Collections.Generic.Dictionary{``0,``0})">
            <summary>
            Осуществляет добавление в данный экземпляр заданного словаря, если элементы добавляемого словаря не входят 
            в состав данного экземпляра. </summary>
            <typeparam name="T"></typeparam>
            <param name="source">Словарь, в который осуществляется добавление.</param>
            <param name="collection">Добавляемый словарь.</param>
        </member>
        <member name="T:Terrasoft.Common.DynamicXml">
            <summary>
            Предоставляет методы работы с xml-документом.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DynamicXml.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.DynamicXml"/>, используя заданный элемент 
            <see cref="T:System.Xml.Linq.XElement"/>.
            </summary>
            <param name="element">Элемент <see cref="T:System.Xml.Linq.XElement"/>.</param>
        </member>
        <member name="M:Terrasoft.Common.DynamicXml.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.DynamicXml"/>, используя заданное имя файла.
            </summary>
            <param name="fileName">Имя файла.</param>
        </member>
        <member name="M:Terrasoft.Common.DynamicXml.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Реализация операции получения значения xml-элемента с заданным именем.
            </summary>
            <param name="binder">Имя xml-элемента.</param>
            <param name="result">Экземпляр <see cref="T:Terrasoft.Common.DynamicXml"/>, представляющий значение xml-элемента 
            именем <paramref name="binder"/></param>
            <returns>
            <c>true</c>, если операция получения значения xml-элемента была успешной; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DynamicXml.ToString">
            <summary>
            Возвращает строковое представление значения данного экземпляра <see cref="T:Terrasoft.Common.DynamicXml"/>.
            </summary>
            <returns>
            Экземпляр <see cref="T:System.String"/>, представляющий значение данного экземпляра <see cref="T:Terrasoft.Common.DynamicXml"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DynamicXml.GetEnumerator">
            <summary>
            Возвращает перечислитель элементов типа <see cref="T:Terrasoft.Common.DynamicXml"/> для доступа к элементам 
            данного xml-документа.
            </summary>
            <returns>Экземпляр класса <see cref="T:System.Collections.Generic.IEnumerator`1"/> для доступа к 
            коллекции элементов <see cref="T:Terrasoft.Common.DynamicXml"/> данного xml-документа.</returns>
        </member>
        <member name="M:Terrasoft.Common.DynamicXml.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Возвращает перечислитель для доступа к элементам данного xml-документа.
            </summary>
            <returns>
            Экземпляр <see cref="T:System.Collections.IEnumerator"/> для доступа к коллекции элементов данного 
            xml-документа. </returns>
        </member>
        <member name="M:Terrasoft.Common.DynamicXml.Add(System.String)">
            <summary>
            Добавляет в данный xml-документ новый элемент с заданным именем.
            </summary>
            <param name="name">Имя элемента.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Common.DynamicXml"/>, представляющий добавленный элемент с именем
            <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DynamicXml.Save(System.String)">
            <summary>
            Сохраняет данный xml-документ в файл с заданным именем.
            </summary>
            <param name="fileName">Имя файла для сохранения.</param>
        </member>
        <member name="M:Terrasoft.Common.DynamicXml.Save">
            <summary>
            Сохраняет данный xml-документ в текущий файл (на основании которого был сформирован данный xml-документ).
            </summary>
        </member>
        <member name="P:Terrasoft.Common.DynamicXml.Value">
            <summary>
            Возвращает значение текущего xml-элемента.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.DynamicXml.Item(System.String)">
            <summary>
            Индексатор для доступа к значению заданного атрибута текущего xml-элемента. 
            Возвращает и устанавливает строковое значение атрибута с заданным именем.
            </summary>
            <remarks>Индексатор перегружен.</remarks>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">
            При попытке установить значение атрибута неинициализированного xml-элемента.
            </exception>
        </member>
        <member name="P:Terrasoft.Common.DynamicXml.Item(System.String,System.Int32)">
            <summary>
            Индексатор доступа к дочернему xml-элементу по заданным имени элемента и индексу. Возвращает экземпляр 
            <see cref="T:Terrasoft.Common.DynamicXml"/> с заданным именем <paramref name="elementName"/> и
            индексом <paramref name="index"/>.
            </summary>
            <remarks>Индексатор перегружен.</remarks>
        </member>
        <member name="T:Terrasoft.Common.DataTypeUtilities">
            <summary>
            Предоставляет служебные методы работы с типами данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataTypeUtilities.DBTypeToSystemType(System.Data.DbType)">
            <summary>
            Возвращает строковое представление системного типа данных, соответствующий заданному типу данных 
            базы данных. </summary>
            <param name="value">Тип данных базы данных.</param>
            <returns>Строка, представляющая системный тип данных, соответствующий типу 
            данных БД <paramref name="value"/>. </returns>
        </member>
        <member name="M:Terrasoft.Common.DataTypeUtilities.ValueAsType(System.Object,System.Type)">
            <summary>
            Выполняет приведение заданного значения к заданному типу.
            </summary>
            <param name="value">Значение.</param>
            <param name="type">Тип.</param>
            <returns>
            Объект значения <paramref name="value"/> типа <paramref name="type"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.DataTypeUtilities.ValueIsNullOrEmpty(System.Object)">
            <summary>
            Проверяет, является ли заданное значение пустым или <c>null</c>.
            </summary>
            <param name="value">Значение.</param>
            <returns>
            <c>true</c>, если значение <paramref name="value"/> является пустым или <c>null</c>; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Common.DBUtilities">
            <summary>
            Предоставляет служебные методы для работы с объектами базы данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DBUtilities.GetIsDBObjectNameValid(System.String)">
            <summary>
            Проверяет, является ли переданное значение допустимым именем объекта базы данных.
            </summary>
            <param name="dbName">Строка - имя объекта базы данных.</param>
            <returns><c>true</c>, если переданное значение <paramref name="dbName"/> является непустым допустимым 
            именем объекта базы данных.</returns>
        </member>
        <member name="M:Terrasoft.Common.DBUtilities.GetUniqueDBObjectName(System.String,System.Guid,System.String)">
            <summary>
            Возвращает сформированное уникальное имя объекта базы данных, которое включает в себя префикс, 
            идентификатор объекта, суффикс.</summary>
            <param name="prefix">Префикс.</param>
            <param name="id">Идентификатор.</param>
            <param name="suffix">Суффикс.</param>
            <returns>Строка, представляющая уникальное имя объекта базы данных, состоящая из префикса 
            <paramref name="prefix"/>, индентификатора <paramref name="id"/>, суффикса <paramref name="suffix"/>.
            </returns>
            <remarks>Перегруженый метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DBUtilities.GetUniqueDBObjectName(System.String,System.Guid,System.Guid,System.String)">
            <summary>
            Возвращает сформированное уникальное имя объекта базы данных, которое включает в себя префикс, 
            идентификатор схемы, идентификатор объекта, суффикс.</summary>
            <param name="prefix">Префикс.</param>
            <param name="schemaUId">Идентификатор схемы.</param>
            <param name="objectUId">Идентификатор объекта.</param>
            <param name="suffix">Суффикс.</param>
            <returns>Строка, представляющая уникальное имя объекта базы данных, состоящая из префикса 
            <paramref name="prefix"/>, идентификатора схемы <paramref name="schemaUId"/>, идентификатора объекта 
            <paramref name="objectUId"/>, суффикса <paramref name="suffix"/>.</returns>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DBUtilities.GetUniqueDBObjectName(System.String,System.Guid,System.Guid)">
            <summary>
            Возвращает сформированное уникальное имя объекта базы данных, которое включает в себя префикс, идентификатор
            схемы, идентификатор объекта.</summary>
            <param name="prefix">Префикс.</param>
            <param name="schemaUId">Идентификатор схемы.</param>
            <param name="objectUId">Идентификатор объекта.</param>
            <returns>Строка, представляющая уникальное имя объекта базы данных, состоящая из префикса
            <paramref name="prefix"/>, идентификатора схемы <paramref name="schemaUId"/>, идентификатора объекта 
            <paramref name="objectUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DBUtilities.GetUniqueDBObjectName(System.String,System.Guid)">
            <summary>
            Возвращает сформированное уникальное имя объекта базы данных, которое включает в себя префикс, 
            идентификатор объекта. </summary>
            <param name="prefix">Префикс.</param>
            <param name="objectUId">Идентификатор объекта.</param>
            <returns>Строка, представляющая уникальное имя объекта базы данных, состоящая из префикса 
            <paramref name="prefix"/>, идентификатора объекта <paramref name="objectUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.DBUtilities.GetDBParameterDirection(Terrasoft.Common.ParameterDirection)">
            <summary>
            Возвращает системный тип по заданному экземпляру <see cref="T:Terrasoft.Common.ParameterDirection"/>.
            </summary>
            <param name="direction">Экземпляр <see cref="T:Terrasoft.Common.ParameterDirection"/></param>
            <returns>Элемент перечисления <see cref="T:System.Data.ParameterDirection"/>, соответствующий переданному
            значению <paramref name="direction"/>.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве <paramref name="direction"/> передано значение,
            не являющееся элементом перечисления <see cref="T:Terrasoft.Common.ParameterDirection"/>.</exception>
        </member>
        <member name="M:Terrasoft.Common.DBUtilities.GetColumnValue``1(System.Data.IDataReader,System.String)">
            <summary>
            Возвращает значение заданной колонки данного типа текущего набора данных.
            </summary>
            <typeparam name="T">Любой тип.</typeparam>
            <param name="source">Набор данных.</param>
            <param name="columnName">Имя колонки.</param>
            <returns>Тип значения колонки <paramref name="columnName"/>.</returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Метод расширения классов, реализующих интерфейс <see cref="T:System.Data.IDataReader"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.DBUtilities.GetColumnValue(System.Data.IDataReader,System.String)">
            <summary>
            Возвращает значение колонки с заданным именем текущего набора данных.
            </summary>
            <param name="source">Набор данных.</param>
            <param name="columnName">Имя колонки.</param>
            <returns>Объект, представляющий значение колонки <paramref name="columnName"/>.</returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Метод расширения классов, реализующих интерфейс <see cref="T:System.Data.IDataReader"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.DBUtilities.GetStreamValue(System.Data.IDataReader,System.String)">
            <summary>
            Возвращает значение типа <see cref="T:System.IO.Stream"/> колонки с заданным именем текущего набора данных.
            </summary>
            <param name="source">Набор данных.</param>
            <param name="columnName">Имя колонки.</param>
            <returns>Объект <see cref="T:System.IO.Stream"/>, представляющий значение колонки 
            <paramref name="columnName"/>.</returns>
            <remarks>Метод расширения классов, реализующих интерфейс <see cref="T:System.Data.IDataReader"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.DBUtilities.ReadToDataTable(System.Data.IDataReader,System.String)">
            <summary>
            Помещает текущий набор данных в экземпляр <see cref="T:System.Data.DataTable"/> с заданным именем.
            </summary>
            <param name="source">Набор данных.</param>
            <param name="name">Имя создаваемого экземпляра <see cref="T:System.Data.DataTable"/>.</param>
            <returns>
            Экземпляр <see cref="T:System.Data.DataTable"/>, содержащий данные набора <paramref name="source"/>.
            </returns>
            <remarks>
            Метод расширения классов, реализующих интерфейс <see cref="T:System.Data.IDataReader"/>.
            </remarks>
        </member>
        <member name="T:Terrasoft.Common.DESCryptoServiceProvider">
            <summary>
            Предоставляет методы шифрования текста по алгоритму DES.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DESCryptoServiceProvider.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.DESCryptoServiceProvider"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DESCryptoServiceProvider.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.DESCryptoServiceProvider"/>
            c указанием секретного ключа.
            </summary>
            <param name="secretKey">Ключ в формате base64String.</param>
            <returns>Строка, представляющая зашифрованный текст в формате base64.</returns>
        </member>
        <member name="M:Terrasoft.Common.DESCryptoServiceProvider.Dispose(System.Boolean)">
            <summary>
            Выполняет удаление, высвобождение и сброс ресурсов. 
            </summary>
            <param name="disposing">
            Значение <c>true</c> для освобождения управляемых и неуправляемых ресурсов; значение <c>false</c> для 
            освобождения только неуправляемых ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Common.DESCryptoServiceProvider.Dispose">
            <summary>
            Выполняет удаление, высвобождение и сброс ресурсов. Отменяет вызов Finalize() для данного экземпляра.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DESCryptoServiceProvider.Encrypt(System.String)">
            <summary>
            Шифрует заданный текст в по алгоритму DES.
            </summary>
            <param name="text">Текст для шифрования.</param>
            <returns>Строка, представляющая зашифрованный текст в формате base64.</returns>
        </member>
        <member name="M:Terrasoft.Common.DESCryptoServiceProvider.Decrypt(System.String)">
            <summary>
            Расшифровывает заданный текст по алгоритму DES.
            </summary>
            <param name="cypherText">Текст для расшифровки в формате base64.</param>
            <returns>Строка, представляющая расшифрованный текст.</returns>
        </member>
        <member name="T:Terrasoft.Common.DSACryptoServiceProvider">
            <summary>
            Предоставляет методы для шифрования текста с открытым ключом по алгоритму DSA.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DSACryptoServiceProvider.#ctor">
            <summary>
            Инициализирует заданный экземпляр <see cref="T:Terrasoft.Common.DSACryptoServiceProvider"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DSACryptoServiceProvider.Dispose">
            <summary>
            Выполняет удаление, высвобождение и сброс ресурсов. Отменяет вызов Finalize() для данного экземпляра.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DSACryptoServiceProvider.SignData(System.String,System.String)">
            <summary>
            Выполняет шифрование заданного текста с заданным секретным ключом.
            </summary>
            <param name="data">Текст для шифрования.</param>
            <param name="privateKey">Секретный ключ.</param>
            <returns>Строка, представляющая зашифрованный текст в формате base64.</returns>
        </member>
        <member name="M:Terrasoft.Common.DSACryptoServiceProvider.VerifyData(System.String,System.String,System.String)">
            <summary>
            Выполняет проверку заданного зашифрованного текста с заданным публичным ключом.
            </summary>
            <param name="data">Эталон проверки.</param>
            <param name="signedData">Зашифрованный текст в формате base64.</param>
            <param name="publicKey">Публичный ключ.</param>
            <returns></returns>
        </member>
        <member name="P:Terrasoft.Common.DSACryptoServiceProvider.KeyContainerName">
            <summary>
            Имя владельца ключа.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.DSACryptoServiceProvider.KeySize">
            <summary>
            Размер ключа в битах.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.DSACryptoServiceProvider.PersistKeyInCsp">
            <summary>
            Признак сохранения ключа.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.DSACryptoServiceProvider.PrivateKey">
            <summary>
            Значение закрытого ключа.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.DSACryptoServiceProvider.PublicKey">
            <summary>
            Значение публичного ключа.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.MessageType">
            <summary>
            Тип сообщения.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.MessageType.Error">
            <summary>
            Ошибка.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.MessageType.Warning">
            <summary>
            Предупреждение.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.MessageType.Information">
            <summary>
            Информационное сообщение.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ResourceItemType">
            <summary>
            Тип ресурса.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ResourceItemType.None">
            <summary>
            Тип ресурса не определен.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ResourceItemType.String">
            <summary>
            Строка.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ResourceItemType.Image">
            <summary>
            Изображение.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ResourceItemType.File">
            <summary>
            Файл.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.LogicalOperation">
            <summary>
            Логическая операция.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.LogicalOperation.None">
            <summary>
            Логическая операция не определена.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.LogicalOperation.And">
            <summary>
            Логическое И.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.LogicalOperation.Or">
            <summary>
            Логическое ИЛИ.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.LogicalOperationStrict">
            <summary>
            Логическая операция (не допускает значение None).
            </summary>
        </member>
        <member name="F:Terrasoft.Common.LogicalOperationStrict.And">
            <summary>
            Логическое И.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.LogicalOperationStrict.Or">
            <summary>
            Логическое ИЛИ.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.BitwiseOperation">
            <summary>
            Побитовая операция.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.BitwiseOperation.And">
            <summary>
            Побитовое И.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.BitwiseOperation.Or">
            <summary>
            Побитовое ИЛИ.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.BitwiseOperation.Xor">
            <summary>
            Побитовое исключающее ИЛИ.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.BitwiseOperation.Not">
            <summary>
            Побитовое НЕ.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.OrderDirection">
            <summary>
            Порядок сортировки (допускает значение None).
            </summary>
        </member>
        <member name="F:Terrasoft.Common.OrderDirection.None">
            <summary>
            Отключена.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.OrderDirection.Ascending">
            <summary>
            По возрастанию.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.OrderDirection.Descending">
            <summary>
            По убыванию.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.OrderDirectionStrict">
            <summary>
            Порядок сортировки (не допускает значение None).
            </summary>
        </member>
        <member name="F:Terrasoft.Common.OrderDirectionStrict.Ascending">
            <summary>
            По возрастанию.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.OrderDirectionStrict.Descending">
            <summary>
            По убыванию.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.AggregationType">
            <summary>
            Тип агрегирующей функции (допускает значение None).
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationType.None">
            <summary>
            Тип агрегирующей функции не определен.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationType.Count">
            <summary>
            Количество всех элементов.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationType.Sum">
            <summary>
            Сумма значений всех элементов.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationType.Avg">
            <summary>
            Среднее значение всех элементов.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationType.Min">
            <summary>
            Минимальное значение среди всех элементов.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationType.Max">
            <summary>
            Максимальное значение среди всех элементов.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.AggregationTypeStrict">
            <summary>
            Тип агрегирующей функции (не допускает значение None).
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationTypeStrict.Count">
            <summary>
            Количество всех элементов.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationTypeStrict.Sum">
            <summary>
            Сумма значений всех элементов.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationTypeStrict.Avg">
            <summary>
            Среднее значение всех элементов.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationTypeStrict.Min">
            <summary>
            Минимальное значение среди всех элементов.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.AggregationTypeStrict.Max">
            <summary>
            Максимальное значение среди всех элементов.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.DateTimeValueKind">
            <summary>
            Дата и время.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.DateTimeValueKind.DateTime">
            <summary>
            Дата/Время.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.DateTimeValueKind.Date">
            <summary>
            Дата.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.DateTimeValueKind.Time">
            <summary>
            Время.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ParameterDirection">
            <summary>
            Модификатор параметра. Определяет направление передачи значения параметра.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ParameterDirection.Input">
            <summary>
            Входящий.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ParameterDirection.Output">
            <summary>
            Исходящий.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ParameterDirection.Var">
            <summary>
            Входящий / Исходящий.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.SessionEndMethod">
            <summary>
            Метод закрытия пользовательской сессии.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.SessionEndMethod.NotFinished">
            <summary>
            Сессия не закрыта.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.SessionEndMethod.Logout">
            <summary>
            Сессия закрыта в результате выхода пользователя.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.SessionEndMethod.Timeout">
            <summary>
            Сессия закрыта по таймауту на стороне сервера.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.SessionEndMethod.Terminate">
            <summary>
            Сессия закрыта принудительно.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ArithmeticOperation">
            <summary>
            Арифметическая операция.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ArithmeticOperation.Addition">
            <summary>
            Сложение.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ArithmeticOperation.Subtraction">
            <summary>
            Вычитание.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ArithmeticOperation.Multiplication">
            <summary>
            Умножение.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.ArithmeticOperation.Division">
            <summary>
            Деление.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.SourceControlSaveType">
            <summary>
            Тип операции фиксации в хранилище системы контроля версий.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.SourceControlSaveType.Commit">
            <summary>
            Фиксация в хранилище системы контроля версий изменений из существующей папки рабочей копии.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.SourceControlSaveType.Import">
            <summary>
            Фиксация в хранилище системы контроля версий дерево файлов и папок из неверсионной папки.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.EnumStrictUtilities">
            <summary>
            Содержит служебные методы для работы с перечислениями. 
            </summary>
        </member>
        <member name="M:Terrasoft.Common.EnumStrictUtilities.ToNormal(Terrasoft.Common.LogicalOperationStrict)">
            <summary>
            Преобразование перечисления типа <see cref="T:Terrasoft.Common.LogicalOperationStrict"/> в перечисление 
            типа <see cref="T:Terrasoft.Common.LogicalOperation"/>.
            </summary>
            <param name="source">Перечисление типа <see cref="T:Terrasoft.Common.LogicalOperationStrict"/>.</param>
            <returns>Перечисление типа <see cref="T:Terrasoft.Common.LogicalOperation"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.EnumStrictUtilities.ToStrict(Terrasoft.Common.OrderDirection)">
            <summary>
            Преобразование перечисления типа <see cref="T:Terrasoft.Common.OrderDirection"/> в перечисления 
            типа <see cref="T:Terrasoft.Common.OrderDirectionStrict"/>.
            </summary>
            <param name="source">Перечисление типа <see cref="T:Terrasoft.Common.OrderDirection"/>.</param>
            <returns>Перечисление типа <see cref="T:Terrasoft.Common.OrderDirectionStrict"/>.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">При передаче в качестве параметра <paramref name="source"/> 
            значения <see ref="OrderDirection.None"/>.</exception>
        </member>
        <member name="M:Terrasoft.Common.EnumStrictUtilities.ToStrict(Terrasoft.Common.AggregationType)">
            <summary>
            Преобразование перечисления типа <see cref="T:Terrasoft.Common.AggregationType"/> в перечисления типа 
            <see cref="T:Terrasoft.Common.AggregationTypeStrict"/>.
            </summary>
            <param name="source">Перечисление типа <see cref="T:Terrasoft.Common.AggregationType"/>.</param>
            <returns>Перечисление типа <see cref="T:Terrasoft.Common.AggregationTypeStrict"/>.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">При передаче в качестве параметра <paramref name="source"/> 
            значения, не являющегося элементом перечисления <see ref="AggregationType"/>.</exception>
        </member>
        <member name="T:Terrasoft.Common.EnumUtilities">
            <summary>
            Содержит служебные методы для работы с перечислениями.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.EnumUtilities.ToLocalizedString(System.Enum)">
            <summary>
            Преобразует элемент перечисления в локализуемое строковое представление.
            </summary>
            <param name="source">Перечисление.</param>
            <returns>Локализуемое строковое представление элемента данного перечисления.</returns>
            <remarks>Метод расширения класса <see cref="T:System.Enum"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.EnumUtilities.GetLocalizedNames(System.Type)">
            <summary>
            Возвращает словарь локализуемых строковых представлений значений заданного типа перечисления.
            </summary>
            <param name="enumType">Тип перечисления.</param>
            <returns>Словарь локализуемых строк значений заданного типа перечисления <paramref name="enumType"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Common.NameChangeEventArgs">
            <summary>
            Базовый класс для данных состояния события изменения имени.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.NameChangeEventArgs.Name">
            <summary>
            Новое имя.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.NameChangeEventArgs.OldName">
            <summary>
            Старое имя.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.BeforeNameChangeEventArgs">
            <summary>
            Предоставляет данные о состоянии до события изменения имени. 
            </summary>
        </member>
        <member name="M:Terrasoft.Common.BeforeNameChangeEventArgs.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.BeforeNameChangeEventArgs"/>, используя 
            заданные новое и старое имя. 
            </summary>
            <param name="name">Новое имя.</param>
            <param name="oldName">Старое имя.</param>
        </member>
        <member name="P:Terrasoft.Common.BeforeNameChangeEventArgs.IsCanceled">
            <summary>
            Признак отмены изменения имени.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.AfterNameChangeEventArgs">
            <summary>
            Предоставляет данные о состоянии после события изменения имени.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.AfterNameChangeEventArgs.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.AfterNameChangeEventArgs"/>, используя 
            заданные новое и старое имена.
            </summary>
            <param name="name">Новое имя.</param>
            <param name="oldName">Старое имя.</param>
        </member>
        <member name="T:Terrasoft.Common.NullOrEmptyException">
            <summary>
            Представляет исключение для пустых и <c>null</c> объектов типа <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.NullOrEmptyException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.NullOrEmptyException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.NullOrEmptyException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.NullOrEmptyException"/>, используя заданное сообщение 
            об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.NullOrEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.NullOrEmptyException"/>, используя заданное сообщение 
            об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:Terrasoft.Common.NullOrEmptyException.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.NullOrEmptyException"/>, используя заданное сообщение 
            об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="objectName">.</param>
        </member>
        <member name="T:Terrasoft.Common.MetaPathNullOrEmptyException">
            <summary>
            Представляет исключение для пустых и <c>null</c> объектов типа <see cref="T:System.String"/>, представляющих путь к 
            метаданным.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.MetaPathNullOrEmptyException.#ctor">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.MetaPathNullOrEmptyException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.MetaPathNullOrEmptyException.#ctor(System.String,System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.MetaPathNullOrEmptyException"/> для заданного параметра и 
            пользовательской задачи.
            </summary>
            <param name="parameterName">Параметр.</param>
            <param name="userTaskName">Пользовательская задача.</param>
        </member>
        <member name="M:Terrasoft.Common.MetaPathNullOrEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.MetaPathNullOrEmptyException"/>, используя заданное сообщение об 
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения. </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            <summary>
            Представляет исключение для пустого или <c>null</c> входящих агрументов строкового типа.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ArgumentNullOrEmptyException.#ctor">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ArgumentNullOrEmptyException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ArgumentNullOrEmptyException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ArgumentNullOrEmptyException"/>, для заданного параметра.
            </summary>
            <param name="parameterName">Имя параметра.</param>
        </member>
        <member name="M:Terrasoft.Common.ArgumentNullOrEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ArgumentNullOrEmptyException"/>, используя заданное сообщение об
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.ArgumentEmptyException">
            <summary>
            Представляет исключение для входящих аргументов value-типов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ArgumentEmptyException.#ctor">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ArgumentEmptyException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ArgumentEmptyException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ArgumentEmptyException"/> для заданного параметра.
            </summary>
            <param name="parameterName">Имя параметра.</param>
        </member>
        <member name="M:Terrasoft.Common.ArgumentEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ArgumentEmptyException"/>, используя заданное сообщение об 
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.InvalidTypeCastException">
            <summary>
            Представляет исключение, которое создается при недопустимом преобразовании типов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.InvalidTypeCastException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.InvalidTypeCastException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.InvalidTypeCastException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.InvalidTypeCastException"/>, используя заданное сообщение
            об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.InvalidTypeCastException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidTypeCastException"/>, используя заданное сообщение об 
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:Terrasoft.Common.InvalidTypeCastException.#ctor(System.Type,System.Type)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidTypeCastException"/> для заданных преобразуемых типов.
            </summary>
            <param name="currentType">Тип, который преобразуется.</param>
            <param name="expectedType">Тип, к которому приводится.</param>
        </member>
        <member name="M:Terrasoft.Common.InvalidTypeCastException.#ctor(System.String,System.Type)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidTypeCastException"/> для заданного типа для значения
            свойства.</summary>
            <param name="propertyName">Имя свойства.</param>
            <param name="expectedType">Тип, к которому приводится.</param>
        </member>
        <member name="T:Terrasoft.Common.InvalidNameException">
            <summary>
            Представляет исключение для некорректного имени.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.InvalidNameException.#ctor">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidNameException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.InvalidNameException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidNameException"/>, используя заданное сообщение об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.InvalidNameException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidNameException"/>, используя заданное сообщение об ошибке
            и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.InvalidUserTimeZoneException">
            <summary>
            Представляет исключение, которое создается, если у пользователя установлен некорректный часовой пояс.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.InvalidUserTimeZoneException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidUserTimeZoneException"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.MismatchItemsCountException">
            <summary>
            Представляет исключение, которое создается при несовпадении количества элементов коллекции.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.MismatchItemsCountException.#ctor">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.MismatchItemsCountException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.MismatchItemsCountException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.MismatchItemsCountException"/>, используя заданное сообщение об
            ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.MismatchItemsCountException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.MismatchItemsCountException"/>, используя заданное сообщение об
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.ArgumentMismatchItemsCountException">
            <summary>
            Представляет исключение при несовпадении количества элементов коллекции аргумента.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ArgumentMismatchItemsCountException.#ctor">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ArgumentMismatchItemsCountException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ArgumentMismatchItemsCountException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ArgumentMismatchItemsCountException"/>, используя заданное 
            сообщение об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.ArgumentMismatchItemsCountException.#ctor(System.String[])">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ArgumentMismatchItemsCountException"/> для заданного списка
            параметров. </summary>
            <param name="parameterNames">Список имен параметров.</param>
        </member>
        <member name="M:Terrasoft.Common.ArgumentMismatchItemsCountException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ArgumentMismatchItemsCountException"/>, используя заданное
            сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.InvalidObjectStateException">
            <summary>
            Представляет исключение, возникающее при некорректном состоянии объекта.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.InvalidObjectStateException.#ctor">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidObjectStateException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.InvalidObjectStateException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidObjectStateException"/>, используя заданное сообщение об
            ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.InvalidObjectStateException.#ctor(System.String,System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidObjectStateException"/> для заданного объекта, используя
            заданное сообщение об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="objectName">Имя объекта.</param>
        </member>
        <member name="M:Terrasoft.Common.InvalidObjectStateException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.InvalidObjectStateException"/>, используя заданное сообщение об
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.ItemNotFoundException">
            <summary>
            Представляет исключение для не найденного элемента в коллекции.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ItemNotFoundException.#ctor">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ItemNotFoundException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ItemNotFoundException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ItemNotFoundException"/> для заданного объекта.
            </summary>
            <param name="objectName">Имя объекта.</param>
        </member>
        <member name="M:Terrasoft.Common.ItemNotFoundException.#ctor(System.String,System.String[])">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ItemNotFoundException"/> для заданного объекта, используя 
            заданное сообщение об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="objectNames">Имя объекта.</param>
        </member>
        <member name="M:Terrasoft.Common.ItemNotFoundException.#ctor(System.String,Terrasoft.Common.MessageType)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ItemNotFoundException"/> для заданного объекта, используя 
            заданное сообщение об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="messageType">Тип сообщения.</param>
        </member>
        <member name="M:Terrasoft.Common.ItemNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класс <see cref="T:Terrasoft.Common.ItemNotFoundException"/>, используя заданное сообщение об ошибке и
            ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="P:Terrasoft.Common.ItemNotFoundException.MessageType">
            <summary>
            Тип сообщения.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ItemAlreadyExistException">
            <summary>
            Представляет исключение для объекта, который уже присутствует в текущей коллекции.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ItemAlreadyExistException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.ItemAlreadyExistException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ItemAlreadyExistException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.ItemAlreadyExistException"/> для заданного идентификатора
            объекта. </summary>
            <param name="objectId">Идентификатор объекта.</param>
        </member>
        <member name="M:Terrasoft.Common.ItemAlreadyExistException.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.ItemAlreadyExistException"/> для заданного идентификатора 
            объекта, используя заданное сообщение об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="objectId">Идентификатор объекта.</param>
        </member>
        <member name="M:Terrasoft.Common.ItemAlreadyExistException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.ItemAlreadyExistException"/>, используя заданное сообщение
            об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.UnsupportedTypeException">
            <summary>
            Представляет исключение для типов, которые не поддерживаются текущим контентом.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.UnsupportedTypeException.#ctor">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.UnsupportedTypeException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.UnsupportedTypeException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.UnsupportedTypeException"/> для заданного имени типа.
            </summary>
            <param name="typeName">Имя тип.</param>
        </member>
        <member name="M:Terrasoft.Common.UnsupportedTypeException.#ctor(System.Type)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.UnsupportedTypeException"/> для заданного 
            типа <see cref="T:System.Type"/>.
            </summary>
            <param name="type">Экземпляр <see cref="T:System.Type"/>.</param>
        </member>
        <member name="M:Terrasoft.Common.UnsupportedTypeException.#ctor(System.String,System.Object[])">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.UnsupportedTypeException"/> для заданного списка имен 
            типов, используя заданное сообщение об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="args">Список имен типов.</param>
        </member>
        <member name="M:Terrasoft.Common.UnsupportedTypeException.#ctor(System.String,System.Type)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.UnsupportedTypeException"/> для заданного экземпляра
            <see cref="T:System.Type"/>, используя заданное сообщение об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="type">Экземпляр <see cref="T:System.Type"/>.</param>
        </member>
        <member name="M:Terrasoft.Common.UnsupportedTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.UnsupportedTypeException"/>, используя заданное сообщение об
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.ObjectIsReadOnlyException">
            <summary>
            Представляет исключение для объектов, открытых только для чтения.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ObjectIsReadOnlyException.#ctor">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ObjectIsReadOnlyException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ObjectIsReadOnlyException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ObjectIsReadOnlyException"/> для заданного объекта.
            </summary>
            <param name="objectName">Имя объекта.</param>
        </member>
        <member name="M:Terrasoft.Common.ObjectIsReadOnlyException.#ctor(System.String,System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ObjectIsReadOnlyException"/> для заданного объекта, используя 
            заданное сообщение об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="objectName">Имя объекта.</param>
        </member>
        <member name="M:Terrasoft.Common.ObjectIsReadOnlyException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ObjectIsReadOnlyException"/>, используя заданное сообщение об
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:Terrasoft.Common.ObjectIsReadOnlyException.#ctor(Terrasoft.Common.LocalizableString)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ObjectIsReadOnlyException"/>, используя заданное сообщение об 
            ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="T:Terrasoft.Common.DublicateDataException">
            <summary>
            Представляет исключение для дублируемых экземпляров данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DublicateDataException.#ctor">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.DublicateDataException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DublicateDataException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.DublicateDataException"/> для заданного объекта.
            </summary>
            <param name="objectName">Имя объекта.</param>
        </member>
        <member name="M:Terrasoft.Common.DublicateDataException.#ctor(Terrasoft.Common.LocalizableString,System.Object[])">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.DublicateDataException"/> для заданного перечня объектов,
            используя заданное сообщение об ошибке.
            </summary>
            <param name="exceptionMessage">Сообщение об ошибке.</param>
            <param name="args">Перечень объектов.</param>
        </member>
        <member name="M:Terrasoft.Common.DublicateDataException.#ctor(System.String,System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.DublicateDataException"/> для заданного объекта, используя
            заданное сообщение об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="objectName">Имя объекта.</param>
        </member>
        <member name="M:Terrasoft.Common.DublicateDataException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.DublicateDataException"/>, используя заданное сообщение об
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.DbOperationException">
            <summary>
            Представляет исключение для операций с базой данных.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DbOperationException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.DbOperationException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DbOperationException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.DbOperationException"/>, используя заданное сообщение об
            ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.DbOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.DbOperationException"/>, используя заданное сообщение об
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.AppStartupException">
            <summary>
            Представляет исключение об ошибке при запуске приложения <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.AppStartupException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.AppStartupException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.AppStartupException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.AppStartupException"/>, используя заданное сообщение 
            об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.AppStartupException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.AppStartupException"/>, используя заданное сообщение 
            об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:Terrasoft.Common.AppStartupException.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.AppStartupException"/>, используя заданное сообщение 
            об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="objectName">.</param>
        </member>
        <member name="T:Terrasoft.Common.SourceControlOperationException">
            <summary>
            Представляет исключение при работе с системой управления версиями.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.SourceControlOperationException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SourceControlOperationException"/>, используя заданное 
            сообщение об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.SourceControlOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SourceControlOperationException"/>, используя заданное 
            сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.SourceControlSecurityException">
            <summary>
            Представляет исключение ошибки безопасности при работе с системой управления версиями.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.SourceControlSecurityException.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SourceControlSecurityException"/>, используя заданное
            сообщение об ошибке и путь к хранилищу пакетов.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="sourceUrl">Путь к хранилищу пакетов.</param>
        </member>
        <member name="M:Terrasoft.Common.SourceControlSecurityException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SourceControlSecurityException"/>, используя заданное
            сообщение об ошибке, путь к хранилищу пакетов и ссылку на внутреннее исключение, которое стало причиной
            данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="sourceUrl">Путь к хранилищу пакетов.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:Terrasoft.Common.SourceControlOutOfDateException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SourceControlOutOfDateException"/>, используя заданное 
            сообщение об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.SourceControlOutOfDateException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SourceControlOutOfDateException"/>, используя заданное 
            сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:Terrasoft.Common.SourceControlServerIsBusyException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класс <see cref="T:Terrasoft.Common.SourceControlServerIsBusyException"/>, используя заданное 
            сообщение об ошибке.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.SourceControlServerIsBusyException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SourceControlServerIsBusyException"/>, используя заданное 
            сообщение об ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.SourceControlLockException">
            <summary>
            Исключение ошибки блокирования элементов системы в системе контроля версий.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.SourceControlLockException.#ctor(System.String,System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SourceControlLockException"/>, с заданными сообщением об
            ошибке, именем заблокированного элемента системы и именем пользователя, заблокировавшего этот элемент.
            </summary>
            <param name="message">Текст ошибки.</param>
            <param name="itemName">Имя элемента, вызвавшего ошибку.</param>
            <param name="userName">Имя пользователя, заблокировавшего элемент.</param>
        </member>
        <member name="P:Terrasoft.Common.SourceControlLockException.ItemName">
            <summary>
            Имя элемента, вызвавшего ошибку.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.SourceControlLockException.UserName">
            <summary>
            Имя пользователя, заблокировавшего элемент.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.SvnLockException.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SvnLockException"/>, используя имя заблокированой схемы и
            имя пользователя заблокировавшего эту схему.
            </summary>
            <param name="schemaName">Имя заблокированой схемы.</param>
            <param name="userName">Имя пользователя заблокировавшего схему.</param>
        </member>
        <member name="M:Terrasoft.Common.SvnHookException.#ctor(System.Exception)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SvnHookException"/>, используя заданное исключение
            </summary>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:Terrasoft.Common.SvnLockPackageException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.SvnLockPackageException"/>, используя заданное сообщение 
            об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="T:Terrasoft.Common.DataTypeMismatchException">
            <summary>
            Представляет исключение, которое создается при попытке установть в свойсто значение не корректного типа.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataTypeMismatchException.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.DataTypeMismatchException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.DataTypeMismatchException.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.DataTypeMismatchException"/>, используя заданное сообщение
            об ошибке. </summary>
            <param name="message">Сообщение об ошибке.</param>
        </member>
        <member name="M:Terrasoft.Common.DataTypeMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.DataTypeMismatchException"/>, используя заданное сообщение об 
            ошибке и ссылку на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="message">Сообщение об ошибке.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="M:Terrasoft.Common.DataTypeMismatchException.#ctor(System.String,System.Type,System.Type)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.DataTypeMismatchException"/> для заданного свойства.
            </summary>
            <param name="propertyName">Имя своства, в которое пытаются присвоить не корректный тип данных.</param>
            <param name="expectedType">Тип свойства.</param>
            <param name="currentType">Тип значения которое устанавливают.</param>
        </member>
        <member name="M:Terrasoft.Common.DataTypeMismatchException.#ctor(System.String,System.Type,System.Type,System.Exception)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.DataTypeMismatchException"/>, для заданного свойства
            c использованием ссылки на внутреннее исключение, которое стало причиной данного исключения.
            </summary>
            <param name="propertyName">Имя своства, в которое пытаются присвоить не корректный тип данных.</param>
            <param name="expectedType">Тип свойства.</param>
            <param name="currentType">Тип значения которое устанавливают.</param>
            <param name="innerException">Внутреннее исключение.</param>
        </member>
        <member name="T:Terrasoft.Common.TopologicalSorterLoopsException">
            <summary>
            Класс исключения для передачи информации о цикле зависимостей между элементами списка.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ProcessSchemaIsNotEnabledException">
            <summary>
            Представляет исключение для неактивной схемы процесса.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ProcessSchemaIsNotEnabledException.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ProcessSchemaIsNotEnabledException"/>, для заданного заголовка
            схемы процесса.
            </summary>
            <param name="processSchemaCaption">Заголовок схемы процесса.</param>
        </member>
        <member name="T:Terrasoft.Common.TopologicalSorterLoopsException`1">
            <summary>
            Класс (обобщенный) исключения для передачи информации о цикле зависимостей между элементами списка.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.FileUtilities">
            <summary>
            Предоставляет методы работы с файлами.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.CompleteDirectoryName(System.String)">
            <summary>
            Формирует имя заданного каталога в формате [Имя каталога][Разделитель].
            </summary>
            <param name="directoryName">Имя каталога.</param>
            <returns>Строка, представляющая имя заданного каталога в формате [Имя каталога][Разделитель].</returns>
            <remarks>[Разделитель] - символ, задаваемый платформой (ОС) для разделения уровней папок в строке пути.
            </remarks>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">При передаче в качестве 
            параметра <paramref name="directoryName"/> пустой строки или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.GetCompleteParentDirectoryName(System.String)">
            <summary>
            Для заданного каталога возвращает полный путь родительского каталога.
            </summary>
            <param name="directoryName">Имя каталога.</param>
            <returns>Строка, представляющая полный путь к родительскому каталогу.</returns>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.CombineFileName(System.String,System.String)">
            <summary>
            Формирует имя файла в формате [Путь к каталогу][Имя файла].
            </summary>
            <param name="directoryPath">Путь к каталогу.</param>
            <param name="fileName">Имя файла.</param>
            <returns>Строка, представляющая путь к файлу в формате [Путь к каталогу][Имя файла].</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">При передаче в качестве параметра <paramref name="fileName"/>
            пустой строки или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.MakeRelativePath(System.String,System.String)">
            <summary>
            Формирует относительный путь к файлу.
            </summary>
            <param name="baseDirectoryPath">Базовый путь к каталогу, относительно которого строится путь к файлу.
            </param>
            <param name="absoluteFilePath">Абсолютный путь к файлу.</param>
            <returns>Строка, представляющая путь к файлу <paramref name="absoluteFilePath"/> относительно каталога 
            <paramref name="baseDirectoryPath"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве праметров 
            <paramref name="baseDirectoryPath"/> или <paramref name="absoluteFilePath"/> передается пустое значение или 
            <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.MakeAbsolutePath(System.String,System.String)">
            <summary>
            Формирует абсолютный путь к файлу.
            </summary>
            <param name="baseDirectoryPath">Базовый путь к каталогу.</param>
            <param name="relativeFilePath">Относительный путь к файлу.</param>
            <returns>Строка, представляющая абсолютный путь к файлу</returns>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.CheckIsReadOnly(System.String)">
            <summary>
            Проверяет, является ли заданный файл доступным только для чтения.
            </summary>
            <param name="fileName">Имя файла.</param>
            <exception cref="T:System.IO.IOException">Если заданный файл <paramref name="fileName"/> является доступным только 
            для чтения.</exception>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.IsReadOnly(System.String)">
            <summary>
            Определяет, является ли заданный файл доступным только для чтения.
            </summary>
            <param name="fileName">Имя файла.</param>
            <returns>
            <c>true</c> если заданный файл доступен только для чтения; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.IsLocked(System.String)">
            <summary>
            Определяет, является ли заданный файл заблокированным.
            </summary>
            <param name="fileName">Имя файла.</param>
            <returns>
            <c>true</c>, если заданный файл является заблокированным; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.Delete(System.String)">
            <summary>
            Удаляет заданный файл.
            </summary>
            <param name="fileName">Имя файла.</param>
            <returns>
            <c>true</c>, если заданный файл успешно удален; <c>false</c> - если заданный файл не существует.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.SetReadOnlyAttribute(System.String)">
            <summary>
            Устанавливает для заданного файла атрибут "Только для чтения".
            </summary>
            <param name="fileName">Имя файла.</param>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.ResetReadOnlyAttribute(System.String)">
            <summary>
            Сбрасывает для заданного файла атрибут "Только для чтения".
            </summary>
            <param name="fileName">Имя файла.</param>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.Replace(System.String,System.String,System.Boolean)">
            <summary>
            Заменяет заданный файл другим файлом.
            </summary>
            <param name="sourceFileName">Имя заменяемого файла.</param>
            <param name="destinationFileName">Имя заменяющего файла.</param>
            <param name="deleteSourceFile"><c>true</c>, если после замены заменяемый файл должен быть удален.</param>
            <returns><c>true</c>, если замена успешно произведена; <c>false</c> - если заменяемый файл не существует.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.Replace(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Заменяет заданный файл другим файлом.
            </summary>
            <param name="sourceFileName">Имя заменяемого файла.</param>
            <param name="destinationFileName">Имя заменяющего файла.</param>
            <param name="deleteSourceFile"><c>true</c>, если после замены заменяемый файл должен быть удален.</param>
            <param name="forceReplace"><c>true</c>, если замена производится для файлов с атрибутом "Только для чтения".
            </param>
            <returns><c>true</c>, если замена успешно произведена; <c>false</c> - если заменяемый файл не существует.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.GetUniqueFileName(System.String,System.String,System.String)">
            <summary>
            Формирует уникальное имя файла для заданного каталога.
            </summary>
            <param name="directory">Каталог.</param>
            <param name="fileName">Имя файла.</param>
            <param name="fileExtension">Расширение файла.</param>
            <returns>Строка, представляющая уникальное имя файла для заданного каталога <paramref name="directory"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.CreateDirectory(System.IO.DirectoryInfo)">
            <summary>
            Создает каталог.
            </summary>
            <param name="directory">Экземпляр класса <see cref="T:System.IO.DirectoryInfo"/>, представляющий информацию о
            создаваемом каталоге.</param>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.CreateDirectoryByFilePath(System.String)">
            <summary>
            Создает каталог по заданному пути к файлу.
            </summary>
            <param name="filePath">Путь к файлу.</param>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.WriteInFile(System.String,System.String,System.Boolean)">
            <summary>
            Осуществляет запись в файл.
            </summary>
            <param name="filePath">Путь к файлу.</param>
            <param name="text">Текст для записи.</param>
            <param name="useWriteLine"><c>true</c>, если записывается текст с текущим признаком конца строки.</param>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.SetHiddenAttribute(System.String)">
            <summary>
            Устанавливает для заданного файла атрибут "Скрытый".
            </summary>
            <param name="fileName">Имя файла.</param>
        </member>
        <member name="M:Terrasoft.Common.FileUtilities.GetFiles(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Возвращает имена файлов из заданной директории.
            </summary>
            <param name="directoryPath">Путь к директории для поиска файлов.</param>
            <param name="searchPattern">Фильтр поиска файлов.</param>
            <param name="skipPaths">Перечислитель путей, которые необходимо исключить из поиска.</param>
            <returns>Перечислитель с именами файлов.</returns>
        </member>
        <member name="T:Terrasoft.Common.GraphicUtilities">
            <summary>
            Содержит служебные методы для работы с изображением.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.GraphicUtilities.GetImageFileExtension(System.Drawing.Image)">
            <summary>
            Возвращает строковое представление расширение файла данного изображения.
            </summary>
            <param name="source">Изображение.</param>
            <returns>Строка, представляющая расширение файла изображения в формате [.][расширение]</returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Метод расширения класса <see cref="T:System.Drawing.Image"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.GraphicUtilities.GetImageFileExtension(System.Drawing.Image,System.Boolean)">
            <summary>
            Возвращает строковое представление расширение файла данного изображения. 
            </summary>
            <param name="source">Изображение.</param>
            <param name="useDot"><c>true</c>, если результирующая строка содержит '.' перед расширением; 
            иначе - <c>false</c>.</param>
            <returns>Строка, представляющая расширение файла изображения.</returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Метод расширения класса <see cref="T:System.Drawing.Image"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.GraphicUtilities.GetImageFormat(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Возвращает формат данного изображения.
            </summary>
            <param name="rawFormat">Формат.</param>
            <returns>Формат данного изображения.</returns>
        </member>
        <member name="M:Terrasoft.Common.GraphicUtilities.ToByteArray(System.Drawing.Image)">
            <summary>
            Преобразует данный экземпляр <see cref="T:System.Drawing.Image"/> в массив байтов.
            </summary>
            <param name="source">Изображение.</param>
            <returns>Массив байтов.</returns>
            <remarks>Метод расширения класса <see cref="T:System.Drawing.Image"/>.</remarks>
        </member>
        <member name="T:Terrasoft.Common.GuidUtilities">
            <summary>
            Содержит служебные методы для работы со структурой <see cref="T:System.Guid"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.GuidUtilities.IsEmpty(System.Guid)">
            <summary>
            Определяет, является ли <see cref="T:System.Guid"/> пустым.
            </summary>
            <param name="source">Экземпляр структуры <see cref="T:System.Guid"/>.</param>
            <returns>
            <c>true</c> если экземпляр <paramref name="source"/> пустой; 
            иначе - <c>false</c>.
            </returns>
            <remarks>Метод расширения класса <see cref="T:System.Guid"/>.</remarks>
        </member>
        <member name="T:Terrasoft.Common.ImageUrlBuilder">
            <summary>
            Предоставляет методы для формирования url графических объектов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ImageUrlBuilder.GetImageUrl(System.String,System.Guid,System.String)">
            <summary>
            Возвращает строку url графического объекта по заданным менеджеру схемы, идентификатору схемы и имени 
            графического объекта. </summary>
            <param name="schemaManager">Менеджер схемы.</param>
            <param name="schemaUId">Идентификатор схемы.</param>
            <param name="imageName">Имя графического объекта.</param>
            <returns>Строка, представляющая url графического объекта с именем <paramref name="imageName"/>, менеджером
            схемы <paramref name="schemaManager"/>, идентификатором схемы <paramref name="schemaUId"/>.</returns>
            <remarks>
            <para>Перегруженный метод.</para>
            </remarks>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">При передаче в качестве одного из параметров
            <paramref name="schemaManager"/>, <paramref name="schemaUId"/>, <paramref name="imageName"/> пустого 
            значения или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Common.ImageUrlBuilder.GetImageUrl(System.String,System.String,System.String)">
            <summary>
            Возвращает строку url графического объекта по заданным списку графических объектов, имени графического 
            объекта, источнику. </summary>
            <param name="imageList">Список графических объектов.</param>
            <param name="imageName">Имя графического объекта.</param>
            <param name="source">Источник.</param>
            <returns>Строка, представляющая url графического объекта с именем <paramref name="imageName"/> из списка
            объектов <paramref name="imageList"/> источника <paramref name="source"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.ImageUrlBuilder.GetImageUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Возвращает строку url графического объекта по заданным списку графических объектов, имени графического 
            объекта, источнику и хэшу. </summary>
            <param name="imageList">Список графических объектов.</param>
            <param name="imageName">Имя графического объекта.</param>
            <param name="source">Источник.</param>
            <param name="hash">Хэш.</param>
            <returns>Строка, представляющая url графического объекта с именем <paramref name="imageName"/> из списка
            объектов <paramref name="imageList"/> источника <paramref name="source"/> хэша <paramref name="hash"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Common.JsonDataReader">
            <summary>
            Предоставляет методы для чтения данных в формате Json.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.#ctor(System.IO.TextReader)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.JsonDataReader"/>, используя заданный 
            <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="input"><see cref="T:System.IO.TextReader"/>, из которого следует считывать данные в формате 
            Json.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.#ctor(System.IO.Stream)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.JsonDataReader"/>, используя заданный поток.
            </summary>
            <param name="input">Поток, содержащий данные в формате Json.</param>
        </member>
        <member name="F:Terrasoft.Common.JsonDataReader._currentName">
            <summary>
            Возвращает имя текущего свойства.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.JsonDataReader._currentValue">
            <summary>
            Возвращает значение текущего свойства. 
            </summary>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.Dispose(System.Boolean)">
            <summary>
            Выполняет удаление, высвобождение и сброс управляемых и неуправляемых ресурсов.
            </summary>
            <param name="disposing">
            <c>true</c>, если необходимо высвободить и управляемые, и неуправляемые ресурсы; <c>false</c>, если 
            необходимо высвободить только неуправляемые ресурсы.
            </param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.Close">
            <summary>
            Закрывает текущий экземпляр <see cref="T:Terrasoft.Common.JsonDataReader"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.Read">
            <summary>
            Перемещает текущую позицию в наборе данных к следующему свойству текущего уровня вложенности.
            </summary>
            <returns>
            Строка с именем текущего свойства после выполнения метода либо пустая строка, если достигнут конец 
            набора данных.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.ReadInto">
            <summary>
            Перемещает текущую позицию в наборе данных на один уровень вложенности вниз.
            </summary>
            <returns>
            Строка с именем текущего свойства после выполнения метода либо
            пустая строка, если на текущем уровне нет вложенных свойств.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.ReadOut">
            <summary>
            Перемещает текущую позицию в наборе данных на один уровень вложенности вверх.
            </summary>
            <returns>
            Пустая строка. Чтобы получить имя следующего свойства, необходимо вызывать
            <see cref="M:Terrasoft.Common.DataReader.Read"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.ReadNextCollectionItem">
            <summary>
            Перемещается к следующему элементу в коллекции элементов.
            </summary>
            <returns>
            <c>true</c>, если перемещение к следующему элементу коллекции было успешным; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetStringValue">
            <summary>
            Возвращает значение текущего свойства типа <see cref="T:System.String"/>.
            </summary>
            <returns>
            Текущее значение свойства типа <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetGuidValue">
            <summary>
            Возвращает значение текущего свойства типа <see cref="T:System.Guid"/>.
            </summary>
            <returns>
            Текущее значение свойства типа <see cref="T:System.Guid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetIntValue">
            <summary>
            Возвращает значение текущего свойства типа <see cref="T:System.Int32"/>.
            </summary>
            <returns>
            Текущее значение свойства типа <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetDoubleValue">
            <summary>
            Возвращает значение текущего свойства типа <see cref="T:System.Double"/>.
            </summary>
            <returns>
            Текущее значение свойства типа <see cref="T:System.Double"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetDateTimeValue">
            <summary>
            Возвращает значение текущего свойства типа <see cref="T:System.DateTime"/>.
            </summary>
            <returns>
            Текущее значение свойства типа <see cref="T:System.DateTime"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetBoolValue">
            <summary>
            Возвращает значение текущего свойства типа <see cref="T:System.Boolean"/>.
            </summary>
            <returns>
            Текущее значение свойства типа <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetLocalizableStringValue">
            <summary>
            Возвращает значение текущего свойства типа <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </summary>
            <returns>
            Текущее значение свойства типа <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetStreamValue">
            <summary>
            Возвращает значение текущего свойства типа <see cref="T:System.IO.Stream"/>.
            </summary>
            <returns>
            Текущее значение свойства типа <see cref="T:System.IO.Stream"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetStreamValue(System.IO.Stream)">
            <summary>
            Записывает в заданный поток значение текущего свойства.
            </summary>
            <param name="stream">Поток, в который осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetEnumValue``1">
            <summary>
            Возвращает элемент перечисления, соответствующий значению текущего свойства.
            </summary>
            <typeparam name="TValue">Любой тип.</typeparam>
            <returns>
            Элемент перечисления, соответствующий значению текущего свойства.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetValue(Terrasoft.Common.DataConverter)">
            <summary>
            Возвращает объект, представляющий значение текущего свойства, преобразованный с помощью переданного 
            экземпляра <see cref="T:Terrasoft.Common.DataConverter"/>.
            </summary>
            <param name="converter">Экземпляр <see cref="T:Terrasoft.Common.DataConverter"/>, с помощью которого осуществляется 
            преобразование.</param>
            <returns>
            Значение текущего свойства типа <see cref="T:System.Object"/>,
            преобразованное в соответствии с <paramref name="converter"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetValue(System.Type)">
            <summary>
            Возвращает значение текущего свойства, преобразованное к заданному типу.
            </summary>
            <param name="valueType">Тип.</param>
            <returns>
            Значение текущего свойства, преобразованное к типу <paramref name="valueType"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetValue``1">
            <summary>
            Возвращает значение данного типа текущего свойства, преобразовывая его
            к данному типу.
            </summary>
            <typeparam name="TValue">Любой тип.</typeparam>
            <returns>
            Значение свойства, преобразованное к данному типу.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetSerialazebleObjectValue(System.Type)">
            <summary>
            Возвращает значение текущего десериализированного свойства, приведенное к заданному типу.
            </summary>
            <param name="objectType">Тип значения десериализируемого свойства.</param>
            <returns>
            Значение десериализированного свойства типа <paramref name="objectType"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetSerializableObjectValue``1">
            <summary>
            Возвращает значение текущего десериализированного свойства данного типа.
            </summary>
            <typeparam name="TValue">Тип значения десериализированного свойства.</typeparam>
            <returns>
            Значение текущего десериализированного свойства типа <typeparamref name="TValue"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.JsonDataReader.GetSerializableObjectValue">
            <summary>
            Возвращает значение текущего десериализированного свойства.
            </summary>
            <returns>
            Значение сериализуемого свойства типа <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Common.JsonDataWriterSettings">
            <summary>
            Предоставляет методы и свойства настроек <see cref="T:Terrasoft.Common.JsonDataWriter"/>. 
            </summary>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriterSettings.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.JsonDataWriterSettings"/> настройками
            по умолчанию.
            </summary>
            <remarks>
            Настройки по умолчанию для нового экземпляра <see cref="T:Terrasoft.Common.JsonDataWriterSettings"/>:
            <list type="table">
            <item><term>Кодировка</term><description><see cref="P:System.Text.Encoding.UTF8"/></description></item>
            <item><term>Форматирование:</term><description><see cref="F:Newtonsoft.Json.Formatting.None"/></description>
            </item>
            <item>&gt;<term>Использовать кавычки в имени объекта</term><description>true</description></item>
            <item>&gt;<term>Автоматически поставить открывающую фигурную скобку в поток, используемый для записи</term>
            <description>true</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Terrasoft.Common.JsonDataWriterSettings.Encoding">
            <summary>
            Возвращает и устанавливает кодировку экземпляра <see cref="T:Terrasoft.Common.JsonDataWriter"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.JsonDataWriterSettings.Formatting">
            <summary>
            Возвращает и устанавливает форматирование для экземпляра <see cref="T:Terrasoft.Common.JsonDataWriter"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.JsonDataWriterSettings.QuoteName">
            <summary>
            Возвращает и устанавливает признак использования кавычек в имени объектов Json экземпляра 
            <see cref="T:Terrasoft.Common.JsonDataWriter"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.JsonDataWriterSettings.AutoStartObject">
            <summary>
            Возвращает и устанавливает признак автоматического проставления открывающей фигурной скобки в поток, 
            используемый для записи.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.JsonDataWriter">
            <summary>
            Представляет методы для последовательной записи данных в формате Json.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.#ctor(Terrasoft.Common.JsonDataWriterSettings,System.IO.TextWriter)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.JsonDataWriter"/>, используя заданные настройки экземпляра и
            <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="settings">Настройки для нового экземпляра <see cref="T:Terrasoft.Common.JsonDataWriter"/>.
            </param>
            <param name="output">Экземпляр <see cref="T:System.IO.TextWriter"/>, с помощью которого осуществляется 
            запись.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.#ctor(Terrasoft.Common.JsonDataWriterSettings,System.IO.Stream)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.JsonDataWriter"/>, используя заданные настройки экземпляра и 
            поток вывода.
            </summary>
            <param name="settings">Настройки для нового экземпляра <see cref="T:Terrasoft.Common.XmlDataWriter"/>.
            </param>
            <param name="output">Поток, в который осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.Dispose(System.Boolean)">
            <summary>
            Выполняет удаление, высвобождение и сброс ресурсов. Отменяет вызов Finalize() для данного экземпляра.
            </summary>
            <param name="disposing">
            <c>true</c>, если необходимо высвободить и управляемые, и неуправляемые ресурсы; <c>false</c>, если 
            необходимо высвободить только неуправляемые ресурсы.
            </param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.Close">
            <summary>
            Закрывает текущий экземпляр <see cref="T:Terrasoft.Common.JsonDataWriter"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteStartObject">
            <summary>
            Осуществляет запись открывающей фигурной скобки в поток вывода.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteStartObject(System.String)">
            <summary>
            Начинает запись объекта с заданным именем в поток вывода.
            </summary>
            <param name="name">Имя объекта.</param>
            <remarks>Метод записывает в поток вывода имя объекта и открывающую фигурную скобку.</remarks>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteFinishObject">
            <summary>
            Завершает запись текущего объекта.
            </summary>
            <remarks>Метод запиcывает в поток вывода закрывающую фигурную скобку.</remarks>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,System.String,System.String)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.String"/> для свойства с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Значение свойства типа <see cref="T:System.String"/>.</param>
            <param name="defValue">Значение по умолчанию для свойства.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,System.Guid,System.Guid)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Guid"/> для свойства с заданными именем и 
            значением по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Значение свойства типа <see cref="T:System.Guid"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,System.Int32,System.Int32)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Int32"/> для свойства с заданными именем и значением
            по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Значение свойства типа <see cref="T:System.Int32"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,System.Decimal,System.Decimal)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Decimal"/> для свойства с заданными именем и 
            значением по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Значение свойства типа <see cref="T:System.Decimal"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,System.Double,System.Double)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Double"/> для свойства с заданными именем и 
            значением по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Значение свойства типа <see cref="T:System.Double"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,System.Enum,System.Enum)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Enum"/> для свойства с заданными именем и 
            значением по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Значение свойства типа <see cref="T:System.Enum"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,System.DateTime,System.DateTime)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.DateTime"/> для свойства с заданными именем и 
            значением по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Значение свойства типа <see cref="T:System.DateTime"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,System.Boolean,System.Boolean)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Boolean"/> для свойства с заданными именем и 
            значением по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Значение свойства типа <see cref="T:System.Boolean"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString)">
            <summary>
            Осуществляет запись значения типа <see cref="T:Terrasoft.Common.LocalizableString"/> для свойства с 
            заданными именем и значением по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Значение свойства типа <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,System.IO.Stream)">
            <summary>
            Осуществляет запись значения из заданного потока для свойства с заданным именем.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Поток, из которого осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,Terrasoft.Common.DataConverter,System.Object,System.Object)">
            <summary>
            Осуществляет запись значения свойства с заданными именем и значением <paramref name = "value"/>, 
            преобразованным заданным <paramref name = "converter"/>.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="converter">Преобразователь типов данных.</param>
            <param name="value">Значение.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.String,System.Type,System.Object,System.Object)">
            <summary>
            Осуществляет запись значения заданного типа для свойства с заданными именем и значением по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="valueType">Тип значения.</param>
            <param name="value">Значение.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">При передаче в качестве параметра <paramref name="valueType"/> 
            не поддерживаемого типа.</exception>
            <exception cref="T:System.ArgumentNullException">При передаче в качестве параметров <paramref name="name"/> и 
            <paramref name="value"/> пустого значения либо <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidTypeCastException">При попытке преобразовать значение
            свойства <paramref name="name"/> в недопустимый тип данных <paramref name="valueType"/>.</exception>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteStartCollection(System.String)">
            <summary>
            Начинает запись коллекции с заданным именем.
            </summary>
            <param name="name">Имя коллекции.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteFinishCollection">
            <summary>
            Завершает запись текущей коллекции.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteValue(System.Object[])">
            <summary>
            Осуществляет запись заданного массива значений.
            </summary>
            <param name="values">Массив значений.</param>
        </member>
        <member name="M:Terrasoft.Common.JsonDataWriter.WriteSerializableObjectValue(System.String,System.Object,System.Object)">
            <summary>
            Осуществляет запись заданного сериализуемого значения свойства с заданным именем и заданным значением 
            по умолчанию.
            </summary>
            <param name="name">Имя свойства.</param>
            <param name="value">Сериализуемое значение свойства.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="P:Terrasoft.Common.JsonDataWriter.Settings">
            <summary>
            Возвращает настройки данного экземпляра <see cref="T:Terrasoft.Common.JsonDataWriter"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.LocalizableImage">
            <summary>
            Предоставляет методы работы с локализуемым изображением.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.LocalizableValue`1">
            <summary>
            Шаблон для локализуемых значений различных типов, предоставляющий методы работы с ними.
            </summary>
            <typeparam name="T">Локализуемые значения типа <see cref="T:System.String"/>, 
            <see cref="T:System.Drawing.Image"/>.</typeparam>
        </member>
        <member name="T:Terrasoft.Common.LocalizableValue">
            <summary>
            Базовый класс для локализуемого значения.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableValue"/>. 
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableValue"/>, используя заданный 
            менеджер ресурсов и заданный элемент ресурса.
            </summary>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceItemName">Имя элемента ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue.#ctor(Terrasoft.Common.IResourceStorage,System.String,System.String)">
            <summary>
            Инициализирует новый зкземпляр класса <see cref="T:Terrasoft.Common.LocalizableValue"/>, используя заданные 
            хранилище ресурсов, менеджер ресурсов, элемент ресурсов.
            </summary>
            <param name="storage">Хранилище ресурсов - класс, реализующий интерфейс 
            <see cref="T:Terrasoft.Common.IResourceStorage"/>.</param>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceItemName">Имя элемента ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue.#ctor(Terrasoft.Common.LocalizableValue)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableValue"/>, используя заданное
            локализуемое значение. 
            </summary>
            <param name="source">Локализуемое значение.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue.ResetCultureValues">
            <summary>
            Выполняет сброс значения языкового стандарта для данного локализуемого значения. 
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue.SetResourceInfo(System.String,System.String,System.Boolean)">
            <summary>
            Устанавливает сведения о менеджере ресурсов и элементе ресурсов для данного локализуемого значения.
            </summary>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceItemName">Имя элемента ресурсов.</param>
            <param name="resetValue">Признак, определяющий необходимость сброса значения культуры.
            </param>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue.SetResourceInfo(Terrasoft.Common.IResourceStorage,System.String,System.String,System.Boolean)">
            <summary>
            Устанавливает информацию о хранилище ресурсов, менеджере ресурсов и элементе ресурсов для данного 
            локализуемого значения.
            </summary>
            <param name="storage">Хранилище ресурсов.</param>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceItemName">Элемент ресурса.</param>
            <param name="resetValue">Признак, определяющий необходимость сброса значения культуры.
            </param>
        </member>
        <member name="P:Terrasoft.Common.LocalizableValue.Storage">
            <summary>
            Возвращает и устанавливает хранилище ресурсов для данного локализуемого значения.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.LocalizableValue.ResourceManager">
            <summary>
            Возвращает менеджер ресурсов для данного локализуемого значения.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.LocalizableValue.ResourceManagerName">
            <summary>
            Возвращает и устанавливает имя менеджера ресурсов для данного локализуемого значения.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.LocalizableValue.ResourceItemName">
            <summary>
            Возвращает и устанавливает имя элемента ресурсов для данного локализуемого значения.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableValue"/>. 
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.#ctor(`0)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableValue"/> заданным значением 
            конкретного типа. </summary>
            <param name="value">Значение для инициализации.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableValue"/>, используя заданный
            менеджер ресурсов и заданный элемент ресурсов.
            </summary>
            <param name="resourceManagerName">Менеджер ресурсов.</param>
            <param name="resourceItemName">Элемент ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.#ctor(Terrasoft.Common.IResourceStorage,System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableValue"/>, используя заданные 
            хранилище ресурсов, менеджер ресурсов, элемент ресурсов. 
            </summary>
            <param name="storage">Хранилище ресурсов.</param>
            <param name="resourceManagerName">Менеджер ресурсов.</param>
            <param name="resourceItemName">Элемент ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.#ctor(Terrasoft.Common.LocalizableValue{`0})">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.LocalizableValue"/>, используя заданное 
            локализуемое значение конкретного типа.
            </summary>
            <param name="source">Локализуемое значение конкретного типа.</param>
            <remarks>Конструктор создает новый объект, который является копией <paramref name="source"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.GetFromResourceManager(System.Globalization.CultureInfo,System.String)">
            <summary>
            Возвращает локализуемое значение заданного типа по имени ресурса и культуре.
            </summary>
            <param name="culture">Культура.</param>
            <param name="itemName">Имя элемента ресурсов.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.ResetCultureValues">
            <summary>
            Выполняет сброс значения культуры для данного локализуемого значения.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.LoadCultureValues">
            <summary>
            Загружает список локализуемых значений данного типа для всех культур, которые
            определены в глобальном хранилище ресурсов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.HasCultureValue(System.Globalization.CultureInfo)">
            <summary>
            Определяет, существует ли локализуемое значение для для заданной культуры. 
            </summary>
            <param name="culture">Культура.</param>
            <returns>
            <c>true</c>, если для заданной культуры существует локализуемое значение;
            иначе - <c>false</c>. 
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.SetCultureValue(System.Globalization.CultureInfo,`0)">
            <summary>
            Устанавливает заданное локализуемое значение для заданной культуры.
            </summary>
            <param name="culture">Культура.</param>
            <param name="value">Локализуемое значение.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValue`1.GetCultureValue(System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Возвращает локализуемое значение заданного типа для заданной культуры. В 
            зависимости от значения параметра <paramref name="throwIfNoManager"/> метод может генерировать исключение
            типа <see cref="T:Terrasoft.Common.ItemNotFoundException"/>, если для данного локализуемого значения не установлен 
            менеджер ресурсов.
            </summary>
            <param name="culture">Культура.</param>
            <param name="throwIfNoManager">
            <c>true</c>, если метод должен генерировать исключение <see cref="T:Terrasoft.Common.ItemNotFoundException"/>. 
            </param>
            <returns>Локализуемое значение конкретного типа.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            Если переданный параметр <paramref name="throwIfNoManager"/> равен <c>true</c>.
            </exception>
        </member>
        <member name="P:Terrasoft.Common.LocalizableValue`1.Value">
            <summary>
            Возвращает и устанавливает локализуемое значение с учетом текущей культуры.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.LocalizableValue`1.HasValue">
            <summary>
            Возвращает признак, определяющий наличие локализуемого значения данного типа для текущей культуры.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.LocalizableValue`1.CultureValues">
            <summary>
            Возвращает справочник локализуемых значений текущего экземпляра для поддерживаемых культур.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableImage"/>
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.#ctor(System.Drawing.Image)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableImage"/>, используя заданное
            изображение.
            </summary>
            <param name="value">
            Изображение для инициализации экземпляра <see cref="T:Terrasoft.Common.LocalizableImage"/>.
            </param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableImage"/>, используя заданный 
            менеджер ресурсов и заданный элемент ресурсов.
            </summary>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceItemName">Имя элемента ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.#ctor(Terrasoft.Common.IResourceStorage,System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableImage"/>, используя заданные
            хранилище ресурсов, менеджер ресурсов и элемент ресурсов.
            </summary>
            <param name="storage">Хранилище ресурсов - класс, реализующий интерфейс 
            <see cref="T:Terrasoft.Common.IResourceStorage"/>.</param>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceItemName">Имя элемента ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.#ctor(Terrasoft.Common.LocalizableImage)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableImage"/>, используя заданное
            локализуемое изображение.
            </summary>
            <param name="source">Локализуемое изображение.</param>
            <remarks>Конструктор создает новый объект, который является копией <paramref name="source"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.op_Implicit(System.Drawing.Image)~Terrasoft.Common.LocalizableImage">
            <summary>
            Выполняет неявное преобразование типа <see cref="T:System.Drawing.Image"/> к типу 
            <see cref="T:Terrasoft.Common.LocalizableImage"/>.
            </summary>
            <param name="value">Экземпляр <see cref="T:System.Drawing.Image"/> для преобразования.</param>
            <returns>
            Экземпляр <see cref="T:Terrasoft.Common.LocalizableImage"/>, эквивалентный изображению 
            <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.op_Implicit(Terrasoft.Common.LocalizableImage)~System.Drawing.Image">
            <summary>
            Выполняет неявное преобразование типа <see cref="T:Terrasoft.Common.LocalizableImage"/> к типу 
            <see cref="T:System.Drawing.Image"/>.
            </summary>
            <param name="localizableImage">
            Экземпляр <see cref="T:Terrasoft.Common.LocalizableImage"/> для преобразования.
            </param>
            <returns>
            Экземпляр <see cref="T:System.Drawing.Image"/>, эквивалентный локализуемому изображению
            <paramref name="localizableImage"/>. 
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.op_Implicit(System.String)~Terrasoft.Common.LocalizableImage">
            <summary>
            Выполняет неявное преобразование типа <see cref="T:System.String"/> к типу
            <see cref="T:Terrasoft.Common.LocalizableImage"/>. 
            </summary>
            <param name="value">Экземпляр <see cref="T:System.String"/> для преобразования.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.op_Implicit(Terrasoft.Common.LocalizableImage)~System.String">
            <summary>
            Выполняет неявное преобразование типа <see cref="T:Terrasoft.Common.LocalizableImage"/> к типу
            <see cref="T:System.String"/>.
            </summary> 
            <param name="localizableImage">
            Экземпляр <see cref="T:Terrasoft.Common.LocalizableImage"/> для преобразования.
            </param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.Merge(Terrasoft.Common.LocalizableImage,Terrasoft.Common.LocalizableImage)">
            <summary>
            Выполняет объединение заданных локализуемых значений.
            </summary>
            <param name="target">Локализуемое изображение, с которым осуществляется объединение.</param>
            <param name="source">Локализуемое изображение, объединяемое с <paramref name="target"/>.</param>
            <returns>
            Экземпляр <see cref="T:Terrasoft.Common.LocalizableImage"/>, представляющий результат объединения 
            локализуемых изображений <paramref name="target"/> и <paramref name="source"/>. 
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.ToString">
            <summary>
            Выполняет неявное преобразование текущего экземпляра <see cref="T:Terrasoft.Common.LocalizableImage"/> к 
            строковому типу. 
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.Equals(System.Object)">
            <summary>
            Определяет, равны ли данный экземпляр <see cref="T:Terrasoft.Common.LocalizableImage"/> и заданный
            экземпляр <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">Экземпляр <see cref="T:System.Object"/> для сравнения с данным экземпляром
            <see cref="T:Terrasoft.Common.LocalizableImage"/>.</param>
            <returns>
            <c>true</c>, если <paramref name="obj"/> имеет тип <see cref="T:Terrasoft.Common.LocalizableImage"/> и его
            значение совпадает со значением данного экземпляра <see cref="T:Terrasoft.Common.LocalizableImage"/>; 
            иначе - <c>false</c>.
            </returns>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.GetHashCode">
            <summary>
            Возвращает хэш-код для данного локализуемого изображения.
            </summary>
            <returns>
            Хэш-код для данного экземпляра <see cref="T:Terrasoft.Common.LocalizableImage"/> в виде 32-битового целого
            числа со знаком.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.Clone">
            <summary>
            Создает клон текущего экземпляра <see cref="T:Terrasoft.Common.LocalizableImage"/>.
            </summary>
            <returns>
            Новый экземпляр <see cref="T:Terrasoft.Common.LocalizableImage"/>, представляющий копию текущего экземпляра.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableImage.GetCultureValue(System.Globalization.CultureInfo)">
            <summary>
            Возвращает значение типа <see cref="T:System.Drawing.Image"/>, соответствующее текущему экземпляру 
            <see cref="T:Terrasoft.Common.LocalizableImage"/> в заданной культуре либо генерирует исключение, 
            если такого изображения нет. 
            </summary>
            <param name="culture">Культура.</param>
            <returns>
            Изображение, локализованное в соответствии с культурой, заданной <paramref name="culture"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если для текущего экземпляра 
            <see cref="T:Terrasoft.Common.LocalizableImage"/> нет изображения для культуры <paramref name="culture"/>.
            </exception>
        </member>
        <member name="P:Terrasoft.Common.LocalizableImage.Empty">
            <summary>
            Возвращает пустое локализуемое изображение.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.LocalizableString">
            <summary>
            Предоставляет методы работы с локализуемой строкой.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.#ctor(System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableString"/>, используя заданное 
            строковое значение.
            </summary>
            <param name="value">Значение.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.#ctor(System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableString"/>, используя заданные имя менеджера 
            ресурсов и имя элемента ресурса.
            </summary>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceItemName">Имя элемента ресурсов.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.#ctor(Terrasoft.Common.IResourceStorage,System.String,System.String)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableString"/>, используя заданные хранилище 
            ресурсов, имя менеджера ресурсов и имя элемента ресурса.
            </summary>
            <param name="storage">Хранилище ресурсов.</param>
            <param name="resourceManagerName">Имя менеджера ресурсов.</param>
            <param name="resourceItemName">Имя элемента ресурса.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.#ctor(Terrasoft.Common.LocalizableString)">
            <summary>
            Инициализирует копию <see cref="T:Terrasoft.Common.LocalizableString"/>, переданной в качестве параметра 
            <paramref name="source"/>.
            </summary>
            <param name="source">Локализуемая строка.</param>
            <remarks>Конструктор создает новый объект, который является копией <paramref name="source"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.op_Implicit(System.String)~Terrasoft.Common.LocalizableString">
            <summary>
            Выполняет неявное преобразование типа <see cref="T:System.String"/> к типу 
            <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </summary>
            <param name="value">Экземпляр типа <see cref="T:System.String"/> для преобразования.</param>
            <returns>
            Экземпляр <see cref="T:Terrasoft.Common.LocalizableString"/>, эквивалентный строке <paramref name="value"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.op_Implicit(Terrasoft.Common.LocalizableString)~System.String">
            <summary>
            Выполняет неявное преобразование типа <see cref="T:Terrasoft.Common.LocalizableString"/> к типу 
            <see cref="T:System.String"/>.
            </summary>
            <param name="localizableString">Экземпляр типа <see cref="T:Terrasoft.Common.LocalizableString"/>
            для преобразования.</param>
            <returns>
            Экземпляр <see cref="T:System.String"/>, эквивалентный локализуемой строке 
            <paramref name="localizableString"/>, либо <c>null</c>, если <paramref name="localizableString"/> равна
            <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.op_Equality(Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString)">
            <summary>
            Реализует оператор равенства (==) двух локализуемых строк.
            </summary>
            <param name="op1">Операнд 1.</param>
            <param name="op2">Операнд 2.</param>
            <returns>
            <c>true</c>, если оба операнда являются эквивалентыми; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.op_Inequality(Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString)">
            <summary>
            Реализует оператор неравенства (!=) для двух локализуемых строк.
            </summary>
            <param name="op1">Операнд 1.</param>
            <param name="op2">Операнд 2.</param>
            <returns>
            <c>true</c>, если операнды не являются эквивалентыми; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.IsNullOrEmpty(Terrasoft.Common.LocalizableString)">
            <summary>
            Определяет, является ли заданная локализуемая строка пустой или <c>null</c>.
            </summary>
            <param name="localizableString">Локализуемая строка.</param>
            <returns>
            <c>true</c>, если локализуемая строка <paramref name="localizableString"/> является пустой или
            <c>null</c>; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.Merge(Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString)">
            <summary>
            Выполняет объединение заданных локализуемых строк.
            </summary>
            <param name="target">Локализуемая строка, с которой осуществляется объединение.</param>
            <param name="source">Локализуемая строка, объединяемая с <paramref name="target"/>.</param>
            <returns>Экземпляр <see cref="T:Terrasoft.Common.LocalizableString"/>, представляющий результат объединения локализуемых строк
            <paramref name="target"/> и <paramref name="source"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.Equals(System.Object)">
            <summary>
            Определяет, равны ли данный экземпляр <see cref="T:Terrasoft.Common.LocalizableString"/> и заданный
            экземпляр <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">Экземпляр <see cref="T:System.Object"/> для сравнения с данным экземпляром.</param>
            <returns>
            <c>true</c>, если <paramref name="obj"/> имеет тип <see cref="T:Terrasoft.Common.LocalizableString"/> и его
            значение совпадает со значением данного экземпляра; иначе - <c>false</c>.
            </returns>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.GetHashCode">
            <summary>
            Возвращает хэш-код для данной локализуемой строки.
            </summary>
            <returns>
            Хэш-код для данного экземпляра <see cref="T:Terrasoft.Common.LocalizableString"/> в виде 32-битового целого 
            числа со знаком. 
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.ToString">
            <summary>
            Преобразует локализуемое строковое значение данного экземпляра в эквивалентный ему
            экземпляр <see cref="T:System.String"/>.
            </summary>
            <returns>
            Экземпляр класса <see cref="T:System.String"/> эквивалентный данной локализуемой строке.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.Clone">
            <summary>
            Создает копию текущего экземпляра <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </summary>
            <returns>
            Новый экземпляр <see cref="T:Terrasoft.Common.LocalizableString"/>, представляющий копию текущего экземпляра.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.EqualsByValue(Terrasoft.Common.LocalizableString)">
            <summary>
            Определяет, равны ли по значению текущий и заданный экземпляры 
            <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </summary>
            <param name="caption">Экземпляр <see cref="T:Terrasoft.Common.LocalizableString"/> для сравнения с данным 
            экземпляром <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
            <returns>
            <c>true</c>, если значение данного экземпляра <see cref="T:Terrasoft.Common.LocalizableString"/> совпадает с
            <paramref name="caption"/>; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.GetCultureValue(System.Globalization.CultureInfo)">
            <summary>
            Возвращает строковое значение текущего экземпляра <see cref="T:Terrasoft.Common.LocalizableString"/> в 
            соответствии с заданной культурой. Если для заданной культуры локализуемое значение не определено, 
            генерируется исключение <see cref="T:Terrasoft.Common.ItemNotFoundException"/>.
            </summary>
            <param name="culture">Языковые и региональные параметры.</param>
            <returns>Строка, локализованная в соответствии с культурой, заданной <paramref name="culture"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            Если для заданной культуры не определено локализуемое значение. 
            </exception>
        </member>
        <member name="P:Terrasoft.Common.LocalizableString.Empty">
            <summary>
            Возвращает пустую локализуемую строку.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.LocalizableString.EmptyLocalizableString">
            <summary>
            Представляет пустую локализуемую строку.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.EmptyLocalizableString.SetCultureValue(System.Globalization.CultureInfo,System.String)">
            <summary>
            Устанавливает пустое локализуемое значение данного типа для заданной культуры.
            </summary>
            <param name="culture">Культура.</param>
            <param name="value">Локализуемое значение.</param>
            <exception cref="T:Terrasoft.Common.ObjectIsReadOnlyException">
            Генерируется при вызове данного метода. Для пустой строки нельзя установить локализуемое значение.
            </exception>
            <remarks>
            Перегрузка базового метода 
            <see cref="M:Terrasoft.Common.LocalizableValue`1.SetCultureValue(System.Globalization.CultureInfo,`0)"/>.
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.LocalizableString.EmptyLocalizableString.HasCultureValue(System.Globalization.CultureInfo)">
            <summary>
            Определяет, существует ли локализуемое значение для заданной культуры.
            </summary>
            <param name="culture">Культура.</param>
            <returns>
            Метод возвращает <c>false</c>, так как пустая локализуемая строка не может иметь значения для разных 
            культур.
            </returns>
        </member>
        <member name="P:Terrasoft.Common.LocalizableString.EmptyLocalizableString.Value">
            <summary>
            Возвращает значение пустой локализуемой строки. 
            </summary>
            <exception cref="T:Terrasoft.Common.ObjectIsReadOnlyException">Возникает при попытке установить значение свойства.
            </exception>
        </member>
        <member name="T:Terrasoft.Common.LocalizableStringConverter">
            <summary>
            Предоставляет методы преобразования типа <see cref="T:Terrasoft.Common.LocalizableString"/> в другие типы и 
            наоборот.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableStringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Определяет, можно ли преобразовать объект заданного типа в тип 
            <see cref="T:Terrasoft.Common.LocalizableString"/>, используя заданный контекст.
            </summary>
            <param name="context">Экземпляр класса, реализующего интерфейс 
            <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>, представляющий контекст формата.</param>
            <param name="sourceType">Экземпляр <see cref="T:System.Type"/>, представляющий тип, из которого требуется 
            выполнить преобразование.</param>
            <returns>
            <c>true</c>, если преобразование можно выполнить; иначе <c>false</c>.
            </returns>
            <remarks>Перегрузка базового метода <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)"/>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.LocalizableStringConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Определяет, можно ли преобразовать экземпляр <see cref="T:Terrasoft.Common.LocalizableString"/> в экземпляр
            заданного типа, используя заданный контекст.
            </summary>
            <param name="context">Экземпляр класса, реализующего интерфейс 
            <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> представляющий контекст формата.</param>
            <param name="destinationType">Экземпляр <see cref="T:System.Type"/>, представляющий тип, к которому 
            требуется выполнить приведение.</param>
            <returns>
            <c>true</c>, если преобразование можно выполнить; иначе - <c>false</c>.
            </returns>
            <remarks>Перегрузка базового метода <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"/>.
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.LocalizableStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Преобразует заданный объект в тип <see cref="T:Terrasoft.Common.LocalizableString"/>, используя заданные 
            контекст и информацию о культуре.
            </summary>
            <param name="context">Экземпляр класса, реализующего интерфейс 
            <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>, представляющий контекст формата.</param>
            <param name="culture">Языковой стандарт.</param>
            <param name="value">Преобразуемый объект.</param>
            <returns><c>true</c>, если преобразование можно выполнить; иначе <c>false</c>.
            </returns>
            <remarks>
            Перегрузка базового метода 
            <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Если в качестве параметра <paramref name="value"/> передано значение <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Common.LocalizableStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Преобразует заданный объект в указанный тип, используя заданные контекст и информацию о культуре.
            </summary>
            <param name="context">Экземпляр класса, реализующего интерфейс 
            <see cref="T:System.ComponentModel.ITypeDescriptorContext"/>, представляющий контекст формата. </param>
            <param name="culture">Культура.</param>
            <param name="value">Преобразуемый объект.</param>
            <param name="destinationType">Тип <see cref="T:System.Type"/>, к которому преобразуется
            <paramref name="value"/>.</param>
            <returns>
            Экземпляр <see cref="T:System.Object"/>, представляющий преобразованное значение.
            </returns>
            <remarks>
            Перегрузка базового метода 
            <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            Если в качестве параметра <paramref name="destinationType"/> передано значение <c>null</c>.
            </exception>
        </member>
        <member name="T:Terrasoft.Common.LocalizableValueCollection">
            <summary>
            Предоставляет методы работы с коллекцией локализуемых значений.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValueCollection.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableValueCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValueCollection.#ctor(Terrasoft.Common.LocalizableValueCollection)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.LocalizableValueCollection"/>, используя
            заданную коллекцию локализуемых значений.
            </summary>
            <param name="source">Коллекция локализуемых значений.</param>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValueCollection.FindByItemName(System.String)">
            <summary>
            Осуществляет поиск элемента по заданному имени.
            </summary>
            <param name="itemName">Имя искомого элемента.</param> 
            <returns>Найденное значение элемента с именем <paramref name="itemName"/> типа 
            <see cref="T:Terrasoft.Common.LocalizableValue"/>. Если элемента с именем <paramref name="itemName"/> 
            не найдено в данной коллекции, возвращается <c>null</c>.
            </returns>
            <exception cref="T:System.ArgumentNullException">. 
            При передаче в качестве параметра <paramref name="itemName"/> значения <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValueCollection.GetByItemName(System.String)">
            <summary>
            Возвращает элемент с заданным именем либо генерирует исключение, если
            элемент не найден.
            </summary>
            <param name="itemName">Имя искомого элемента.</param>
            <returns>
            Элемент коллекции с именем <paramref name="itemName"/> типа <see cref="T:Terrasoft.Common.LocalizableValue"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если элемент с именем <paramref name="itemName"/> в данной 
            коллекции не найден. </exception>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValueCollection.GetDifferenceByName(Terrasoft.Common.LocalizableValueCollection)">
            <summary>
            Возвращает коллекцию элементов, которая представляет собой разницу по имени между текущей и заданной 
            коллекцией. 
            </summary>
            <param name="subtrahend">
            Коллекция локализуемых значений, которые сравниваются с элементами текущей коллекции.
            </param>
            <returns>
            Разница по имени элементов текущей и заданной коллекции <paramref name="subtrahend"/>.
            </returns>
            <remarks>Метод создает копию текущей коллекции и осуществляет поиск по имени элементов 
            <paramref name="subtrahend"/> в текущей коллекции. Если элемент найден, он удаляется из созданной копии 
            текущей коллекции.
            </remarks>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">
            При передаче в качестве параметра <paramref name="subtrahend"/> значений <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValueCollection.GetDifferenceByValues(Terrasoft.Common.LocalizableValueCollection,System.Globalization.CultureInfo)">
            <summary>
            Возвращает коллекцию элементов, которая представляет собой разницу по значению между текущей и заданной 
            коллекцией с учетом заданной культуры.
            </summary>
            <param name="subtrahend">
            Коллекция локализуемых значений, которые сравниваются с элементами текущей коллекции.
            </param>
            <param name="culture">Культура.</param>
            <returns>
            Разница по имени элементов текущей и заданной коллекции <paramref name="subtrahend"/> с учетом культуры
            <paramref name="culture"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">При передаче в качестве параметров <paramref name="subtrahend"/>
            или <paramref name="culture"/> значения <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValueCollection.RemoveByItemName(System.String)">
            <summary>
            Удаляет из текущей коллекции локализуемых значений элемент с именем <paramref name="itemName"/>.
            </summary>
            <param name="itemName">Имя удаляемого элемента коллекции.</param>
            <returns>
            <c>true</c>, если элемент с именем <paramref name="itemName"/> был успешно удален из коллекции;
            иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.LocalizableValueCollection.Clone">
            <summary>
            Создает копию текущей коллекции <see cref="T:Terrasoft.Common.LocalizableValueCollection"/>
            </summary>
            <returns>
            Новый экземпляр <see cref="T:Terrasoft.Common.LocalizableValueCollection"/>, представляющий собой копию 
            текущей коллекции. 
            </returns>
        </member>
        <member name="T:Terrasoft.Common.ReflectionUtilities">
            <summary>
            Предоставляет методы работы с информацией о классах и типах во время выполнения.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.ForceGetValue(System.Reflection.PropertyInfo,System.Object,System.Object[])">
            <summary>
            Возвращает значение текущего свойства либо значение метода get_[имя свойства <paramref name="source"/>]() 
            заданного объекта <paramref name="obj"/>.
            </summary>
            <param name="source">Атрибуты и метаданные текущего свойства.</param>
            <param name="obj">Объект , значение которого возвращается, если свойство <paramref name="source"/> 
            предназначено только для записи.</param>
            <param name="args"></param>
            <returns>Объект, содержащий значение свойства.</returns>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="obj"/> передано значение
            <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если свойство <paramref name="obj"/> предназначено только для 
            записи.</exception>
            <remarks>Метод расширения для класса <see cref="T:System.Reflection.PropertyInfo"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.GetPropertyValue(System.Object,System.String)">
            <summary>
            Возвращает для экземпляра текущего типа значение свойства с заданным именем.
            </summary>
            <param name="source">Тип.</param>
            <param name="propertyName">Имя свойства.</param>
            <returns>Объект, содержащий значение свойства.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="propertyName"/> 
            передано пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если экземпляр текущего тип не содержит свойство с именем 
            <paramref name="propertyName"/> либо если свойство <paramref name="propertyName"/> предназначено только для 
            записи.
            </exception>
            <remarks>Метод расширения класса <see cref="T:System.Object"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.GetPropertyDefValue(System.Object,System.String,System.Object)">
            <summary>
            Возвращает для экземпляра текущего типа значение свойства с заданным именем либо заданное значение по 
            умолчанию, если текущий тип не содержит свойства с таким именем.
            </summary>
            <param name="source">Тип.</param>
            <param name="propertyName">Имя свойства.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <returns>Объект, содержащий значение свойства.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="propertyName"/> 
            передано пустое значение или <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если свойство <paramref name="propertyName"/> предназначено 
            только для записи.</exception>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.TryGetPropertyValue(System.Object,System.String,System.Object@)">
            <summary>
            Определяет, возможно ли у экземпляра текущего типа получить значение свойства с заданным именем.
            </summary>
            <param name="source">Тип.</param>
            <param name="propertyName">Имя свойства.</param>
            <param name="value">Значение свойства.</param>
            <returns>
            <c>true</c>, если для свойства <paramref name="propertyName"/> успешно получено его значение; иначе - 
            <c>false.</c>
            </returns>
            <remarks>Метод расширения класса <see cref="T:System.Object"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.GetPropertyValue(System.Object,System.String,System.Reflection.BindingFlags)">
            <summary>
            Возвращает для экземпляра текущего типа значение свойства с заданным именем либо генерирует исключение, 
            если текущий экземпляр не содержит свойства с заданным именем.
            </summary>
            <param name="source">Тип.</param>
            <param name="propertyName">Имя свойства.</param>
            <param name="bindingFlags">Флаги привязки типа <see cref="T:System.Reflection.BindingFlags"/>.</param>
            <returns>
            Значение свойства <paramref name="propertyName"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.GetPropertyValueByPath(System.Object,System.String)">
            <summary>
            Возвращает для экземпляра текущего типа значение свойства по заданному пути к свойству.
            </summary>
            <param name="source">Тип.</param>
            <param name="propertyPath">Путь к свойству в формате 
            [Имя свойства].[Имя вложенного свойства].&lt;...&gt;.[Имя результирующего свойства].</param>
            <returns>Значение свойства <paramref name="propertyPath"/>.</returns>
            <remarks>Метод расширения класса <see cref="T:System.Object"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            Устанавливает для экземпляра текущего типа значение свойства с заданным именем.
            </summary>
            <param name="source">Тип.</param>
            <param name="propertyName">Имя свойства.</param>
            <param name="value">Значение свойства.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметра <paramref name="propertyName"/> 
            передано пустое значение либо <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если экземпляр текущего типа не содержит свойство с именем
            <paramref name="propertyName"/> либо если свойство <paramref name="propertyName"/> только для записи.
            </exception>
            <exception cref="T:Terrasoft.Common.InvalidTypeCastException">Если тип свойства с именем
            <paramref name="propertyName"/> несовместим с типом присваиваемого значения <paramref name="value"/>.
            </exception>
            <remarks>Метод расширения для класса <see cref="T:System.Object"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.TrySetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            Пытается установить для экземпляра текущего типа значение для заданного свойства.
            </summary>
            <param name="source">Тип.</param>
            <param name="propertyName">Имя свойства.</param>
            <param name="value">Значение свойства.</param>
            <returns>
            <c>true</c>, если для свойства <paramref name="propertyName"/> удалось успешно установить значение 
            <paramref name="value"/>; иначе - <c>false</c>. 
            </returns>
            <remarks>Метод расширения для класса <see cref="T:System.Object"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.FindTypeByShortName(System.Reflection.Assembly,System.String)">
            <summary>
            Осуществляет поиск типа по заданному короткому имени в указанной сборке.
            </summary>
            <param name="assembly">Сборка, в которой осуществляется поиск.</param>
            <param name="name">Имя типа.</param>
            <returns>
            <c>true</c>, если в сборке <paramref name="assembly"/> успешно найден тип с именем <paramref name="name"/>; 
            иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.IsTypeOf(System.Object,System.String,System.Boolean)">
            <summary>
            Проверяет, является ли заданный объект типом с указанным полным именем. 
            </summary>
            <param name="obj">Объект для проверки.</param>
            <param name="typeFullName">Полное имя типа.</param>
            <param name="shallow">Признак проверки по всем уровням иерархии.</param>
            <returns>
            <c>true</c>, если объект <paramref name="obj"/> является типом <paramref name="typeFullName"/>;
            иначе - <c>false</c>.
            </returns>
            <remarks>Перегруженный метод.</remarks>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.IsTypeOf(System.Object,System.Type,System.Boolean)">
            <summary>
            Проверяет, является ли заданный объект указанным типом.
            </summary>
            <param name="obj">Объект для проверки.</param>
            <param name="type">Тип - эталон.</param>
            <param name="shallow">Признак проверки по всем уровням иерархии.</param>
            <returns>
            <c>true</c>, если объект <paramref name="obj"/> является типом <paramref name="type"/>; 
            иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.GetDefValue(System.Reflection.PropertyInfo)">
            <summary>
            Возвращает значение по умолчанию для заданного свойства.
            </summary>
            <param name="property">Свойство.</param>
            <returns>
            Объект значения по умолчанию для свойства <paramref name="property"/> либо пустая строка, если 
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ReflectionUtilities.GetDefValue(System.Type)">
            <summary>
            Возвращает значение по умолчанию для заданного value-типа.
            </summary>
            <param name="type">Value-тип.</param>
            <returns>
            Объект значения по умолчанию для value-типа <paramref name="type"/>. 
            </returns>
        </member>
        <member name="T:Terrasoft.Common.ResourceBuilder">
            <summary>
            Предоставляет методы для построения ресурсов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ResourceBuilder.BuildResources(Terrasoft.Common.ResourcePackage,System.IO.Stream)">
            <summary>
            Преобразует ресурсы заданного пакета ресурсов в двоичное представление и записывает их в заданный поток.
            </summary>
            <param name="resources">Пакет ресурсов.</param>
            <param name="resultStream">Поток, в который осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.ResourceBuilder.BuildResources(Terrasoft.Common.ResourcePackage,System.String)">
            <summary>
            Преобразует ресурсы заданного пакета ресурсов в двоичное представление и записывает их в заданный файл.
            </summary>
            <param name="resources">Пакет ресурсов.</param>
            <param name="outputFilePath">Путь к файлу, в который осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.ResourceBuilder.BuildJsResources(Terrasoft.Common.ResourcePackage,System.String,System.IO.Stream)">
            <summary>
            Преобразует ресурсы JavaScript файлов в двоичное представление и записывает их с заданным 
            именем в указанный поток.
            </summary>
            <param name="resources">Пакет ресурсов.</param>
            <param name="stringListName">Имя списка ресурсов.</param>
            <param name="resultStream">Поток, в который осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.ResourceBuilder.BuildClientResources(Terrasoft.Common.ResourcePackage,System.String,System.IO.Stream)">
            <summary>
            Преобразует ресурсы заданного пакета ресурсов в двоичное представление и записывает их с 
            заданным именем в указанный поток.
            </summary>
            <param name="resources">Пакет ресурсов.</param>
            <param name="stringListName">Имя списка ресурсов.</param>
            <param name="resultStream">Поток, в который осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.ResourceBuilder.BuildClientResources(Terrasoft.Common.ResourcePackage,System.String,System.String)">
            <summary>
            Преобразует ресурсы заданного пакета ресурсов в двоичное представление и записывает их с 
            заданным именем в указанный файл.
            </summary>
            <param name="resources">Пакет ресурсов.</param>
            <param name="stringListName">Имя списка ресурсов.</param>
            <param name="outputFilePath">Имя файла, в который осуществляется запись.</param>
        </member>
        <member name="P:Terrasoft.Common.ResourceBuilder.RootDirectory">
            <summary>
            Корневая директория.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.BaseResource">
            <summary>
            Базовый класс для представления ресурса.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.BaseResource.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Абстрактный метод десериализации ресурсов с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется десериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.BaseResource.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Абстрактный метод сериализации ресурсов с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется сериализация.
            <param name="writer">
            </param>
        </member>
        <member name="M:Terrasoft.Common.BaseResource.ReadXml(System.Xml.XmlReader)">
            <summary>
            Абстрактный метод десериализации ресурсов с помощью заданного экземпляра <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:System.Xml.XmlReader"/>, с помощью которого осуществляется десериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.BaseResource.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Абстрактный метод сериализации ресурсов с помощью заданного экземпляра <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:System.Xml.XmlWriter"/>, с помощью которого осуществляется сериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.BaseResource.GetSchema">
            <summary>
            Возвращает Xml-схему представления ресурса.
            </summary>
            <returns>
            Xml-схема представления ресурса.
            </returns>
        </member>
        <member name="P:Terrasoft.Common.BaseResource.Package">
            <summary>
            Пакет ресурсов, которому принадлежит ресурс.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.BaseResource.ParentGroup">
            <summary>
            Родительская группа ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.BaseResource.Name">
            <summary>
            Имя ресурса.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.BaseResource.ActualName">
            <summary>
            Актуальное имя ресурса в формате 
            [Имя родительской группы_1].&lt;...&gt;.[Имя родительской группы_N].[Имя ресурса]
            </summary>
        </member>
        <member name="P:Terrasoft.Common.BaseResource.ItemType">
            <summary>
            Тип ресурса.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.BaseResource.ActualItemType">
            <summary>
            Актуальный тип ресурса. Если для текущего ресурса не определен его тип, то возвращается тип родительской 
            группы ресурса.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.BaseResource.FilePath">
            <summary>
            Путь к файлу ресурса.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.BaseResource.ActualFilePath">
            <summary>
            Актуальный путь к файлу ресурса. Если для текущего ресурса не определен путь к файлу, то возвращается 
            путь к файлу родительской группы ресурса
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ResourceGroup">
            <summary>
            Предоставляет методы для работы с группой ресурсов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroup.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет десериализацию группы ресурсов с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataReader"/>. 
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется десериализация.
            </param>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException">
            Если метаданные содержат неизвестный элемент. 
            </exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroup.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию группы ресурсов с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется сериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroup.ReadXml(System.Xml.XmlReader)">
            <summary>
            Выполняет десериализацию группы ресурсов с помощью заданного экземпляра <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:System.Xml.XmlReader"/>, с помощью которого осуществляется десериализация.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">
            Если для текущей группы ресурсов не определен пакет ресурсов.
            </exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroup.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Выполняет сериализацию группы ресурсов с помощью заданного экземпляра <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:System.Xml.XmlWriter"/>, с помощью которого осуществляется сериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroup.FindItemByName(System.String)">
            <summary>
            Выполняет поиск ресурса с заданным именем в текущей группе ресурсов и ее подгруппах.
            </summary>
            <param name="name">
            Имя искомого ресурса.
            </param>
            <returns>
            Первый найденный ресурс с именем <paramref name="name"/> в текущей группе ресурсов и в 
            ее подгруппах либо <c>null</c>, если элемент с таким именем не найден.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroup.GetItemByName(System.String)">
            <summary>
            Возвращает ресурс с заданным именем из текущей группы ресурсов и ее подгрупп либо 
            генерирует исключение, если ресурса с таким именем не найдено.
            </summary>
            <param name="name">
            Имя искомого ресурса.
            </param>
            <returns>
            Первый найденный ресурс с именем <paramref name="name"/> в текущей группе ресурсов и ее подгруппах.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если в текущей группе ресурсов и ее подгруппах
            ресурс с именем <paramref name="name"/> не найден.</exception>
        </member>
        <member name="P:Terrasoft.Common.ResourceGroup.Package">
            <summary>
            Пакет ресурсов, которому принадлежит текущая группа ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResourceGroup.Groups">
            <summary>
            Подгруппы текущей группы ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResourceGroup.HasGroups">
            <summary>
            Признак, определяющий наличие подгруппы у текущей группы ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResourceGroup.Items">
            <summary>
            Коллекция элементов ресурсов текущей группы ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResourceGroup.HasItems">
            <summary>
            <c>true</c>, если текущая группа ресурсов содержит элементы ресурсов; иначе - <c>false</c>.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ResourceGroupCollection">
            <summary>
            Предоставляет методы для работы с коллекцией групп ресурсов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroupCollection.InsertItem(System.Int32,Terrasoft.Common.ResourceGroup)">
            <summary>
            Добавляет заданную группу ресурсов в текущую коллекцию по указанному индексу. 
            </summary>
            <param name="index">Индекс, по которому следует вставить группу ресурсов <paramref name="item"/>.</param>
            <param name="item">
            Группа ресурсов, которая добавляется в коллекцию.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для коллекции групп ресурсов не установлены 
            значения Package либо ParentGroup.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroupCollection.SetItem(System.Int32,Terrasoft.Common.ResourceGroup)">
            <summary>
            Заменяет группу ресурсов в текущей коллекции по указанному индексу.
            </summary>
            <param name="index">
            Индекс элемента, который необходимо заменить.
            </param>
            <param name="item">
            Группа ресурсов, которая заменяет элемент коллекции по индексу <paramref name="index"/>.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для коллекции групп ресурсов не установлены 
            значения Package либо ParentGroup.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroupCollection.RemoveItem(System.Int32)">
            <summary>
            Удаляет заданную группу из текущей коллекции по указанному индексу.
            </summary>
            <param name="index">
            Индекс элемента, который требуется удалить.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для коллекции групп ресурсов не установлены 
            значения Package либо ParentGroup.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroupCollection.ClearItems">
            <summary>
            Удаляет все элементы из текущей коллекции.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для коллекции группы ресурсов не установлены 
            значения Package либо ParentGroup.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceGroupCollection.Add(System.String)">
            <summary>
            Добавляет в текущую коллекцию групп ресурсов новую группу с заданным именем.
            </summary>
            <param name="name">
            Имя добавляемой группы ресурсов.
            </param>
            <returns>
            Добавленная в текущую коллекцию группа с именем <paramref name="name"/>.
            </returns>
        </member>
        <member name="P:Terrasoft.Common.ResourceGroupCollection.Package">
            <summary>
            Пакет ресурсов для текущей коллекции групп ресурсов. 
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResourceGroupCollection.ParentGroup">
            <summary>
            Родительская группа для текущей коллекции групп ресурсов.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ResourceItem">
            <summary>
            Базовый класс для представления элемента ресурса.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ResourceItem.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет десериализацию ресурса с помощью заданного экземпляра <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется десериализация.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException"> 
            Если в метаданных указан недопустимый идентификатор ресурса.</exception>
            <exception cref="T:Newtonsoft.Json.JsonSerializationException">
            Если метаданные содержат неизвестный вложенный элемент.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceItem.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию ресурса с помощью заданного экземпляра <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется сериализация.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для сериализуемого ресурса не указан его тип.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceItem.ReadXml(System.Xml.XmlReader)">
            <summary>
            Выполняет десериализацию ресурса с помощью заданного экземпляра <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:System.Xml.XmlReader"/>, с помощью которого осуществляется десериализация.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если в метаданных указан недопустимый идентификатор 
            ресурса.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceItem.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Выполняет сериализацию ресурса с помощью заданного экземпляра <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:System.Xml.XmlWriter"/>, с помощью которого осуществляется сериализация.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если не указан тип сериализуемого ресурса.</exception>
        </member>
        <member name="P:Terrasoft.Common.ResourceItem.Id">
            <summary>
            Идентификатор ресурса.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResourceItem.StringValue">
            <summary>
            Значение ресурса типа <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResourceItem.ImageValue">
            <summary>
            Значение ресурса типа <see cref="T:System.Drawing.Image"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResourceItem.FileValue">
            <summary>
            Значение ресурса типа массива байтов.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ResourceItemCollection">
            <summary>
            Предоставляет методы для работы с коллекцией элементов ресурсов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ResourceItemCollection.InsertItem(System.Int32,Terrasoft.Common.ResourceItem)">
            <summary>
            Добавляет в текущую коллекцию элементов ресурсов заданный ресурс по указанному индексу. 
            </summary>
            <param name="index">Индекс, по которому добавляется новый ресурс.</param>
            <param name="item">
            Ресурс, который добавляется в коллекцию.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для текущей коллекции элементов ресурсов не установлены 
            значения Package либо ParentGroup.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceItemCollection.SetItem(System.Int32,Terrasoft.Common.ResourceItem)">
            <summary>
            Заменяет элемент текущей коллекции элементов ресурсов по указанному индексу заданным ресурсом.
            </summary>
            <param name="index">
            Индекс элемента, который необходимо заменить.
            </param>
            <param name="item">
            Ресурс, который заменяет элемент коллекции элементов ресурсов по индексу <paramref name="index"/>.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для текущей коллекции элементов ресурсов не установлены 
            значения Package либо ParentGroup.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceItemCollection.RemoveItem(System.Int32)">
            <summary>
            Удаляет ресурс по указанному индексу в текущей коллекции элементов ресурсов.
            </summary>
            <param name="index">
            Индекс ресурса, который требуется удалить.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для текущей коллекции элементов ресурсов не установлены 
            значения Package либо ParentGroup.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceItemCollection.ClearItems">
            <summary>
            Удаляет все элементы из текущей коллекции элементов ресурсов.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для текущей коллекции элементов ресурсов не установлены 
            значения Package либо ParentGroup.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceItemCollection.AddIfNotExists(Terrasoft.Common.ResourceItem)">
            <summary>
            Добавляет ресурс в коллекцию элементов ресурсов, если он в нее не входит. 
            </summary>
            <param name="item">
            Добавляемый ресурс.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourceItemCollection.GetSchema">
            <summary>
            Возвращает Xml-схему представления данного ресурса.
            </summary>
            <returns>
            Xml-схема представления данного ресурса.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ResourceItemCollection.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет десериализацию коллекции элементов ресурсов из заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataReader"/> и добавляет ее в текущую коллекцию элементов ресурсов.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, из которого осуществляется десериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourceItemCollection.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию коллекции элементов ресурсов в заданный экземпляр 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, в который осуществляется сериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourceItemCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Выполняет десериализацию коллекции элементов ресурсов из заданного экземпляра 
            <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:System.Xml.XmlReader"/>, из которого осуществляется десериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourceItemCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Выполняет сериализацию коллекции элементов ресурсов в заданный экземпляр <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:System.Xml.XmlWriter"/>, в который осуществляется сериализация.
            </param>
        </member>
        <member name="P:Terrasoft.Common.ResourceItemCollection.Package">
            <summary>
            Пакет ресурсов для текущей коллекции элементов ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResourceItemCollection.ParentGroup">
            <summary>
            Родительская группа для текущей коллекции элементов ресурсов.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.XmlResourceReader">
            <summary>
            Предоставляет методы для чтения метаданных ресурсов в формате Xml.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.XmlResourceReader.#ctor(System.IO.Stream)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.XmlResourceReader"/> с указанным потоком.
            </summary>
            <param name="source">Поток, содержащий метаданные ресурсов.</param>
        </member>
        <member name="P:Terrasoft.Common.XmlResourceReader.ResourcesDirectory">
            <summary>
            Директория, в которой расположены файлы ресурсов.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.XmlResourceWriter">
            <summary>
            Предоставляет методы для записи метаданных ресурсов в формат Xml.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.XmlResourceWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.XmlResourceWriter"/>, используя заданный 
            <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="textWriter">
            Экземпляр <see cref="T:System.IO.TextWriter"/>, с помощью которого осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlResourceWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.XmlResourceWriter"/>, используя заданные поток
            вывода и кодировку. 
            </summary>
            <param name="stream">Поток вывода.</param>
            <param name="encoding">Кодировка.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlResourceWriter.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.XmlResourceWriter"/>, используя заданный путь к
            файлу и заданную кодировку.
            </summary>
            <param name="filePath">Путь к файлу.</param>
            <param name="encoding">Кодировка.</param>
        </member>
        <member name="P:Terrasoft.Common.XmlResourceWriter.OutputDirectory">
            <summary>
            Директория в которой располагаются файлы ресурсов.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ResourcePackage">
            <summary>
            Предоставляет методы работы с пакетом ресурсов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.#ctor">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.ResourcePackage"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ResourcePackage"/> для культуры с заданным 
            именем.
            </summary>
            <param name="cultureName">Имя культуры.</param>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">При передаче в качестве параметра <paramref name="cultureName"/>
            пустого значения или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ResourcePackage"/> для заданной культуры.
            </summary>
            <param name="culture">Культура.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">При передаче в качестве параметра <paramref name="culture"/>
            пустого значения или <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.#ctor(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Globalization.CultureInfo,System.Boolean)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.ResourcePackage"/>, используя заданные коллекцию
            локализуемых значений, объект культуры и признак оптимизации коллекции.
            </summary>
            <param name="localizableValues">Коллекция локализуемых значений.</param>
            <param name="culture">Культура.</param>
            <param name="optimize">Признак оптимизации коллекции локализуемых значений.</param>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.AddValue(Terrasoft.Common.ResourceGroup,Terrasoft.Common.LocalizableValue,System.String,System.Globalization.CultureInfo)">
            <summary>
            Добавляет в пакет ресурсов новое значение.
            </summary>
            <param name="group">Группа ресурсов, в которую осуществляется добавление.</param>
            <param name="value">Локализуемое значение добавляемого элемента.</param>
            <param name="itemName">Имя добавляемого элемента.</param>
            <param name="culture">Культура добавляемого элемента.</param>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.MoveItemToParentGroupAndRemoveGroup(Terrasoft.Common.ResourceGroup)">
            <summary>
            Перемещает первый ресурс из заданной группы ресурсов в текущую и удаляет заданную группу ресурсов.
            </summary>
            <param name="currentGroup">
            Имя группы ресурсов, откуда осуществляется перемещение.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.CreateFromStream(System.IO.Stream)">
            <summary>
            Формирует пакет ресурсов из заданного потока.
            </summary>
            <param name="stream">Поток, из которого формируется пакет ресурсов.</param>
            <returns>
            Сформированный пакет ресурсов.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.CreateFromFile(System.String)">
            <summary>
            Формирует пакет ресурсов из файла, расположенного по заданному пути.
            </summary>
            <param name="filePath">
            Путь к файлу.
            </param>
            <returns>
            Сформированный пакет ресурсов.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.SaveToFile(System.String)">
            <summary>
            Выполняет сериализацию текущего пакета ресурсов в файл, расположенный по заданному пути.
            </summary>
            <param name="filePath">
            Путь к файлу.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.SaveToStream(Terrasoft.Common.XmlResourceWriter)">
            <summary>
            Выполняет сериализацию текущего пакета ресурсов с помощью заданного <see cref="T:Terrasoft.Common.XmlResourceWriter"/>.
            </summary>
            <param name="xmlResourceWriter">
            Экземпляр <see cref="T:Terrasoft.Common.XmlResourceWriter"/>, с помощью которого осущеcтвляется запись.
            </param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">Если для текущего пакета ресурсов не установлено значение 
            культуры.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.GetSchema">
            <summary>
            Возвращает Xml-схему представления пакета ресурсов.
            </summary>
            <returns>
            Xml-схема представления пакета ресурсов.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Выполняет десериализацию текущего пакета ресурсов с помощью заданного 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:Terrasoft.Common.DataReader"/>, с помощью которого осуществляется десериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Выполняет сериализацию пакета ресурсов с помощью заданного экземпляра 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:Terrasoft.Common.DataWriter"/>, с помощью которого осуществляется сериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.ReadXml(System.Xml.XmlReader)">
            <summary>
            Выполняет десериализацию пакета ресурсов с помощью заданного экземпляра 
            <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">
            Экземпляр <see cref="T:System.Xml.XmlReader"/>, с помощью которого осуществляется десериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Выполняет сериализацию пакета ресурсов с помощью заданного экземпляра <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">
            Экземпляр <see cref="T:System.Xml.XmlWriter"/>, с помощью которого осуществляется сериализация.
            </param>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.DeleteResource(System.String)">
            <summary>
            Выполняет удаление ресурса с заданным именем из текущего пакета ресурсов.
            </summary>
            <param name="name">Имя удаляемого ресурса.</param>
            <returns>
            <c>true</c>, если ресурс с именем <paramref name="name"/> был успешно удален из пакета ресурсов; 
            иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.RenameResource(System.String,System.String)">
            <summary>
            Переименовывает ресурс с заданным именем в текущем пакете ресурсов.
            </summary>
            <param name="oldName">
            Имя ресурса, который переименовывается.
            </param>
            <param name="name">
            Новое имя ресурса с именем <paramref name="oldName"/>.
            </param>
            <returns>
            <c>true</c>, если ресурсу с именем <paramref name="oldName"/> было успешно присвоено новое имя 
            <paramref name="name"/>; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.SetResourceValue(System.String,System.String)">
            <summary>
            Устанавливает значение ресурсу с заданным именем в текущем пакете ресурсов.
            </summary>
            <param name="name">Имя ресурса.</param>
            <param name="value">Устанавливаемое значение ресурса.</param>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.FindItemByName(System.String)">
            <summary>
            Выполняет поиск ресурса с заданным именем в текущем пакете ресурсов.
            </summary>
            <param name="name">
            Имя искомого ресурса.
            </param>
            <returns>
            Первый найденный ресурс с именем <paramref name="name"/> в текущем пакете ресурсов либо <c>null</c>, 
            если ресурс с таким именем не найден.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ResourcePackage.GetItemByName(System.String)">
            <summary>
            Возвращает элемент ресурса с заданным именем из текущего пакета ресурсов.
            </summary>
            <param name="name">Имя искомого ресурса.</param>
            <returns>
            Найденный ресурс с именем <paramref name="name"/> в текущем пакете ресурсов.
            </returns>
        </member>
        <member name="P:Terrasoft.Common.ResourcePackage.Culture">
            <summary>
            Культура текущего пакета ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.ResourcePackage.RootGroup">
            <summary>
            Корневая группа ресурсов текущего пакета ресурсов.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.ResourceManagerCollection">
            <summary>
            Представляет методы для работы с коллекцией менеджеров ресурсов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.ResourceManagerCollection.Add(System.Resources.ResourceManager)">
            <summary>
            Добавляет заданный менеджер ресурсов в текущую коллекцию.
            </summary>
            <param name="manager">Добавляемый менеджер ресурсов.</param>
            <exception cref="T:System.ArgumentNullException">При передаче в качестве параметра <paramref name="manager"/> 
            значения типа <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceManagerCollection.Remove(System.String)">
            <summary>
            Удаляет менеджер ресурсов с заданным именем из текущей коллекции. 
            </summary>
            <param name="managerName">Имя удаляемого менеджера ресурсов.</param>
            <returns>
            <c>true</c>, если менеджер ресурсов <paramref name="managerName"/> успешно удален из текущей коллекции;
            иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.ResourceManagerCollection.FindByName(System.String)">
            <summary>
            Осуществляет поиск менеджера ресурсов с заданным именем в текущей коллекции.
            </summary>
            <param name="name">Имя менеджера ресурсов для поиска.</param>
            <returns>Менеджер ресурсов с именем <paramref name="name"/> либо <c>null</c>, если
            менеджер ресурсов с таким именем в текущей коллекции не найден.</returns>
        </member>
        <member name="M:Terrasoft.Common.ResourceManagerCollection.GetByName(System.String)">
            <summary>
            Возвращает менеджер ресурсов с заданным именем либо генерирует исключение, если 
            менеджер с таким именем в текущей коллекции не найден.
            </summary>
            <param name="name">Имя менеджера ресурсов.</param>
            <returns>
            Менеджер ресурсов с именем <paramref name="name"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если менеджер ресурсов с именем <paramref name="name"/> в текущей
            коллекции не найден.</exception>
        </member>
        <member name="M:Terrasoft.Common.ResourceManagerCollection.GetEnumerator">
            <summary>
            Возвращает перечислитель для итерации по элементам коллекции менеджеров ресурсов.
            </summary>
            <returns>
            Объект <see cref="T:System.Collections.Generic.IEnumerator`1"/> который может использоваться для итерации элементов 
            коллекции менеджеров ресурсов. 
            </returns>
        </member>
        <member name="T:Terrasoft.Common.GeneralResourceStorage">
            <summary>
            Предоставляет методы для работы с хранилищем ресурсов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.Initialize(Terrasoft.Common.ResourceConfigurationSectionGroup)">
            <summary>
            Выполняет инициализацию хранилища ресурсов на основании заданной конфигурационной секции ресурсов.
            </summary>
            <param name="resourceConfiguration">Конфигурационная секция ресурсов.</param>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">Если в качестве параметра <paramref name="resourceConfiguration"/> 
            передано значение <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.FindManager(System.String)">
            <summary>
            Осуществляет поиск менеджера ресурсов с заданным именем в текущем хранилище ресурсов.
            </summary>
            <param name="managerName">Имя менеджера ресурсов.</param>
            <returns>
            Объект <see cref="T:System.Resources.ResourceManager"/> с именем <paramref name="managerName"/> либо 
            <c>null</c>, если менеджер с таким именем не найден.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.GetManager(System.String)">
            <summary>
            Возвращает менеджер ресурсов с заданным именем из текущего хранилища ресурсов либо генерирует исключение, 
            если менеджер с таким именем не найден.
            </summary>
            <param name="managerName">Имя менеджера ресурсов.</param>
            <returns>
            Объект <see cref="T:System.Resources.ResourceManager"/> с именем <paramref name="managerName"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если менеджер ресурсов с именем <paramref name="managerName"/> не 
            найден в текущем хранилище ресурсов.</exception>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.RemoveManager(System.String)">
            <summary>
            Удаляет из текущего хранилища ресурсов менеджер ресурсов с заданным именем.
            </summary>
            <param name="managerName">Имя менеджера ресурсов, который необходимо удалить.</param>
            <returns>
            <с>true</с>, если менеджер ресурсов с именем <paramref name="managerName"/> успешно удален из текущего 
            хранилища ресурсов; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.GetObject(System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Возвращает объект с заданными именем и культурой, принадлежащий указанному менеджеру ресурсов, либо 
            генерирует исключение, если такой объект не найден.
            </summary>
            <param name="managerName">Имя менеджера ресурсов.</param>
            <param name="objectName">Имя объекта.</param>
            <param name="culture">Культура объекта.</param>
            <returns>
            Объект с именем <paramref name="objectName"/> и культурой <paramref name="culture"/>, принадлежащий 
            менеджеру ресурсов с именем <paramref name="managerName"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            Если в менеджере ресурсов <paramref name="managerName"/> не найден объект с именем 
            <paramref name="objectName"/> и культурой <paramref name="culture"/>.
            </exception>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.GetObject(System.String,System.String)">
            <summary>
            Возвращает объект с заданным именем, принадлежащий указанному менеджеру ресурсов, либо генерирует 
            исключение, если такой объект не найден.
            </summary>
            <param name="managerName">Имя менеджера ресурсов.</param>
            <param name="objectName">Имя объекта.</param>
            <returns>
            Объект с именем <paramref name="objectName"/>, принадлежащий менеджеру ресурсов с именем 
            <paramref name="managerName"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Если менеджер ресурсов с именем <paramref name="managerName"/> не 
            найден в текущем хранилище ресурсов.</exception>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.TryGetObject(System.String,System.String,System.Object@)">
            <summary>
            Получает объект с именем <paramref name="objectName"/> менеджера ресурсов 
            <paramref name="managerName"/> в заданном параметре <paramref name="obj"/>. Возвращает значение, 
            указывающее, успешно ли получен объект <paramref name="objectName"/>.</summary>
            <param name="managerName">Имя менеджера ресурсов.</param>
            <param name="objectName">Имя объекта.</param>
            <param name="obj">Выходной параметр, в который помещается объект с именем <paramref name="objectName"/> 
            менеджера ресурсов <paramref name="managerName"/>.</param>
            <returns>
            <c>true</c>, если у менеджера ресурсов <paramref name="managerName"/> успешно получен объект с именем 
            <paramref name="objectName"/>; иначе - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.GetCulturesInfo">
            <summary>
            Возвращает перечислитель для итерации по элементам коллекции культур текущего хранилища 
            ресурсов.
            </summary>
            <returns>
            Объект <see cref="T:System.Collections.Generic.IEnumerator`1"/> который может использоваться для итерации элементов 
            коллекции культур хранилища ресурсов.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.GetAppropriateCulture(System.Globalization.CultureInfo)">
            <summary>
            Возвращает культуру, максимально соответствующую заданной культуре.
            </summary>
            <param name="culture"></param>
            <returns>Культура из коллекции культур хранилища ресурсов, максимально соотвутствующая 
            <paramref name="culture"/>. Если такой культуры в коллекции культур хранилища нет, то возвращается 
            инвариантная культура.</returns>
        </member>
        <member name="P:Terrasoft.Common.GeneralResourceStorage.IsInitialized">
            <summary>
            Признак, является ли текущеее хранилище ресурсов проинициализированным. 
            </summary>
        </member>
        <member name="P:Terrasoft.Common.GeneralResourceStorage.Cultures">
            <summary>
            Список культур текущего хранилища ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.GeneralResourceStorage.DefCulture">
            <summary>
            Культура по умолчанию для текущего потока.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.GeneralResourceStorage.AvailableManagers">
            <summary>
            Коллекция доступных менеджеров текущего хранилища ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.GeneralResourceStorage.Managers">
            <summary>
            Коллекция менеджеров ресурсов текущего хранилища ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.GeneralResourceStorage.CurrentCulture">
            <summary>
            Культура для текущего потока.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.GeneralResourceStorage.CustomResources">
            <summary>
            Список пользовательских ресурсов текущего хранилища ресурсов.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.GeneralResourceStorage.ResourceDirectory">
            <summary>
            Директория, в которой хранятся файлы ресурсов.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.GeneralResourceStorage.CustomResourceSet">
            <summary>
            Представляет методы работы с пользовательским набором ресурсов.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.CustomResourceSet.#ctor(System.IO.Stream)">
            <summary>
            Инициализирует экземпляр класса <see cref="T:Terrasoft.Common.GeneralResourceStorage.CustomResourceSet"/>, используя заданный поток.
            </summary>
            <param name="stream">
            Поток из которого инициализируется <see cref="T:Terrasoft.Common.GeneralResourceStorage.CustomResourceSet"/>.</param>
        </member>
        <member name="M:Terrasoft.Common.GeneralResourceStorage.CustomResourceSet.#ctor(System.String)">
            <summary>
            Инициализирует экземпляр класса 
            <see cref="T:Terrasoft.Common.GeneralResourceStorage.CustomResourceSet"/>, используя заданное имя файла.
            </summary>
            <param name="fileName">
            Имя файла, из которого инициализируется <see cref="T:Terrasoft.Common.GeneralResourceStorage.CustomResourceSet"/>.
            </param>
        </member>
        <member name="T:Terrasoft.Common.StreamUtilities">
            <summary>
            Содержит служебные методы для работы с потоками.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.StreamUtilities.CopiedStreamBufferLength">
            <summary>
            Максимальное количество байтов, которое должно быть считано из текущего потока.
            </summary>
        </member>
        <member name="F:Terrasoft.Common.StreamUtilities.ReadStreamBufferLength">
            <summary>
            Количество байтов, которое должно быть считано из текущего потока.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.StreamUtilities.GetStreamContent(System.IO.Stream)">
            <summary>
            Строковое представление содержимого потока.
            </summary>
            <param name="source">Поток.</param>
            <returns>Содержимое потока в виде строки (от текущего положения до конца).</returns>
            <remarks>Для чтения содержимого потока используется стандартный метод <c>ReadToEnd()</c> 
            класса <see cref="T:System.IO.StreamReader"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StreamUtilities.Write(System.IO.Stream,System.IO.Stream)">
            <summary>
            Запись в поток.
            </summary>
            <param name="source">Поток - источник.</param>
            <param name="value">Поток - приемник.</param>
            <remarks>
            <para>Расширяемый метод</para>
            <para>Запись в поток - приемник осуществляется блоками по 
            <see cref="F:Terrasoft.Common.StreamUtilities.CopiedStreamBufferLength"/> байт. После записи текущая позиция в потоке -
            источнике возвращается в исходное положение.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StreamUtilities.ReadAllBytes(System.IO.Stream)">
            <summary>
            Чтение из потока.
            </summary>
            <param name="source">Поток - источник.</param>
            <returns>Массив прочитанных из потока байтов.</returns>
            <exception cref="T:System.ArgumentNullException">При передаче в качестве параметра <paramref name="source"/>
            значения <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Common.StreamUtilities.SaveToFile(System.IO.Stream,System.String)">
            <summary>
            Сохранение потока в файл.
            </summary>
            <param name="source">Поток - источник.</param>
            <param name="filePath">Путь к файлу.</param>
            <exception cref="T:System.ArgumentNullException">При передаче в качестве параметра <paramref name="source"/>
            значения <c>null</c>.
            </exception>
        </member>
        <member name="T:Terrasoft.Common.StringWriterWithEncoding">
            <summary>
            Реализует <see cref="T:System.IO.StringWriter"/> для записи данных в строку с учетом кодировки.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.StringWriterWithEncoding.#ctor(System.IFormatProvider,System.Text.Encoding)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.StringWriterWithEncoding"/>, используя заданные поставщика
            форматов и кодировку.
            </summary>
            <param name="formatProvider">Поставщик форматов.</param>
            <param name="encoding">Кодировка.</param>
        </member>
        <member name="P:Terrasoft.Common.StringWriterWithEncoding.Encoding">
            <summary>
            Возвращает экземпляр кодировки <see cref="T:System.Text.Encoding"/>, в которой осуществляется запись.
            </summary>
            <returns>Кодировка, в которой осуществляется запись.</returns>
        </member>
        <member name="T:Terrasoft.Common.StringUtilities">
            <summary>
            Предоставляет методы работы со строками.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.LeftOf(System.String,System.Char)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре слева от первого вхождения заданного символа.
            </summary>
            <param name="source">Строка.</param>
            <param name="value">Символ, относительно которого строится возвращаемая подстрока.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с 0 позиции в данном экземпляре, и имеет длину,
            равную позиции первого вхождения заданного символа в данный экземпляр.</returns>
            <remarks>
            <para>Перегруженный метод.</para> 
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para></remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.LeftOf(System.String,System.String)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре слева от первого вхождения заданной подстроки.
            </summary>
            <param name="source">Строка.</param>
            <param name="value">Подстрока, относительно которой строится возвращаемая подстрока.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с 0 позиции в данном экземпляре, и имеет длину,
            равную позиции первого вхождения заданной подстроки в данный экземпляр.</returns>
            <remarks>Перегруженный метод. Расширяемый метод для класса <see cref="T:System.String"/>.
            <para>Перегруженный метод.</para>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.LeftOf(System.String,System.Char,System.Int32)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре слева от заданного символа начиная с заданной 
            позиции.</summary>
            <param name="source">Строка.</param>
            <param name="value">Символ.</param>
            <param name="index">Позиция.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с 0 позиции в данном экземпляре, и имеет длину,
            равную позиции первого вхождения заданного символа в данный экземпляр. Поиск символа осуществляется с 
            позиции <paramref name="index"/>.</returns>
            <remarks>Перегруженный метод. Расширяемый метод для класса <see cref="T:System.String"/>.
            <para>Перегруженный метод.</para>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.LeftOfRightmostOf(System.String,System.Char)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре слева от заданного символа.
            </summary>
            <param name="source">Строка.</param>
            <param name="value">Символ.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с 0 позиции в данном экземпляре, и имеет длину,
            равную позиции последнего вхождения заданного символа в данный экземпляр.</returns>
            <remarks>Перегруженный метод. 
            <para>Перегруженный метод.</para>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para></remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.LeftOfRightmostOf(System.String,System.String)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре слева от последнего вхождения заданной подстроки.
            </summary>
            <param name="source">Строка.</param>
            <param name="value">Подстрока.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с 0 позиции в данном экземпляре, и имеет длину,
            равную позиции последнего вхождения заданной подстроки в данный экземпляр.</returns>
            <remarks>
            <para>Перегруженный метод. </para>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para></remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.RightOf(System.String,System.Char)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре справа от первого вхождения заданного символа.
            </summary>
            <param name="source">Строка.</param>
            <param name="value">Символ.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с позиции первого вхождения заданного символа 
            в данный экземпляр.</returns>
            <remarks>
            <para>Перегруженный метод. </para>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para></remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.RightOf(System.String,System.String)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре справа от первого вхождения заданной подстроки.
            </summary>
            <param name="source">Строка.</param>
            <param name="value">Символ.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с позиции первого вхождения заданной подстроки 
            в данный экземпляр.</returns>
            <remarks>Перегруженный метод. Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.RightOf(System.String,System.Char,System.Int32)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре справа от заданного символа начиная с заданной 
            позиции. </summary>
            <param name="source">Строка.</param>
            <param name="value">Символ.</param>
            <param name="start">Позиция.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с позиции первого вхождения заданного символа
            в данный экземпляр. Поиск символа осуществляется с позиции <paramref name="start"/>.</returns>
            <remarks>Перегруженный метод. Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.RightOf(System.String,System.String,System.Int32)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре справа от заданной подстроки начиная с заданной 
            позиции.</summary>
            <param name="source">Строка.</param>
            <param name="value">Подстрока.</param>
            <param name="start">Позиция.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с позиции первого вхождения заданной подстроки 
            в данный экземпляр. Поиск символа осуществляется с позиции <paramref name="start"/>.</returns>
            <remarks>Перегруженный метод. Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.RightOfRightmostOf(System.String,System.Char)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре справа от заданного символа.
            </summary>
            <param name="source">Строка.</param>
            <param name="value">Символ.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с позиции последнего вхождения заданного 
            символа в данный экземпляр.</returns>
            <remarks>Перегруженный метод. Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.RightOfRightmostOf(System.String,System.String)">
            <summary>
            Возвращает подстроку, расположенную в данном экземпляре справа от последнего вхождения заданной подстроки.
            </summary>
            <param name="source">Строка.</param>
            <param name="value">Подстрока.</param>
            <returns>Строка, эквивалентная подстроке, которая начинается с позиции последнего вхождения заданной 
            подстроки в данный экземпляр.</returns>
            <remarks>Перегруженный метод. Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.Between(System.String,System.String,System.String)">
            <summary>
            Возвращает подстроку, расположенную между двумя разделителями.
            </summary>
            <param name="source">Строка.</param>
            <param name="startDelimiter">Начальный разделитель.</param>
            <param name="endDelimiter">Конечный разделитель.</param>
            <returns>Строка, эквивалентная подстроке, расположенной между начальным и конечным разделителями.</returns>
            <remarks>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para></remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.FormatForJavaScript(System.String)">
            <summary>
            Преобразует текущий экземпляр в соответствии с форматом скриптов JavaScript.
            </summary>
            <param name="source">Строка.</param>
            <returns>Строка, соответствующая формату скриптов JavaScript.</returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.FormatFromJavaScript(System.String)">
            <summary>
            Преобразует текущий экземпляр из формата скриптов JavaScript в стандартное представление.
            </summary>
            <param name="source">Строка.</param>
            <returns>Строка в стандартном представлении. </returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.ReplaceLastInstanceOf(System.String,System.String,System.String)">
            <summary>
            Заменяет последнее вхождение заданной строки в данном экземпляре другой заданной строкой.
            </summary>
            <param name="source">Строка.</param>
            <param name="oldValue">Строка, которую требуется заменить.</param>
            <param name="newValue">Строка для замены последнего вхождения <paramref name="oldValue"/>.</param>
            <returns>Строка, эквивалентная текущей строке, но с тем отличием, что дублируемые вхождения 
            <paramref name="oldValue"/> заменены на <paramref name="newValue"/>.</returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.AppendIfNotEmpty(System.Text.StringBuilder,System.String)">
            <summary>
            Добавляет заданную строку к данному экземпляру, если он не является пустым.
            </summary>
            <param name="source">Экземпляр <see cref="T:System.Text.StringBuilder"/>, к которому добавляется строка.
            </param>
            <param name="value">Добавляемая строка.</param>
            <returns>Экземпляр <see cref="T:System.Text.StringBuilder"/> после завершения операции добавления.</returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.Text.StringBuilder"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.IsNullOrWhiteSpaces(System.Text.StringBuilder)">
            <summary>
            Проверяет, является ли указанный экземпляр <see cref="T:System.Text.StringBuilder"/> значением <c>null</c>,
            пустой строкой или строкой, состоящей только из пробельных символов.
            </summary>
            <param name="source">Экземпляр <see cref="T:System.Text.StringBuilder"/>.</param>
            <returns><c>true</c>, если экземпляр является значением null, содержит пустую строку
            или строку, состоящую только из пробельных символов; в противном случае — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.IsValidIdentifier(System.String)">
            <summary>
            Определяет, является ли заданная строка допустимым идентификатором.
            </summary>
            <param name="source">Строка.</param>
            <returns>
            <c>true</c>, если строка является действительным идентификатором; иначе - <c>false</c>.
            </returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.IsValidVersion(System.String)">
            <summary>
            Определяет, является ли заданная строка допустимой версией.
            </summary>
            <param name="source">Строка.</param>
            <returns>
            <c>true</c>, если строка является допустимой версией; иначе - <c>false</c>.
            </returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.IsValidIdentifierOrEmpty(System.String)">
            <summary>
            Определяет, является ли заданная строка действительным идентификатором либо пустой.
            </summary>
            <param name="source">Строка.</param>
            <returns>
            <c>true</c>, если заданная строка является действительным идентификатором либо пустой;иначе - <c>false</c>.
            </returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.IsValidGuid(System.String)">
            <summary>
            Определяет, является ли строка допустимым уникальным идентификатором.
            </summary>
            <param name="source">Строка.</param>
            <returns>
            <c>true</c>, если строка является допустимым уникальным идентификатором; 
            иначе -<c>false</c>. </returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.IsValidColumnName(System.String)">
            <summary>
            Определяет, является ли заданная строка допустимым именем колонки.
            </summary>
            <param name="source">Строка.</param>
            <returns>
            <c>true</c>, если строка является действительным именем колонки; иначе - <c>false</c>.
            </returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.Replace(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Заменяет в данном экземпляре все вхождения заданной строки на другую заданную строку с учетом заданных 
            настроек сравнения (язык, региональные параметры, регистр, правила сортировки). </summary>
            <param name="source">Строка.</param>
            <param name="pattern">Строка, которую необходимо заменить.</param>
            <param name="replacement">Строка для замены всех вхождений <paramref name="pattern"/>.</param>
            <param name="comparisonType">Тип (настройки) сравнения.</param>
            <returns>Экземпляр, эквивалентный текущему, но с тем отличием, что все вхождения 
            <paramref name="pattern"/> заменены на <paramref name="replacement"/>.</returns>
            <remarks>
            <para>Перегруженный метод. </para>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para></remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.Replace(System.String,System.Char[],System.Char)">
            <summary>
            Заменяет в данном экземпляре все вхождения заданного массива символов на другой заданный символ.
            </summary>
            <param name="source">Строка.</param>
            <param name="symbolsForReplace">Массив символов, который необходимо заменить.</param>
            <param name="replaceSymbol">Символ для замены всех вхождений <paramref name="source"/>.</param>
            <returns>
            Экземпляр, эквивалентный текущему, но с тем отличием, что все вхождения <paramref name="symbolsForReplace"/>
            заменены на <paramref name="replaceSymbol"/>.
            </returns>
            <remarks>
            <para>Перегруженный метод. </para>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.Remove(System.String,System.Char[])">
            <summary>
            Удаляет из данного экземпляра заданный массив символов.
            </summary>
            <param name="source">Строка.</param>
            <param name="symbolsForRemove">Массив символов для удаления.</param>
            <returns>Новая строка, эквивалентная данному экземпляру за минусом удаленных символов.</returns>
            <remarks>Расширяемый тип для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.CleanUpColumnName(System.String)">
            <summary>
            Очищает заданную строку от специальных символов.
            </summary>
            <param name="columnName">Строка.</param>
            <returns>Новая строка, эквивалентная <paramref name="columnName"/>, из которой удалены специальные символы, 
            а разделители заменены на символ '_'.</returns>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.FormatByObjProperties(System.String,System.Object)">
            <summary>
            Форматирует данный экземпляр в соответствии с заданными свойствами.
            </summary>
            <param name="source">Строка.</param>
            <param name="value">Свойства.</param>
            <returns>Новая строка, отформатированная в соответствии с заданными свойствами.</returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.ToNameValueCollection(System.String)">
            <summary>
            Преобразует данный экземпляр в тип <see cref="T:System.Collections.Specialized.NameValueCollection"/>, 
            представляющий собой коллекцию связанных ключей <see cref="T:System.String"/> и значений 
            <see cref="T:System.String"/>, доступ к которым можно получить с помощью ключа или индекса.</summary>
            <param name="source">Строка.</param>
            <returns>Экземпляр класса <see cref="T:System.Collections.Specialized.NameValueCollection"/>.</returns>
            <remarks>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            <para>Строка <paramref name="source"/> представляет собой набор пар в формате 'Ключ=Значение', 
            перечисленных через разделитель ';'.</para></remarks>.
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.ToCamelCase(System.String,System.Globalization.CultureInfo)">
            <summary>
            Возвращает копию данного экземпляра, преобразованную в соответствии со стилем UpperCamelCase.
            </summary>
            <param name="source">Строка.</param>
            <param name="cultureInfo"> </param>
            <returns>Эквивалент данного экземпляра, преобразованный в соответствии со стилем UpperCamelCase.</returns>
            <remarks>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            <para>Метод переводит первый символ данного экземпляра в верхний регистр.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.ToLowerCamelCase(System.String,System.Globalization.CultureInfo)">
            <summary>
            Возвращает копию данного экземпляра, преобразованную в соответствии со стилем lowerCamelCase.
            </summary>
            <param name="source">Строка.</param>
            <param name="cultureInfo"> </param>
            <returns>Эквивалент данного экземпляра, преобразованный в соответствии со стилем lowerCamelCase.</returns>
            <remarks>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            <para>Метод переводит первый символ данного экземпляра в нижний регистр.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.Concat(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            Объединяет в одну строку перечень заданных элементов через заданный разделитель, при этом форматируя каждый 
            элемент в соответствии с заданным шаблоном.
            </summary>
            <param name="items">Перечень объединяемых элементов.</param>
            <param name="separator">Разделитель.</param>
            <param name="template">Шаблон форматирования.</param>
            <returns>Новая строка, содержащая элементы <paramref name="items"/>, отформатированные в соответствии с
            шаблоном <paramref name="template"/>, перечисленные через разделитель <paramref name="separator"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.Concat(System.Collections.IEnumerable)">
            <summary>
            Объединяет в одну строку перечень заданных элементов через разделитель ','.
            </summary>
            <param name="items">Перечень объединяемых элементов.</param>
            <returns>Новая строка, содержащая элементы <paramref name="items"/>, перечисленные через разделитель ','.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.ConcatIfNotEmpty(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Объединяет в одну строку перечень заданных элементов через заданный разделитель, если элементы не являются 
            пустыми. </summary>
            <param name="source">Перечень объединяемых элементов.</param>
            <param name="separator">Разделитель.</param>
            <returns>Новая строка, содержащая непустые элементы <paramref name="source"/>, перечисленные через
            разделитель <paramref name="separator"/>.</returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Расширяемый метод для классов, реализующих интерфейс 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</para></remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.ConcatIfNotEmpty(System.Collections.Generic.IEnumerable{System.String},System.String,System.Int32)">
            <summary>
            Объединяет в одну строку перечень заданных элементов через заданный разделитель, если элементы не являются 
            пустыми. Количество объединяемых в строке элементов ограничено числом <paramref name="maxNumber"/>. Если 
            число элементов <paramref name="source"/> превышает <paramref name="maxNumber"/>, вместо остальных 
            элементов в строку будет добавлен символ многоточия.</summary>
            <param name="source">Перечень объединяемых элементов.</param>
            <param name="separator">Разделитель.</param>
            <param name="maxNumber">Максимальное число элементов, объединяемых в строке.</param>
            <returns>Новая строка, содержащая непустые элементы <paramref name="source"/>, перечисленные через
            разделитель <paramref name="separator"/>.</returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Расширяемый метод для классов, реализующих интерфейс 
            <see cref="T:System.Collections.Generic.IEnumerable`1"/>.</para></remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.ConcatIfNotEmpty(System.String,System.String,System.String)">
            <summary>
            Объединяет данный экземпляр с заданной строкой через заданный разделитель, если заданная строка не является
            пустой. </summary>
            <param name="source">Строка.</param>
            <param name="str">Присоединяемая строка.</param>
            <param name="separator">Разделитель.</param>
            <returns>Новая строка, эквивалентная данному экземпляру, объединенная с непустой строкой 
            <paramref name="str"/>.</returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.Chop(System.String,System.Int32)">
            <summary>
            Возвращает строку, представляющую собой подстроку данного экземпляра, начиная с заданной позиции до конца.
            </summary>
            <param name="source">Строка.</param>
            <param name="characters">Позиция.</param>
            <returns>Строка, эквивалентная подстроке данного экземпляра, которая начинается 
            с позиции <paramref name="characters"/>. </returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.Chop(System.String)">
            <summary>
            Возвращает строку, представляющую собой подстроку данного экземпляра начиная с позиции 1 до конца.
            </summary>
            <param name="source">Строка.</param>
            <returns>Строка, эквивалентная подстроке данного экземпляра, которая начинается с позиции 1.</returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.ToCharacterSeparatedFileName(System.String,System.Char,System.String)">
            <summary>
            Формирует имя файла на базе заданной строки символов с заданным разделителем и расширением файла.
            </summary>
            <param name="source">Строка.</param>
            <param name="separator">Разделитель.</param>
            <param name="extension">Расширение.</param>
            <returns>Имя файла, состоящее из групп символов строки <paramref name="source"/>, разделяемых символом
            <paramref name="separator"/> с расширением <paramref name="extension"/>.</returns>
            <remarks>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            <para>Для корректного формирования имени файла строка <paramref name="source"/> должна в обязательном 
            порядке содержать либо группу символов, начинающуюся с заглавной латинской буквы, либо одну или несколько 
            цифр.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.EnsureSemicolon(System.String)">
            <summary>
            Добавляет в конец данного экземпляра символ ';', если он отсутствует.
            </summary>
            <param name="source">Строка.</param>
            <returns>Эквивалент данного экземпляра с добавленным в конец символом ';'.</returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.GetValueFromQueryString(System.String,System.String)">
            <summary>
            Возвращает значение по заданному ключу.
            </summary>
            <param name="source">Строка.</param>
            <param name="key">Ключ.</param>
            <returns>Строка, представляющая собой значение для ключа <paramref name="key"/>.</returns>
            <remarks>
            <para>Расширяемый метод для класса <see cref="T:System.String"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.Compress(System.String)">
            <summary>
            Выполняет сжатие (упаковку) данного экземпляра.
            </summary>
            <param name="source">Строка.</param>
            <returns>Сжатое строковое представление данного экземпляра в кодировке Base64.</returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.Decompress(System.String)">
            <summary>
            Выполняет распаковку данного экземпляра.
            </summary>
            <param name="source">Строка.</param>
            <returns>Распакованное строковое представление данного экземпляра в в кодировке UTF8.</returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.String"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.ToStream(System.String,System.Text.Encoding)">
            <summary>
            Возвращает значение типа <see cref="T:System.IO.Stream"/> данной строки <paramref name="source"/>.
            </summary>
            <param name="source">Строка.</param>
            <param name="encoding">Тип кодировки. Если параметр не задан, то используется кодировка UTF8.</param>
            <returns>Объект <see cref="T:System.IO.Stream"/>, представляющий значение строки 
            <paramref name="source"/>.</returns>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.EqualsIgnoreCase(System.String,System.String)">
            <summary>
            Определяет равенстсво строк без учета регистра.
            </summary>
            <param name="source">Строка.</param>
            <param name="value">Строка для сравнения.</param>
            <returns>
            <c>true</c>, если строки равны без учета регистра; иначе - <c>false</c>.
            </returns>
            <remarks>Расширяющий метод для класса <see cref="T:System.String"/>.</remarks> 
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.IsNullOrEmpty(System.String)">
            <summary>
            Проверяет, является ли указанная строка значением <c>null</c> или пустой строкой.
            </summary>
            <param name="source">Строка.</param>
            <returns><c>true</c>, если указанная строка является значением <c>null</c> или пустой строкой; в противном
            случае — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.IsNotNullOrEmpty(System.String)">
            <summary>
            Проверяет, не является ли указанная строка значением <c>null</c> или пустой строкой.
            </summary>
            <param name="source">Строка.</param>
            <returns><c>true</c>, если указанная строка не является значением <c>null</c> или пустой строкой; в
            противном случае — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.IsNullOrWhiteSpace(System.String)">
            <summary>
            Проверяет, является ли указанная строка значением <c>null</c>, пустой строкой или строкой, состоящей
            только из пробельных символов.
            </summary>
            <param name="source">Строка.</param>
            <returns><c>true</c>, если указанная строка является значением <c>null</c>, пустой строкой или строкой,
            состоящей только из пробельных символов; в противном случае — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.IsNotNullOrWhiteSpace(System.String)">
            <summary>
            Проверяет, не является ли указанная строка значением <c>null</c>, пустой строкой или строкой, состоящей
            только из пробельных символов.
            </summary>
            <param name="source">Строка.</param>
            <returns><c>true</c>, если указанная строка не является значением <c>null</c>, пустой строкой или строкой,
            состоящей только из пробельных символов; в противном случае — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Common.StringUtilities.ConvertHtmlToPlainText(System.String)">
            <summary>
            Converts html text <paramref name="html"/> to plain text.
            </summary>
            <param name="html">HTML text.</param>
            <returns>Converted plain text.</returns>
        </member>
        <member name="T:Terrasoft.Common.BytesToStringUtilities">
            <summary>
            Предоставляет методы по преобразованию значений типа <see cref="T:System.Byte"/> в значения типа 
            <see cref="T:System.String"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.BytesToStringUtilities.ToString(System.Byte[],System.Text.Encoding)">
            <summary>
            Возвращает экземпляр <see cref="T:System.String"/>, являющийся строковым представлением заданного массива 
            байтов в заданной кодировке.
            </summary>
            <param name="source">Массив байтов.</param>
            <param name="encoding">Кодировка.</param>
            <returns>
            Экземпляр <see cref="T:System.String"/>, являющийся строковым представлением массива 
            байтов <paramref name="source"/> в кодировке <paramref name="encoding"/>.
            </returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Метод расширения класса <see cref="T:System.Byte"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.BytesToStringUtilities.ToString(System.Byte[],System.Text.Encoding,System.Boolean)">
            <summary>
            Возвращает экземпляр <see cref="T:System.String"/>, являющийся строковым представлением заданного массива 
            байтов в заданной кодировке. Экземпляр может содержать префикс, определяющий его кодировку.
            </summary>
            <param name="source">Массив байтов.</param>
            <param name="encoding">Кодировка.</param>
            <param name="detectEncodingFromByteOrderMarks"> равно <c>true</c>, если экземпляр содержит префикс,
            определяющий его кодировку; иначе - <c>false</c>.</param>
            <returns>
            Экземпляр <see cref="T:System.String"/>, являющийся строковым представлением массива байтов
            <paramref name="source"/> в кодировке <paramref name="encoding"/>. 
            Если <paramref name="detectEncodingFromByteOrderMarks"/> равно <c>true</c>, к экземпляру 
            <see cref="T:System.String"/> добавляется префикс, определяющий его кодировку.
            </returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Метод расширения класса <see cref="T:System.Byte"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.BytesToStringUtilities.ToString(System.IO.MemoryStream,System.Text.Encoding)">
            <summary>
            Возвращает экземпляр <see cref="T:System.String"/>, являющийся строковым представлением потока типа
            <see cref="T:System.IO.MemoryStream"/> в заданной кодировке.
            </summary>
            <param name="source">Поток.</param>
            <param name="encoding">Кодировка.</param>
            <returns>
            Экземпляр <see cref="T:System.String"/>, являющийся строковым представлением потока <paramref name="source"/>
            в кодировке <paramref name="encoding"/>.
            </returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Метод расширения класса <see cref="T:System.IO.MemoryStream"/>.</para>
            </remarks>
        </member>
        <member name="M:Terrasoft.Common.BytesToStringUtilities.ToString(System.IO.MemoryStream,System.Text.Encoding,System.Boolean)">
            <summary>
            Возвращает экземпляр <see cref="T:System.String"/>, являющийся строковым представлением потока типа
            <see cref="T:System.IO.MemoryStream"/> в заданной кодировке. Экземпляр может содержать префикс, определяющий
            его кодировку.
            </summary>
            <param name="source">Поток.</param>
            <param name="encoding">Кодировка.</param>
            <param name="detectEncodingFromByteOrderMarks"> равно <c>true</c>, если экземпляр содержит префикс,
            определяющий его кодировку; иначе - <c>false</c>.</param>
            <returns>
            Экземпляр <see cref="T:System.IO.MemoryStream"/>, являющийся строковым представлением потока 
            <paramref name="source"/> в кодировке <paramref name="encoding"/>. 
            Если <paramref name="detectEncodingFromByteOrderMarks"/> равно <c>true</c>, к экземпляру 
            <see cref="T:System.String"/> добавляется префикс, определяющий его кодировку.
            </returns>
            <remarks>
            <para>Перегруженный метод.</para>
            <para>Метод расширения класса <see cref="T:System.IO.MemoryStream"/>.</para>
            </remarks>
        </member>
        <member name="T:Terrasoft.Common.TopologicalSorter">
            <summary>Класс для топологической сортировки</summary>
            <remarks>Слегка отрефакторенная версия сортировки, взятая отсюда:
            http://tawani.blogspot.com/2009/02/topological-sorting-and-cyclic.html
            </remarks>
        </member>
        <member name="T:Terrasoft.Common.UriUtilities">
            <summary>
            Содержит служебные методы для работы с унифицированными идентификаторами ресурсов (URI).
            </summary>
        </member>
        <member name="M:Terrasoft.Common.UriUtilities.Append(System.Uri,System.String[])">
            <summary>
            Возвращает новый экземпляр <see cref="T:System.Uri"/>, URI которого формируется добавлением к абсолютному 
            пути <paramref name="source"/> путей из массива <paramref name="paths"/>.
            </summary>
            <param name="source">Базовый абсолютный путь.</param>
            <param name="paths">Массив путей.</param>
            <result>Новый экземпляр <see cref="T:System.Uri"/>.</result>
            <remarks>Разделителем элементов из <paramref name="paths"/> является "/".</remarks>
        </member>
        <member name="M:Terrasoft.Common.UriUtilities.EqualsIgnoreCase(System.Uri,System.Uri)">
            <summary>
            Определяет, являются ли равными заданные экземпляры <see cref="T:System.Uri"/>. 
            При сравнении не учитывается регистр строк.
            </summary>
            <param name="source">Текущий экземпляр <see cref="T:System.Uri"/>.</param>
            <param name="value">Экземпляр <see cref="T:System.Uri"/>, с которым сравнивается текущий экземпляр.</param>
            <result><c>true</c>, если <paramref name="source"/> и <paramref name="value"/> равны; 
            иначе - <c>false</c>.</result>
        </member>
        <member name="M:Terrasoft.Common.UriUtilities.StartsWith(System.Uri,System.Uri)">
            <summary>
            Определяет, совпадает ли начало данного экземпляра <see cref="T:System.Uri"/> с указанным URI.
            </summary>
            <param name="source">Основной аргумент сравнения.</param>
            <param name="value">Целевой аргумент сравнения.</param>
            <returns>
            <c>true</c>, если параметр <paramref name="value"/> соответствует началу данного URI; 
            в противном случае — значение <c>false</c>.
            </returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.Uri"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.UriUtilities.Contains(System.Uri,System.String)">
            <summary>
            Определяет, содержит ли данный экземпляр <see cref="T:System.Uri"/> указанную строку.
            </summary>
            <param name="source">Основной аргумент.</param>
            <param name="value">Строка поиска.</param>
            <returns>
            <c>true</c>, если данный экземпляр содержит строку указанную в параметре <paramref name="value"/>; 
            в противном случае — значение <c>false</c>.
            </returns>
            <remarks>Расширяемый метод для класса <see cref="T:System.Uri"/>.</remarks>
        </member>
        <member name="M:Terrasoft.Common.ValidateUtilities.CheckArgumentNull(System.Object,System.String)">
            <summary>
            Выполняет проверку условия, является ли текущий объект значением <c>null</c>. Если условие выполняется,
            генерируется исключение.
            </summary>
            <param name="source">Объект.</param>
            <param name="argumentName">Имя аргумента, который вызвал исключение.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            Если значение объекта <paramref name="source"/> равно <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Common.ValidateUtilities.CheckArgumentNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Выполняет проверку условия, является ли перечислитель <paramref name="source"/> пустым или <c>null</c>.
            Если условие выполняется, генерируется исключение.
            </summary>
            <typeparam name="T">
            Класс, реализующий интерфейс <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </typeparam>
            <param name="source">Перечислитель объектов.</param>
            <param name="argumentName">Имя аргумента, который вызвал исключение.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            Если перечислитель <paramref name="source"/> пустой или <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Common.ValidateUtilities.CheckArgumentNullOrEmpty(System.String,System.String)">
            <summary>
            Выполняет проверку условия, является ли заданная строка пустой или <c>null</c>. Если условие выполняется,
            генерируется исключение.
            </summary>
            <param name="source">Строка.</param>
            <param name="argumentName">Имя аргумента, который вызвал исключение.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            Если строка <paramref name="source"/> пустая или <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Common.ValidateUtilities.CheckArgumentEmpty(System.Guid,System.String)">
            <summary>
            Выполняет проверку условия, является ли текущий уникальный идентификатор пустым. Если условие выполняется,
            генерируется исключение.
            </summary>
            <param name="source">Уникальный идентификатор.</param>
            <param name="argumentName">Имя аргумента, который вызвал исключение.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            Если уникальный идентификатор <paramref name="source"/> пустой.
            </exception>
        </member>
        <member name="T:Terrasoft.Common.XmlDataReader">
            <summary>
            Предоставляет методы для чтения данных в формате Xml.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.#ctor(System.IO.TextReader)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.XmlDataReader"/>, используя заданный 
            <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="input"><see cref="T:System.IO.TextReader"/>, из которого следует считывать данные в формате 
            XML. Данные возвращаются в формате Unicode. Указанная в объявлении XML кодировка не используется 
            <see cref="T:Terrasoft.Common.XmlDataReader"/>для раскодирования потока данных. </param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.#ctor(System.IO.Stream)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.XmlDataReader"/>, используя заданный поток.
            </summary>
            <param name="input">Поток, содержащий данные в формате Xml. </param>
            <remarks>Метод просматривает первые байты потока в поисках метки порядка следования байтов или другого 
            признака кодировки. После определения эта кодировка используется в последующем считывании потока, 
            а процедура обработки продолжает анализировать входные данные как поток символов Unicode. </remarks>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.Dispose(System.Boolean)">
            <summary>
            Выполняет удаление, высвобождение и сброс управляемых и неуправляемых ресурсов.
            </summary>
            <param name="disposing">
            <c>true</c>, если необходимо высвободить и управляемые, и неуправляемые ресурсы; <c>false</c>, если 
            необходимо высвободить только неуправляемые ресурсы.
            </param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.Close">
            <summary>
            Закрывает текущий экземпляр <see cref="T:Terrasoft.Common.XmlDataReader"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.Read">
            <summary>
            Перемещает текущую позицию в наборе данных к следующему атрибуту текущего уровня вложенности.
            </summary>
            <returns>
            Строка с именем текущего атрибута после выполнения метода либо пустая строка, если достигнут конец 
            набора данных.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.ReadInto">
            <summary>
            Перемещает текущую позицию в наборе данных на один уровень вложенности вниз.
            </summary>
            <returns>
            Строка с именем текущего атрибута после выполнения метода либо пустая строка, если на текущем уровне нет 
            вложенных атрибутов.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.ReadOut">
            <summary>
            Перемещает текущую позицию в наборе данных на один уровень вложенности вверх.
            </summary>
            <returns>
            Пустая строка. Чтобы получить имя следующего атрибута, необходимо вызывать
            <see cref="M:Terrasoft.Common.XmlDataReader.Read"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.ReadNextCollectionItem">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetStringValue">
            <summary>
            Возвращает строковое представление значения атрибута, которые находятся в текущей позиции
            набора данных.
            </summary>
            <returns>
            Текущее значение атрибута типа <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetGuidValue">
            <summary>
            Возвращает значение текущего атрибута типа <see cref="T:System.Guid"/>.
            </summary>
            <returns>
            Значение текущего атрибута типа <see cref="T:System.Guid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetIntValue">
            <summary>
            Возвращает значение текущего атрибута типа <see cref="T:System.Int32"/>.
            </summary>
            <returns>
            Значение текущего атрибута типа <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetDoubleValue">
            <summary>
            Возвращает значение текущего атрибута типа <see cref="T:System.Double"/>.
            </summary>
            <returns>
            Значение текущего атрибута типа <see cref="T:System.Double"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetDateTimeValue">
            <summary>
            Возвращает значение текущего атрибута типа <see cref="T:System.DateTime"/>.
            </summary>
            <returns>
            Значение текущего атрибута типа <see cref="T:System.DateTime"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetBoolValue">
            <summary>
            Возвращает значение текущего атрибута типа <see cref="T:System.Boolean"/>.
            </summary>
            <returns>
            Значение текущего атрибута типа <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetLocalizableStringValue">
            <summary>
            Возвращает значение текущего атрибута типа <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </summary>
            <returns>
            Значение текущего атрибута типа <see cref="T:Terrasoft.Common.LocalizableString"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetStreamValue">
            <summary>
            Возвращает значение текущего атрибута типа <see cref="T:System.IO.Stream"/>.
            </summary>
            <returns>
            Значение текущего атрибута типа <see cref="T:System.IO.Stream"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetStreamValue(System.IO.Stream)">
            <summary>
            Записывает в заданный поток значение текущего свойства.
            </summary>
            <param name="stream">Поток, в который осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetEnumValue``1">
            <summary>
            Возвращает элемент перечисления, соответствующий значению текущего атрибута.
            </summary>
            <typeparam name="TValue">Значение перечисления любого типа.</typeparam>
            <returns>
            Элемент перечисления, соответствующий текущему значению атрибута.
            </returns>
            <exception cref="T:System.ArgumentException">Если тип <c>TValue</c> не является перечислением.</exception>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetValue(Terrasoft.Common.DataConverter)">
            <summary>
            Возвращает объект, представляющий значение текущего атрибута, преобразованный с помощью переданного 
            экземпляра <see cref="T:Terrasoft.Common.DataConverter"/>.
            </summary>
            <param name="converter">Экземпляр <see cref="T:Terrasoft.Common.DataConverter"/>, с помощью которого осуществляется 
            преобразование.</param>
            <returns>
            Значение текущего атрибута типа <see cref="T:System.Object"/>,
            преобразованный <paramref name="converter"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetValue(System.Type)">
            <summary>
            Возвращает значение текущего атрибута, преобразованное к заданному типу.
            </summary>
            <param name="valueType">Тип.</param>
            <returns>
            Значение текущего атрибута, преобразованное к типу <paramref name="valueType"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">Если в качестве параметра <paramref name="valueType"/> передано 
            значение <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если тип <paramref name="valueType"/> не поддерживается.
            </exception>
        </member>
        <member name="M:Terrasoft.Common.XmlDataReader.GetValue``1">
            <summary>
            Возвращает значение данного типа текущего атрибута, преобразовывая его к этому типу.
            </summary>
            <typeparam name="TValue">Значение любого типа.</typeparam>
            <returns>
            Преобразованное значение атрибута.
            </returns>
            <exception cref="T:System.ArgumentNullException">Если тип данных <c>TValue</c> не существует.</exception>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">
            Если тип данных <c>TValue</c> не поддерживается в системе.
            </exception>
        </member>
        <member name="P:Terrasoft.Common.XmlDataReader.CurrentName">
            <summary>
            Возвращает имя текущего атрибута.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.XmlDataReader.CurrentValue">
            <summary>
            Возвращает значение текущего атрибута.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.XmlDataWriterSettings">
            <summary>
            Предоставляет настройки для класса <see cref="T:Terrasoft.Common.XmlDataWriter"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Common.XmlDataWriterSettings.Indent">
            <summary>
            Возвращает и устанавливает признак использования отступов при формировании Xml.
            </summary>
        </member>
        <member name="T:Terrasoft.Common.XmlDataWriter">
            <summary>
            Представляет методы для последовательной записи данных в формате Xml.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.#ctor(Terrasoft.Common.XmlDataWriterSettings,System.IO.TextWriter)">
            <summary>
            Инициализирует новый экземпляр класса <see cref="T:Terrasoft.Common.XmlDataWriter"/>, используя заданные настройки экземпляра 
            и <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="settings">Настройки для нового экземпляра 
            <see cref="T:Terrasoft.Common.XmlDataWriterSettings"/>.</param>
            <param name="output">Экземпляр <see cref="T:System.IO.TextWriter"/>, с помощью которого осуществляется 
            запись.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.#ctor(Terrasoft.Common.XmlDataWriterSettings,System.IO.Stream)">
            <summary>
            Инициализирует новый экземпляр <see cref="T:Terrasoft.Common.XmlDataWriter"/>, используя заданные настройки экземпляра и поток
            вывода. </summary>
            <param name="settings">Настройки для нового экземпляра 
            <see cref="T:Terrasoft.Common.XmlDataWriterSettings"/>.</param>
            <param name="output">Поток, в который осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.Dispose(System.Boolean)">
            <summary>
            Выполняет удаление, высвобождение и сброс ресурсов.
            </summary>
            <param name="disposing">
            <c>true</c>, если необходимо высвободить и управляемые, и неуправляемые ресурсы; <c>false</c>, если 
            необходимо высвободить только неуправляемые ресурсы.
            </param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.Close">
            <summary>
            Закрывает текущий экземпляр <see cref="T:Terrasoft.Common.XmlDataWriter"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteStartObject(System.String)">
            <summary>
            Начинает запись элемента с заданным именем в поток вывода.
            </summary>
            <param name="name">Имя элемента.</param>
            <remarks>Метод записывает в поток вывода имя элемента и открывающую угловую скобку. </remarks>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteFinishObject">
            <summary>
            Завершает запись текущего элемента.
            </summary>
            <remarks>Метод записывает в поток вывода закрывающую угловую скобку.</remarks>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,System.String,System.String)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.String"/> для элемента с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.String"/>.</param>
            <param name="defValue">Значение по умолчанию для элемента.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,System.Guid,System.Guid)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Guid"/> для элемента с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Guid"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,System.Int32,System.Int32)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Int32"/> для элемента с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Int32"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,System.Decimal,System.Decimal)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Decimal"/> для элемента с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Decimal"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,System.Double,System.Double)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Double"/> для элемента с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Double"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,System.Enum,System.Enum)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Enum"/> для элемента с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Enum"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,System.DateTime,System.DateTime)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.DateTime"/> для элемента с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.DateTime"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,System.Boolean,System.Boolean)">
            <summary>
            Осуществляет запись значения типа <see cref="T:System.Boolean"/> для элемента с заданными именем и
            значением по умолчанию.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:System.Boolean"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString)">
            <summary>
            Осуществляет запись значения типа <see cref="T:Terrasoft.Common.LocalizableString"/> для элемента с заданными 
            именем и значением по умолчанию.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Значение элемента типа <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,System.IO.Stream)">
            <summary>
            Осуществляет запись элемента с заданным именем и значения из заданного потока.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="value">Поток, из которого осуществляется запись.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,Terrasoft.Common.DataConverter,System.Object,System.Object)">
            <summary>
            Осуществляет запись значения элемента с заданными именем и значением <paramref name = "value"/>, 
            преобразованным заданным <paramref name = "converter"/>.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="converter">Преобразователь типов данных.</param>
            <param name="value">Значение.</param>
            <param name="defValue">Значение по умолчанию.</param>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.String,System.Type,System.Object,System.Object)">
            <summary>
            Осуществляет запись значения заданного типа для атрибута с заданными именем и значением по умолчанию.
            </summary>
            <param name="name">Имя элемента.</param>
            <param name="valueType">Тип значения.</param>
            <param name="value">Значение.</param>
            <param name="defValue">Значение по умолчанию.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Если в качестве параметров <paramref name="name"/> или
            <paramref name="valueType"/> передается пустое значение или <c>null</c>. </exception>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">Если в качестве параметра <paramref name="valueType"/>
            передается неподдерживаемый тип данных.</exception>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteStartCollection(System.String)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteFinishCollection">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteValue(System.Object[])">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="M:Terrasoft.Common.XmlDataWriter.WriteSerializableObjectValue(System.String,System.Object,System.Object)">
            <summary>
            Метод не реализован.
            </summary>
        </member>
        <member name="P:Terrasoft.Common.XmlDataWriter.Settings">
            <summary>
            Возвращает настройки для данного экземпляра <see cref="T:Terrasoft.Common.XmlDataWriter"/>.
            </summary>
        </member>
    </members>
</doc>
